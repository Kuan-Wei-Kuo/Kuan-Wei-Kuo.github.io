{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/uploads/me.jpg","path":"uploads/me.jpg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1534854742528},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1534854742530},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1534854742528},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1534854742531},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1534854742531},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1534854742531},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1534854742528},{"_id":"themes/next/README.cn.md","hash":"23e92a2599725db2f8dbd524fbef2087c6d11c7b","modified":1534854742533},{"_id":"themes/next/README.md","hash":"50abff86ffe4113051a409c1ed9261195d2aead0","modified":1534854742533},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1534854742534},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1534854742532},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1534854742532},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1534854742532},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1534854742810},{"_id":"themes/next/_config.yml","hash":"080bbb9e89272d092be4e0642d922c3b476668de","modified":1534855390200},{"_id":"source/_posts/Android-Export-from-sqlite-to-excel.md","hash":"21365a5671fccdd61ae05f75a2f711c9cd33cd25","modified":1534853625864},{"_id":"source/_posts/Android-Bluetooth-API-偵測與搜尋.md","hash":"76e2ec3ab3e349da45071eea843f9861ec2758da","modified":1534853625863},{"_id":"source/_posts/Android-MVP的簡單介紹與使用.md","hash":"6e7fa23edc69eed1eae8cc665b0d3042ff9092e5","modified":1534853625864},{"_id":"source/_posts/Android-RecyclerView-ItemAnimator簡單示範.md","hash":"16e22df3888f9d1d3f0abd5a05ae7372318963e8","modified":1534853625885},{"_id":"source/_posts/Android-MyChartLib-圖表系統.md","hash":"bf7cdb4143b347b6a8d2d3320aab7e1a30a1f9b4","modified":1534855510424},{"_id":"source/_posts/Android-SpriteImage介紹.md","hash":"ac916260807e8b5245f1658df0bd9bcb838dbcda","modified":1534853625885},{"_id":"source/_posts/Android-SeekBar-顏色修改.md","hash":"40529850c25cb12ea8d9e5501a92d8a908c9515b","modified":1534853625885},{"_id":"source/_posts/Android-Toolbar與ActionMode的運用.md","hash":"dc8b2d6d75fc94ee2215547d57ebe4b6fd2b6c8b","modified":1534853625891},{"_id":"source/_posts/Android-View的水平與慣性移動.md","hash":"8ac00a4ef77b87fcfd3656671630168684ad76ab","modified":1534853625893},{"_id":"source/_posts/Android-使用ValueAnimator令顏色漸變轉換.md","hash":"07e549850dbeebaaf15eb3be6ed48173b245176d","modified":1534853625893},{"_id":"source/_posts/Android-猴子也學不會的SQLite-1.md","hash":"0fba9c89d6640ab1d6433064d5defaa94ce2e1a9","modified":1534853625894},{"_id":"source/_posts/Android-使用getIdentifier獲取資源ID.md","hash":"86a3c3acf517a7f642cd4bedfb0ee73b650563c1","modified":1534853625893},{"_id":"source/_posts/Android-猴子也學不會的SQLite-2.md","hash":"c4d0231c6b7987f2491ddc413a6ec7f092f61089","modified":1534853625894},{"_id":"source/_posts/Android-猴子也學不會的SQLite-3.md","hash":"e9b94e2d200cda8863ccf3cfd7ef56af845f5620","modified":1534853625895},{"_id":"source/_posts/Android-自製剪裁圖片元件-CropImageView.md","hash":"d5a05e5e1e293b36b4af0916238d0ae108ff56ed","modified":1534853625895},{"_id":"source/_posts/Android-關於Handler不可不知道的事.md","hash":"d15d1522f596201fda6c4515b07d9da13c1ae5ba","modified":1534853625936},{"_id":"source/_posts/Android-讓Spinner-Item可重複-Repeat-點擊.md","hash":"85b92596e15f5b5b6a3ce077fd2f29a33f687c4a","modified":1534853625936},{"_id":"source/_posts/Android-關於RecyclerView自適應高、寬-WrapContent-的方法.md","hash":"66d45aba7621e58e75f7b97a17680b2f6b905c28","modified":1534853625937},{"_id":"source/_posts/Install-Redis-on-Centos7.md","hash":"cacf96f32d609fab6ef4de308d9db0c920d906e4","modified":1534858663154},{"_id":"source/_posts/SpringMVC-猴子也學不會的系列文-1.md","hash":"e0f3634597664463d0a6d273b631ec3a93b9ee06","modified":1535547087215},{"_id":"source/_posts/SpringMVC-猴子也學不會的系列文-2.md","hash":"240ec4d9d44bab7f824d36d0415d9021ad357b8c","modified":1535551649077},{"_id":"source/_posts/SpringMVC-猴子也學不會的系列文-3.md","hash":"37315af4e1f415494acf08534199181b36c7fa67","modified":1535808119311},{"_id":"source/_posts/從Logdown搬過來.md","hash":"c68b358b875f44c77f7a5b65956cfbd3e1547fbf","modified":1534853625937},{"_id":"source/tags/index.md","hash":"fdffb918969cfe443f13a1f393888e05c9ce8ab9","modified":1534853625938},{"_id":"source/about/index.md","hash":"97d1f00ef5ea0ddd7c046e0f7ba65616ab30aec4","modified":1534853625937},{"_id":"source/uploads/me.jpg","hash":"a880e9ed5edfb653b01c77756eadd197ce274a7d","modified":1534853625938},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1534854742491},{"_id":"themes/next/.git/config","hash":"8e94cc015a498d35202e9fd57e44b3c51e1e5634","modified":1534854742500},{"_id":"themes/next/.git/index","hash":"a65af64964d6ab2b761f1c36a191707d3f36d2ed","modified":1534854743135},{"_id":"themes/next/.git/packed-refs","hash":"69237944e31c16fe545d1f47b0b1e5b1d99660da","modified":1534854742481},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1534854742529},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1534854742530},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"a0a82dbfabdef9a9d7c17a08ceebfb4052d98d81","modified":1534854742529},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1534854742530},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1534854742536},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1534854742537},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1534854742537},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1534854742542},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1534854742541},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1534854742543},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1534854742540},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1534854742543},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1534854742544},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1534854742544},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1534854742546},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1534854742545},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1534854742544},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1534854742545},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1534854742546},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1534854742610},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1534854742559},{"_id":"themes/next/layout/_layout.swig","hash":"2164570bb05db11ee4bcfbbb5d183a759afe9d07","modified":1534854742626},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1534854742802},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1534854742803},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1534854742809},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1534854742802},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1534854742805},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1534854742811},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1534854742812},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1534854743121},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1534854743122},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1534854735585},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1534854743130},{"_id":"source/_posts/Nginx-Tomcat-Load-Balance.md","hash":"c95a596f66a5ae9264788ff1bbc15897db6ed8ac","modified":1534858462663},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1534854742810},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1534854742810},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534854743021},{"_id":"source/_posts/Android-MVP的簡單介紹與使用/MVP_ICON.jpg","hash":"af6a2c52b86554603aae7b789fbe41bcce97d941","modified":1534853625881},{"_id":"source/_posts/Android-MVP的簡單介紹與使用/MVC_ICON.jpg","hash":"14c8407bfc7a060c21b431a5d8f7a72f33046381","modified":1534853625880},{"_id":"source/_posts/Android-MVP的簡單介紹與使用/Usual_MVC.jpg","hash":"5c998636a20777070381acfda91659e8070630da","modified":1534853625881},{"_id":"source/_posts/Android-MyChartLib-圖表系統/columnChartView.png","hash":"b28f44d4a86ac88ace24086c22eb6f7b47affe38","modified":1534853625883},{"_id":"source/_posts/Android-MyChartLib-圖表系統/lineChartView.png","hash":"935116136d11e1645929e7512ecab37de2f49e3c","modified":1534853625884},{"_id":"source/_posts/Android-Toolbar與ActionMode的運用/actionMode_0.png","hash":"fe85bf06065f35b0c222ce267a32ef27e002b723","modified":1534853625892},{"_id":"source/_posts/Android-Toolbar與ActionMode的運用/actionMode_1.png","hash":"6d17cd2a14184b6c6b0a7f57021f681fc20d8da4","modified":1534853625892},{"_id":"source/_posts/SpringMVC-猴子也學不會的系列文-1/bowser.veiw.png","hash":"d595b82d3cb47bca5b07985c982b6496ad4a9663","modified":1534857293947},{"_id":"source/_posts/SpringMVC-猴子也學不會的系列文-2/bowser.view.png","hash":"15e9ef97ad345466045a43ffa9d352c2e1ed3335","modified":1535551268240},{"_id":"source/_posts/SpringMVC-猴子也學不會的系列文-3/console.view.png","hash":"aaa570c14164794888f62aac27af4877f3994957","modified":1535807575656},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1534854735588},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1534854735587},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1534854735587},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1534854735590},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1534854735590},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1534854735586},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1534854735591},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1534854735591},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1534854735592},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1534854735592},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1534854742624},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1534854742625},{"_id":"themes/next/.git/logs/HEAD","hash":"c17f088b5a885078ac4123e530c5f4d87bf1536c","modified":1534854742494},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1534854735589},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1534854742627},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1534854735589},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1534854742627},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1534854742647},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1534854742646},{"_id":"themes/next/layout/_partials/footer.swig","hash":"26e93336dc57a39590ba8dc80564a1d2ad5ff93b","modified":1534854742648},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1534854742648},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1534854742644},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1534854742651},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1534854742652},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1534854742658},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1534854742669},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1534854742671},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1534854742693},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1534854742789},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1534854742789},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1534854742790},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1534854742794},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1534854742795},{"_id":"themes/next/layout/_macro/post.swig","hash":"4ba938822d56c597490f0731893eaa2443942e0f","modified":1534854742643},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1534854742796},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1534854742813},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1534854742813},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1534854742814},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1534854742813},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1534854742815},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1534854742651},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1534854742816},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1534854742815},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1534854742817},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1534854743020},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1534854743021},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1534854743022},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1534854743022},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1534854743022},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1534854743023},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1534854743023},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1534854743024},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1534854743024},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1534854743025},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1534854743025},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1534854742816},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1534854743025},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1534854743026},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1534854743026},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1534854743026},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1534854743027},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1534854743027},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1534854743027},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1534854742645},{"_id":"source/_posts/Android-MyChartLib-圖表系統/pieChartView.png","hash":"0845ca07be9784d4f2431c18cc6801af33ae68c7","modified":1534853625884},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1534854743026},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534854742672},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534854742672},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1534854742796},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534854743004},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534854743004},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534854743005},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534854743019},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1534854743020},{"_id":"themes/next/.git/refs/heads/master","hash":"7999da428ebb87e5a2b27315d8d5123c1ccdfaa5","modified":1534854742494},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1534854742650},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1534854742650},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1534854742666},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1534854742666},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1534854742659},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1534854742665},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1534854742671},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1534854742668},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1534854742672},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1534854742780},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1534854742780},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1534854742781},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1534854742783},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1534854742784},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1534854742784},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1534854742787},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1534854742788},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1534854742788},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1534854742799},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1534854742798},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1534854742798},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1534854742798},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1534854742712},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1534854742712},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1534854742717},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1534854742753},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1534854742767},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1534854742774},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1534854742774},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1534854742775},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1534854742775},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1534854742775},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1534854742776},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1534854742776},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1534854742776},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1534854743002},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1534854743003},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1534854743005},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1534854743005},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1534854743019},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1534854743019},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1534854743020},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1534854743020},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1534854742669},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1534854743028},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1534854743029},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1534854743028},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1534854743029},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1534854743029},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1534854743030},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1534854742673},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1534854743030},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1534854743031},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1534854743032},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1534854743032},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1534854743045},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1534854743033},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1534854743058},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1534854743063},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1534854743073},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1534854743073},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1534854743061},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1534854743073},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1534854743074},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1534854743077},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1534854743076},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1534854743075},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1534854743077},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1534854743077},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1534854743096},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1534854743098},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1534854743098},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1534854743099},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1534854743098},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1534854743099},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1534854743100},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1534854743040},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1534854743102},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1534854743101},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1534854743101},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1534854743102},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1534854743102},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1534854743102},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1534854743103},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1534854743104},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1534854743103},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1534854743104},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1534854743104},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1534854743105},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1534854743105},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1534854743105},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1534854743106},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1534854743107},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1534854743107},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1534854743107},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1534854743114},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1534854743114},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1534854742668},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1534854743117},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1534854743105},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1534854743120},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1534854743097},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1534854743120},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1534854743100},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"c17f088b5a885078ac4123e530c5f4d87bf1536c","modified":1534854742494},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1534854742797},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1534854742818},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1534854742819},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1534854742822},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1534854742823},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1534854742844},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1534854742490},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1534854742868},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1534854742998},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1534854743000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1534854742999},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1534854743001},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1534854743001},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1534854743002},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1534854743007},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1534854743008},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1534854743008},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1534854743009},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1534854743011},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1534854742818},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1534854742797},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1534854743009},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1534854743011},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1534854743000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1534854743012},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1534854743014},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1534854743014},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1534854743014},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1534854743015},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1534854743015},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1534854743016},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1534854743017},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1534854743017},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1534854743017},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1534854743018},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1534854743018},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1534854743031},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1534854743039},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1534854743065},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1534854743064},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1534854743065},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1534854743066},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1534854743067},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1534854743067},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1534854743070},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1534854743071},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1534854743072},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1534854743074},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1534854743075},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1534854743079},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1534854743078},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1534854743036},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1534854743038},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1534854743078},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1534854743114},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1534854743113},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1534854743037},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1534854743094},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1534854743096},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1534854743117},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"c17f088b5a885078ac4123e530c5f4d87bf1536c","modified":1534854742489},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1534854742828},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1534854742831},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1534854742833},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1534854742834},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1534854742834},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1534854742834},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1534854742836},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1534854742837},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1534854742841},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1534854742842},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1534854742842},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1534854742843},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1534854742843},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1534854742844},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1534854742845},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1534854742845},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1534854742846},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1534854742846},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1534854742847},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1534854742847},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1534854742849},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1534854742850},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1534854742851},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1534854742852},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1534854742852},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1534854742853},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1534854742854},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1534854742854},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1534854742855},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1534854742850},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1534854742856},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1534854742858},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1534854742860},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1534854742865},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1534854742867},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1534854742868},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1534854742869},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1534854742855},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1534854742871},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1534854742872},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1534854742873},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1534854742853},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1534854742875},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1534854742876},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1534854742876},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1534854742870},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1534854742877},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1534854742877},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1534854742878},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1534854742845},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1534854742897},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1534854742935},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1534854742977},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1534854742878},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1534854742877},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1534854742997},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1534854743013},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1534854743013},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1534854743016},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1534854743034},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1534854743034},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1534854743035},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1534854743035},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1534854743068},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1534854742875},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1534854743068},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1534854743069},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1534854743068},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1534854742983},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1534854743082},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1534854743085},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1534854743093},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1534854743069},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1534854743034},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1534854743070},{"_id":"themes/next/.git/objects/pack/pack-bbbd72553fe022b4a7a13364ff31bab2af951067.idx","hash":"3804b3054b37ca17583bac817c2033446d2d9643","modified":1534854742148},{"_id":"source/_posts/Android-SpriteImage介紹/test2.png","hash":"1f737d17097aaf9a702512f1dfe86baca5f7196a","modified":1534853625890},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1534854743044},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1534854743112},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1534854743090},{"_id":"source/_posts/Android-自製剪裁圖片元件-CropImageView/Screenshot_2016-01-30-14-20-02.png","hash":"60b03b0af2f2c1bed9a285a7d530a82eb84aed7f","modified":1534853625935},{"_id":"source/_posts/Android-自製剪裁圖片元件-CropImageView/Screenshot_2016-01-30-14-19-52.png","hash":"c9bc2e80e87f8e83dba493d60a0150522a594387","modified":1534853625928},{"_id":"themes/next/.git/objects/pack/pack-bbbd72553fe022b4a7a13364ff31bab2af951067.pack","hash":"fb7b6ffa1c0438a128743717d1f1acdf6a85f518","modified":1534854742322},{"_id":"public/search.xml","hash":"6d10469a5e5e6d70cabc41882ad29746cef3585f","modified":1535808170542},{"_id":"public/tags/index.html","hash":"b7ff6cb968b7d02db8dae89f2536a6044e06d6eb","modified":1535808170625},{"_id":"public/about/index.html","hash":"e45bcc91dde0751958538301e3252addce76b74a","modified":1535808170625},{"_id":"public/2018/08/17/從Logdown搬過來/index.html","hash":"a25d4d402f715590a6839dd62103858b1e6f4ac0","modified":1535808170625},{"_id":"public/2015/12/29/Android-使用getIdentifier獲取資源ID/index.html","hash":"731f3d0d83c37ab9de8898764fe8e3624a0fb232","modified":1535808170626},{"_id":"public/2015/08/08/Android-RecyclerView-ItemAnimator簡單示範/index.html","hash":"ad44569a41ad02f79fa0b3909fb2df51eeeb5574","modified":1535808170626},{"_id":"public/archives/page/3/index.html","hash":"53f61cbf5fb624e52fbb8c6c9d85f371aa840e9b","modified":1535808170626},{"_id":"public/archives/2015/index.html","hash":"8c41cea6eaad5ac2e971a4130129830d589b0c7e","modified":1535808170626},{"_id":"public/archives/2015/08/index.html","hash":"859182a8695db7d13af63a1f49e325f133991bd1","modified":1535808170626},{"_id":"public/archives/2015/11/index.html","hash":"b46e779b61be4d13db8c3606f85795ea2748a57f","modified":1535808170626},{"_id":"public/archives/2015/12/index.html","hash":"60c86d993927df4c43f21045905b67293645a553","modified":1535808170626},{"_id":"public/archives/2016/page/2/index.html","hash":"e1e455c35c0d910c5b5e2d532d5c3105a806657e","modified":1535808170626},{"_id":"public/archives/2016/01/index.html","hash":"6136a9f59cb64732637be9fddd9607d6ac042ab7","modified":1535808170626},{"_id":"public/archives/2016/02/index.html","hash":"4abf8e5d852906692714dbe8a53c6ad61cad97dc","modified":1535808170626},{"_id":"public/archives/2016/03/index.html","hash":"0d2002d56710a9a3aba45158d611750afaaf3ac8","modified":1535808170626},{"_id":"public/archives/2016/04/index.html","hash":"b96004742bbe38361d2dd57e5b4184276a66d6e6","modified":1535808170626},{"_id":"public/archives/2016/06/index.html","hash":"1a7497d426d698706fa8d632d3ae3f5c8b11dbe5","modified":1535808170626},{"_id":"public/archives/2018/index.html","hash":"35a18f4c1b5aff6f3aabd98c950de5d63edc8e60","modified":1535808170626},{"_id":"public/archives/2018/01/index.html","hash":"eb05b3eb32b92c83bbe66901a8810081fc2c08d8","modified":1535808170626},{"_id":"public/archives/2018/02/index.html","hash":"b9d62d9b5d7344e67f651f45590ad7ded5e6c06e","modified":1535808170626},{"_id":"public/archives/2018/08/index.html","hash":"af6568f0651c32487b03aeb3ec0c3f1db026f01b","modified":1535808170626},{"_id":"public/archives/2018/09/index.html","hash":"33a1a38d625129db3d60b8a4330e86dbed3e9fd2","modified":1535808170627},{"_id":"public/tags/SQLite/index.html","hash":"fd35547478576ee9ed025b4ecb00c7268ff5af21","modified":1535808170627},{"_id":"public/tags/Android/page/2/index.html","hash":"e6e71303dc67bf51c4b0e5ee3deae61d10367354","modified":1535808170627},{"_id":"public/tags/Redis/index.html","hash":"0065db07a9fc3e5651fd9ae2e4aa33d1bd5114ce","modified":1535808170627},{"_id":"public/tags/Spring/index.html","hash":"77ac1bcb766952c777cebf0db06bc3ea7a4be965","modified":1535808170627},{"_id":"public/tags/SpringMVC/index.html","hash":"d0813712b8a91dc12712e31de12385505d91243d","modified":1535808170627},{"_id":"public/tags/生活/index.html","hash":"a6fa6a3b06c92e1e7e2308b05f4180fe3ba909e4","modified":1535808170627},{"_id":"public/tags/Nginx/index.html","hash":"81890b28a32ed63779d00b4307b87d9221b13bd4","modified":1535808170628},{"_id":"public/tags/Tomcat/index.html","hash":"851c207ad64384b3e10cd0df0d16c28aa321cfef","modified":1535808170628},{"_id":"public/2018/09/01/SpringMVC-猴子也學不會的系列文-3/index.html","hash":"8d33d505261e763f4d84081277e85c7a46701ec2","modified":1535808170628},{"_id":"public/2018/08/29/SpringMVC-猴子也學不會的系列文-2/index.html","hash":"dc9093ab6259c12bbe5ee9665e19d48df7e38fbc","modified":1535808170628},{"_id":"public/2018/08/21/SpringMVC-猴子也學不會的系列文-1/index.html","hash":"e9af2f9fa5c4d35f1e45840ff67d04c89312effd","modified":1535808170628},{"_id":"public/2018/02/01/Install-Redis-on-Centos7/index.html","hash":"866f920a3bc3568f3097831d4f33f48243dc875f","modified":1535808170628},{"_id":"public/2018/01/20/Nginx-Tomcat-Load-Balance/index.html","hash":"9e50ea1a07794bd74a51f929300fbe210894b597","modified":1535808170628},{"_id":"public/2016/06/20/Android-Bluetooth-API-偵測與搜尋/index.html","hash":"890f6d9661eb989b94a846e6fc03df90352cf6ed","modified":1535808170628},{"_id":"public/2016/04/24/Android-SpriteImage介紹/index.html","hash":"3178624004ed3b007a4b3744d11c29037b19a378","modified":1535808170628},{"_id":"public/2016/04/01/Android-View的水平與慣性移動/index.html","hash":"b0cd79e68dd9fd84d5f2c10041e3e2a0ace1ef34","modified":1535808170628},{"_id":"public/2016/03/28/Android-MyChartLib-圖表系統/index.html","hash":"b8ba20e6bfe71f2bdd4df5a813191929786bf6cb","modified":1535808170628},{"_id":"public/2016/03/01/Android-讓Spinner-Item可重複-Repeat-點擊/index.html","hash":"f3bdd2a7fe7680ebcf6ce53603b031210f4ff8ce","modified":1535808170628},{"_id":"public/2016/02/20/Android-關於RecyclerView自適應高、寬-WrapContent-的方法/index.html","hash":"ac2bfcd0a06a06163744bd3cc0f7a74cf0b3abc1","modified":1535808170628},{"_id":"public/2016/02/05/Android-使用ValueAnimator令顏色漸變轉換/index.html","hash":"1c4c070a4911c72ed2fae490971cfe91e8adeeb0","modified":1535808170629},{"_id":"public/2016/01/30/Android-自製剪裁圖片元件-CropImageView/index.html","hash":"3f6728ed8c90fd36afecb1ff32cd09a5cdbf04e8","modified":1535808170629},{"_id":"public/2016/01/18/Android-猴子也學不會的SQLite-3/index.html","hash":"6ea82490f6d478e133d049b404c81f461b036c9e","modified":1535808170629},{"_id":"public/2016/01/10/Android-猴子也學不會的SQLite-2/index.html","hash":"7b106ec6074da8a1195770ca1c616e21d43e8952","modified":1535808170629},{"_id":"public/2016/01/04/Android-猴子也學不會的SQLite-1/index.html","hash":"7849ab1e63db808392cc71ab300b3ee527624f93","modified":1535808170629},{"_id":"public/2015/12/21/Android-Export-from-sqlite-to-excel/index.html","hash":"ae537e40f83d4776a279bfd650e1e7ce95fc037e","modified":1535808170629},{"_id":"public/2015/11/19/Android-MVP的簡單介紹與使用/index.html","hash":"3a1394280c9cea71068eb187ea15bfd9f9ec585b","modified":1535808170629},{"_id":"public/2015/11/19/Android-Toolbar與ActionMode的運用/index.html","hash":"f976d631c0c482c45a4fb8608fb025e9afd81ef2","modified":1535808170629},{"_id":"public/2015/11/17/Android-關於Handler不可不知道的事/index.html","hash":"87cf1fdebe5a33053798b6c7f24fa94ff07bbe85","modified":1535808170629},{"_id":"public/2015/08/31/Android-SeekBar-顏色修改/index.html","hash":"af45d5c1982c729683669653c61a1c5c72233951","modified":1535808170629},{"_id":"public/archives/index.html","hash":"38fa601e84dcd44121e90a10fc6102ce89364fd4","modified":1535808170629},{"_id":"public/archives/page/2/index.html","hash":"794aa88eaf3bd4d44b51969bd07132188820dea6","modified":1535808170629},{"_id":"public/archives/2016/index.html","hash":"b20dce502cc1925303d6db0810d6f5447fd6cecc","modified":1535808170630},{"_id":"public/index.html","hash":"5682c610130b16ca78dc452cbe6cca88003df7b3","modified":1535808170630},{"_id":"public/page/2/index.html","hash":"737e810118919d3f942b1682301b0a34f725e5c3","modified":1535808170630},{"_id":"public/page/3/index.html","hash":"cbb574647883dd9548e2808d1b56bb1e189bd915","modified":1535808170630},{"_id":"public/page/4/index.html","hash":"c704ab1616d028778b02599f2de690ff693c2ab2","modified":1535808170630},{"_id":"public/page/5/index.html","hash":"f1a43a91fd6fa378764c7848211c00016ef5a1f5","modified":1535808170630},{"_id":"public/tags/Android/index.html","hash":"cfa63842273f50c01858f12100909a33865d13f0","modified":1535808170630},{"_id":"public/uploads/me.jpg","hash":"a880e9ed5edfb653b01c77756eadd197ce274a7d","modified":1535808170655},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1535808170655},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1535808170655},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1535808170655},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1535808170655},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1535808170655},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1535808170655},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1535808170655},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1535808170655},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1535808170656},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1535808170656},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535808170656},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1535808170656},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1535808170656},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1535808170656},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1535808170656},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1535808170656},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1535808170656},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1535808170656},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1535808170656},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1535808170656},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1535808170656},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1535808170656},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1535808170656},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1535808170656},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1535808170657},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1535808170657},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1535808170657},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1535808170657},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1535808170657},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1535808170657},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1535808170657},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1535808170657},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1535808170657},{"_id":"public/2018/08/21/SpringMVC-猴子也學不會的系列文-1/bowser.veiw.png","hash":"d595b82d3cb47bca5b07985c982b6496ad4a9663","modified":1535808170657},{"_id":"public/2018/08/29/SpringMVC-猴子也學不會的系列文-2/bowser.view.png","hash":"15e9ef97ad345466045a43ffa9d352c2e1ed3335","modified":1535808170657},{"_id":"public/2018/09/01/SpringMVC-猴子也學不會的系列文-3/console.view.png","hash":"aaa570c14164794888f62aac27af4877f3994957","modified":1535808170657},{"_id":"public/2015/11/19/Android-Toolbar與ActionMode的運用/actionMode_0.png","hash":"fe85bf06065f35b0c222ce267a32ef27e002b723","modified":1535808170657},{"_id":"public/2015/11/19/Android-Toolbar與ActionMode的運用/actionMode_1.png","hash":"6d17cd2a14184b6c6b0a7f57021f681fc20d8da4","modified":1535808170657},{"_id":"public/2015/11/19/Android-MVP的簡單介紹與使用/MVC_ICON.jpg","hash":"14c8407bfc7a060c21b431a5d8f7a72f33046381","modified":1535808170657},{"_id":"public/2015/11/19/Android-MVP的簡單介紹與使用/MVP_ICON.jpg","hash":"af6a2c52b86554603aae7b789fbe41bcce97d941","modified":1535808170657},{"_id":"public/2015/11/19/Android-MVP的簡單介紹與使用/Usual_MVC.jpg","hash":"5c998636a20777070381acfda91659e8070630da","modified":1535808170657},{"_id":"public/2016/03/28/Android-MyChartLib-圖表系統/columnChartView.png","hash":"b28f44d4a86ac88ace24086c22eb6f7b47affe38","modified":1535808170658},{"_id":"public/2016/03/28/Android-MyChartLib-圖表系統/lineChartView.png","hash":"935116136d11e1645929e7512ecab37de2f49e3c","modified":1535808170658},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1535808171338},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1535808171346},{"_id":"public/2016/03/28/Android-MyChartLib-圖表系統/pieChartView.png","hash":"0845ca07be9784d4f2431c18cc6801af33ae68c7","modified":1535808171351},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1535808171366},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1535808171366},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1535808171366},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1535808171366},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1535808171366},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1535808171367},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1535808171367},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1535808171367},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1535808171367},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1535808171367},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1535808171367},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1535808171367},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1535808171367},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1535808171367},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1535808171367},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1535808171367},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1535808171367},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1535808171367},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1535808171367},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1535808171367},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1535808171367},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1535808171368},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1535808171368},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1535808171368},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1535808171369},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1535808171369},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1535808171369},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1535808171369},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1535808171369},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1535808171369},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1535808171369},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1535808171370},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1535808171370},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1535808171370},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1535808171370},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1535808171370},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1535808171371},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1535808171371},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1535808171371},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1535808171371},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1535808171371},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1535808171371},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1535808171371},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1535808171371},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1535808171371},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1535808171371},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1535808171371},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1535808171371},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1535808171371},{"_id":"public/css/main.css","hash":"c29cbc070f1f42952267cde38a212600adb62bf7","modified":1535808171371},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1535808171372},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1535808171372},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1535808171372},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1535808171372},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1535808171372},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1535808171372},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1535808171372},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1535808171372},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1535808171372},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1535808171372},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1535808171372},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1535808171372},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1535808171372},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1535808171373},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1535808171373},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1535808171373},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1535808171373},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1535808171373},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1535808171373},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1535808171373},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1535808171373},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1535808171373},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1535808171374},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1535808171448},{"_id":"public/2016/04/24/Android-SpriteImage介紹/test2.png","hash":"1f737d17097aaf9a702512f1dfe86baca5f7196a","modified":1535808171469},{"_id":"public/2016/01/30/Android-自製剪裁圖片元件-CropImageView/Screenshot_2016-01-30-14-20-02.png","hash":"60b03b0af2f2c1bed9a285a7d530a82eb84aed7f","modified":1535808171584},{"_id":"public/2016/01/30/Android-自製剪裁圖片元件-CropImageView/Screenshot_2016-01-30-14-19-52.png","hash":"c9bc2e80e87f8e83dba493d60a0150522a594387","modified":1535808171591}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2018-08-16T10:04:05.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-08-16 18:04:05\ntype: \"tags\"\n---\n","updated":"2018-08-21T12:13:45.938Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjljgj0qt0001skvcabris5ai","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"關於北爛碼農的誕生","date":"2018-08-16T09:59:15.000Z","_content":"\n# 我說嗨起來\n嗨，各位，大葛喝，我就是那個北爛的碼農，以前主要項目是Android，但後面陰錯陽差地進入後端的行列，目前主要致力於Spring、J2EE以及前端的開發。\n\n# 研究技術的M屬性\n認識我的人都知道，我就是超級M...平常也喜歡東摸西摸，看能不能摸出一張好牌。\n\n# 努力打的第三點\n若大家有蝦咪想要找我的事情，歡迎...留言。\n\nk.kuanwei@gmail.com","source":"about/index.md","raw":"---\ntitle: 關於北爛碼農的誕生\ndate: 2018-08-16 17:59:15\n---\n\n# 我說嗨起來\n嗨，各位，大葛喝，我就是那個北爛的碼農，以前主要項目是Android，但後面陰錯陽差地進入後端的行列，目前主要致力於Spring、J2EE以及前端的開發。\n\n# 研究技術的M屬性\n認識我的人都知道，我就是超級M...平常也喜歡東摸西摸，看能不能摸出一張好牌。\n\n# 努力打的第三點\n若大家有蝦咪想要找我的事情，歡迎...留言。\n\nk.kuanwei@gmail.com","updated":"2018-08-21T12:13:45.937Z","path":"about/index.html","comments":1,"layout":"page","_id":"cjljgj0qv0003skvckts3gfq8","content":"<h1 id=\"我說嗨起來\"><a href=\"#我說嗨起來\" class=\"headerlink\" title=\"我說嗨起來\"></a>我說嗨起來</h1><p>嗨，各位，大葛喝，我就是那個北爛的碼農，以前主要項目是Android，但後面陰錯陽差地進入後端的行列，目前主要致力於Spring、J2EE以及前端的開發。</p>\n<h1 id=\"研究技術的M屬性\"><a href=\"#研究技術的M屬性\" class=\"headerlink\" title=\"研究技術的M屬性\"></a>研究技術的M屬性</h1><p>認識我的人都知道，我就是超級M…平常也喜歡東摸西摸，看能不能摸出一張好牌。</p>\n<h1 id=\"努力打的第三點\"><a href=\"#努力打的第三點\" class=\"headerlink\" title=\"努力打的第三點\"></a>努力打的第三點</h1><p>若大家有蝦咪想要找我的事情，歡迎…留言。</p>\n<p><a href=\"mailto:k.kuanwei@gmail.com\" target=\"_blank\" rel=\"noopener\">k.kuanwei@gmail.com</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"我說嗨起來\"><a href=\"#我說嗨起來\" class=\"headerlink\" title=\"我說嗨起來\"></a>我說嗨起來</h1><p>嗨，各位，大葛喝，我就是那個北爛的碼農，以前主要項目是Android，但後面陰錯陽差地進入後端的行列，目前主要致力於Spring、J2EE以及前端的開發。</p>\n<h1 id=\"研究技術的M屬性\"><a href=\"#研究技術的M屬性\" class=\"headerlink\" title=\"研究技術的M屬性\"></a>研究技術的M屬性</h1><p>認識我的人都知道，我就是超級M…平常也喜歡東摸西摸，看能不能摸出一張好牌。</p>\n<h1 id=\"努力打的第三點\"><a href=\"#努力打的第三點\" class=\"headerlink\" title=\"努力打的第三點\"></a>努力打的第三點</h1><p>若大家有蝦咪想要找我的事情，歡迎…留言。</p>\n<p><a href=\"mailto:k.kuanwei@gmail.com\" target=\"_blank\" rel=\"noopener\">k.kuanwei@gmail.com</a></p>\n"}],"Post":[{"title":"Android. Export from sqlite to excel","date":"2015-12-21T02:25:00.000Z","_content":"\n最近剛好有學習到如何將SQLite的資料拉出來建立一個Excel在手機上。\n\n# 下載[Jexcel.jar](http://www.java2s.com/Code/Jar/j/Downloadjxljar.htm)\n# 建立AsyncTask\n```java\npublic class ExportDatabaseExcelTask extends AsyncTask<String, Void, Boolean> {\n\n    private Context context;\n\n    // 這個可以快速顯示一個Progress\n    private ProgressDialog progressDialog; \n\n\n    public ExportDatabaseExcelTask(Context context) {\n        this.context = context;\n        progressDialog = new ProgressDialog(context);\n    }\n    \n    @Override\n    protected void onPreExecute() {\n        super.onPreExecute();\n        progressDialog.setMessage(\"正在匯出Excel檔\");\n        progressDialog.show();\n    }\n\n    @Override\n    protected void onPostExecute(Boolean aBoolean) {\n        super.onPostExecute(aBoolean);\n        if(progressDialog.isShowing())\n            progressDialog.dismiss();\n\n        if(!aBoolean)\n            Toast.makeText(context, \"匯出失敗\", Toast.LENGTH_SHORT).show();\n    }\n    \n    @Override\n    protected Boolean doInBackground(String... params) {\n        // 創立Excel的檔名\n        String fileName = \"Test\" + \".xls\";\n\n        // 選擇要匯出的Table\n        SQLiteManager sqLiteManager = new SQLiteManager(context);\n        SQLiteDatabase db = sqLiteManager.getReadableDatabase();\n        Cursor cursor = db.rawQuery(\"SELECT * FROM \" + CurrentAccountData.getMoneyTableName(), null);\n       \n        // 將會在內部空間內建立一個資料夾\n        File exportDir = new File(Environment.getExternalStorageDirectory().getPath(), \"TestExport\");\n\n        if (!exportDir.exists())\n            exportDir.mkdirs();\n\n        // 在TestExport下創建一個檔案\n        File file = new File(exportDir, fileName);\n        \n        /設定輸出相關格式\n        WorkbookSettings wbSettings = new WorkbookSettings();\n        wbSettings.setLocale(new Locale(\"en\", \"EN\"));\n        WritableWorkbook workbook;\n        try {\n            // 創立一個Excel檔\n            workbook = Workbook.createWorkbook(file, wbSettings);\n            \n            // 建立分頁\n            WritableSheet sheet = workbook.createSheet(CurrentAccountData.getAccountName(), 0);\n            /**\n            * 如果要建立第二分頁就會像 workbook.createSheet(CurrentAccountData.getAccountName(), 1);\n            */\n\n            //先建立我們Excel的標題\n            sheet.addCell(new Label(0, 0, \"學號\"));\n            sheet.addCell(new Label(1, 0, \"姓名\"));\n\n            //開始放入表的資料，這邊請都用getString()\n            if (cursor.moveToFirst()) {\n                do {\n                    int i = cursor.getPosition() + 1;\n                    sheet.addCell(new Label(0, i, cursor.getString(0)));\n                    sheet.addCell(new Label(1, i, cursor.getString(1)));\n                } \n                while (cursor.moveToNext());\n            }\n            cursor.close();\n            workbook.write();\n            workbook.close();\n            return true;\n        } catch (IOException e) {\n            e.printStackTrace();\n            return false;\n        }  catch (RowsExceededException e) {\n            e.printStackTrace();\n            return false;\n        } catch (WriteException e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n}\n```\nDone！\n其實不管是Csv還是Excel最終都還是得將Table的資料一一取出來，然後再使用迴圈建立資料，因此使用AsnyTask是有其道理的，有人會說怎麼不使用Thread、Handler，其實效果大同小異。\n\n但AsnyTask是為了Android而產生的，它在Android比上述兩個速度更快，美中不足的是沒辦法像Thread可以運算非常大量的資料。","source":"_posts/Android-Export-from-sqlite-to-excel.md","raw":"---\ntitle: Android. Export from sqlite to excel\ndate: 2015-12-21 10:25:00\ntags: Android\n---\n\n最近剛好有學習到如何將SQLite的資料拉出來建立一個Excel在手機上。\n\n# 下載[Jexcel.jar](http://www.java2s.com/Code/Jar/j/Downloadjxljar.htm)\n# 建立AsyncTask\n```java\npublic class ExportDatabaseExcelTask extends AsyncTask<String, Void, Boolean> {\n\n    private Context context;\n\n    // 這個可以快速顯示一個Progress\n    private ProgressDialog progressDialog; \n\n\n    public ExportDatabaseExcelTask(Context context) {\n        this.context = context;\n        progressDialog = new ProgressDialog(context);\n    }\n    \n    @Override\n    protected void onPreExecute() {\n        super.onPreExecute();\n        progressDialog.setMessage(\"正在匯出Excel檔\");\n        progressDialog.show();\n    }\n\n    @Override\n    protected void onPostExecute(Boolean aBoolean) {\n        super.onPostExecute(aBoolean);\n        if(progressDialog.isShowing())\n            progressDialog.dismiss();\n\n        if(!aBoolean)\n            Toast.makeText(context, \"匯出失敗\", Toast.LENGTH_SHORT).show();\n    }\n    \n    @Override\n    protected Boolean doInBackground(String... params) {\n        // 創立Excel的檔名\n        String fileName = \"Test\" + \".xls\";\n\n        // 選擇要匯出的Table\n        SQLiteManager sqLiteManager = new SQLiteManager(context);\n        SQLiteDatabase db = sqLiteManager.getReadableDatabase();\n        Cursor cursor = db.rawQuery(\"SELECT * FROM \" + CurrentAccountData.getMoneyTableName(), null);\n       \n        // 將會在內部空間內建立一個資料夾\n        File exportDir = new File(Environment.getExternalStorageDirectory().getPath(), \"TestExport\");\n\n        if (!exportDir.exists())\n            exportDir.mkdirs();\n\n        // 在TestExport下創建一個檔案\n        File file = new File(exportDir, fileName);\n        \n        /設定輸出相關格式\n        WorkbookSettings wbSettings = new WorkbookSettings();\n        wbSettings.setLocale(new Locale(\"en\", \"EN\"));\n        WritableWorkbook workbook;\n        try {\n            // 創立一個Excel檔\n            workbook = Workbook.createWorkbook(file, wbSettings);\n            \n            // 建立分頁\n            WritableSheet sheet = workbook.createSheet(CurrentAccountData.getAccountName(), 0);\n            /**\n            * 如果要建立第二分頁就會像 workbook.createSheet(CurrentAccountData.getAccountName(), 1);\n            */\n\n            //先建立我們Excel的標題\n            sheet.addCell(new Label(0, 0, \"學號\"));\n            sheet.addCell(new Label(1, 0, \"姓名\"));\n\n            //開始放入表的資料，這邊請都用getString()\n            if (cursor.moveToFirst()) {\n                do {\n                    int i = cursor.getPosition() + 1;\n                    sheet.addCell(new Label(0, i, cursor.getString(0)));\n                    sheet.addCell(new Label(1, i, cursor.getString(1)));\n                } \n                while (cursor.moveToNext());\n            }\n            cursor.close();\n            workbook.write();\n            workbook.close();\n            return true;\n        } catch (IOException e) {\n            e.printStackTrace();\n            return false;\n        }  catch (RowsExceededException e) {\n            e.printStackTrace();\n            return false;\n        } catch (WriteException e) {\n            e.printStackTrace();\n            return false;\n        }\n    }\n}\n```\nDone！\n其實不管是Csv還是Excel最終都還是得將Table的資料一一取出來，然後再使用迴圈建立資料，因此使用AsnyTask是有其道理的，有人會說怎麼不使用Thread、Handler，其實效果大同小異。\n\n但AsnyTask是為了Android而產生的，它在Android比上述兩個速度更快，美中不足的是沒辦法像Thread可以運算非常大量的資料。","slug":"Android-Export-from-sqlite-to-excel","published":1,"updated":"2018-08-21T12:13:45.864Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0qk0000skvcag2f5xc5","content":"<p>最近剛好有學習到如何將SQLite的資料拉出來建立一個Excel在手機上。</p>\n<h1 id=\"下載Jexcel-jar\"><a href=\"#下載Jexcel-jar\" class=\"headerlink\" title=\"下載Jexcel.jar\"></a>下載<a href=\"http://www.java2s.com/Code/Jar/j/Downloadjxljar.htm\" target=\"_blank\" rel=\"noopener\">Jexcel.jar</a></h1><h1 id=\"建立AsyncTask\"><a href=\"#建立AsyncTask\" class=\"headerlink\" title=\"建立AsyncTask\"></a>建立AsyncTask</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExportDatabaseExcelTask</span> <span class=\"keyword\">extends</span> <span class=\"title\">AsyncTask</span>&lt;<span class=\"title\">String</span>, <span class=\"title\">Void</span>, <span class=\"title\">Boolean</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Context context;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 這個可以快速顯示一個Progress</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ProgressDialog progressDialog; </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ExportDatabaseExcelTask</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.context = context;</span><br><span class=\"line\">        progressDialog = <span class=\"keyword\">new</span> ProgressDialog(context);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onPreExecute</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onPreExecute();</span><br><span class=\"line\">        progressDialog.setMessage(<span class=\"string\">\"正在匯出Excel檔\"</span>);</span><br><span class=\"line\">        progressDialog.show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onPostExecute</span><span class=\"params\">(Boolean aBoolean)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onPostExecute(aBoolean);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(progressDialog.isShowing())</span><br><span class=\"line\">            progressDialog.dismiss();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!aBoolean)</span><br><span class=\"line\">            Toast.makeText(context, <span class=\"string\">\"匯出失敗\"</span>, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> Boolean <span class=\"title\">doInBackground</span><span class=\"params\">(String... params)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 創立Excel的檔名</span></span><br><span class=\"line\">        String fileName = <span class=\"string\">\"Test\"</span> + <span class=\"string\">\".xls\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 選擇要匯出的Table</span></span><br><span class=\"line\">        SQLiteManager sqLiteManager = <span class=\"keyword\">new</span> SQLiteManager(context);</span><br><span class=\"line\">        SQLiteDatabase db = sqLiteManager.getReadableDatabase();</span><br><span class=\"line\">        Cursor cursor = db.rawQuery(<span class=\"string\">\"SELECT * FROM \"</span> + CurrentAccountData.getMoneyTableName(), <span class=\"keyword\">null</span>);</span><br><span class=\"line\">       </span><br><span class=\"line\">        <span class=\"comment\">// 將會在內部空間內建立一個資料夾</span></span><br><span class=\"line\">        File exportDir = <span class=\"keyword\">new</span> File(Environment.getExternalStorageDirectory().getPath(), <span class=\"string\">\"TestExport\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!exportDir.exists())</span><br><span class=\"line\">            exportDir.mkdirs();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 在TestExport下創建一個檔案</span></span><br><span class=\"line\">        File file = <span class=\"keyword\">new</span> File(exportDir, fileName);</span><br><span class=\"line\">        </span><br><span class=\"line\">        /設定輸出相關格式</span><br><span class=\"line\">        WorkbookSettings wbSettings = <span class=\"keyword\">new</span> WorkbookSettings();</span><br><span class=\"line\">        wbSettings.setLocale(<span class=\"keyword\">new</span> Locale(<span class=\"string\">\"en\"</span>, <span class=\"string\">\"EN\"</span>));</span><br><span class=\"line\">        WritableWorkbook workbook;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 創立一個Excel檔</span></span><br><span class=\"line\">            workbook = Workbook.createWorkbook(file, wbSettings);</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 建立分頁</span></span><br><span class=\"line\">            WritableSheet sheet = workbook.createSheet(CurrentAccountData.getAccountName(), <span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">            * 如果要建立第二分頁就會像 workbook.createSheet(CurrentAccountData.getAccountName(), 1);</span></span><br><span class=\"line\"><span class=\"comment\">            */</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//先建立我們Excel的標題</span></span><br><span class=\"line\">            sheet.addCell(<span class=\"keyword\">new</span> Label(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"string\">\"學號\"</span>));</span><br><span class=\"line\">            sheet.addCell(<span class=\"keyword\">new</span> Label(<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"string\">\"姓名\"</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//開始放入表的資料，這邊請都用getString()</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cursor.moveToFirst()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> i = cursor.getPosition() + <span class=\"number\">1</span>;</span><br><span class=\"line\">                    sheet.addCell(<span class=\"keyword\">new</span> Label(<span class=\"number\">0</span>, i, cursor.getString(<span class=\"number\">0</span>)));</span><br><span class=\"line\">                    sheet.addCell(<span class=\"keyword\">new</span> Label(<span class=\"number\">1</span>, i, cursor.getString(<span class=\"number\">1</span>)));</span><br><span class=\"line\">                &#125; </span><br><span class=\"line\">                <span class=\"keyword\">while</span> (cursor.moveToNext());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            cursor.close();</span><br><span class=\"line\">            workbook.write();</span><br><span class=\"line\">            workbook.close();</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;  <span class=\"keyword\">catch</span> (RowsExceededException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (WriteException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Done！<br>其實不管是Csv還是Excel最終都還是得將Table的資料一一取出來，然後再使用迴圈建立資料，因此使用AsnyTask是有其道理的，有人會說怎麼不使用Thread、Handler，其實效果大同小異。</p>\n<p>但AsnyTask是為了Android而產生的，它在Android比上述兩個速度更快，美中不足的是沒辦法像Thread可以運算非常大量的資料。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近剛好有學習到如何將SQLite的資料拉出來建立一個Excel在手機上。</p>\n<h1 id=\"下載Jexcel-jar\"><a href=\"#下載Jexcel-jar\" class=\"headerlink\" title=\"下載Jexcel.jar\"></a>下載<a href=\"http://www.java2s.com/Code/Jar/j/Downloadjxljar.htm\" target=\"_blank\" rel=\"noopener\">Jexcel.jar</a></h1><h1 id=\"建立AsyncTask\"><a href=\"#建立AsyncTask\" class=\"headerlink\" title=\"建立AsyncTask\"></a>建立AsyncTask</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ExportDatabaseExcelTask</span> <span class=\"keyword\">extends</span> <span class=\"title\">AsyncTask</span>&lt;<span class=\"title\">String</span>, <span class=\"title\">Void</span>, <span class=\"title\">Boolean</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Context context;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 這個可以快速顯示一個Progress</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ProgressDialog progressDialog; </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ExportDatabaseExcelTask</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.context = context;</span><br><span class=\"line\">        progressDialog = <span class=\"keyword\">new</span> ProgressDialog(context);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onPreExecute</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onPreExecute();</span><br><span class=\"line\">        progressDialog.setMessage(<span class=\"string\">\"正在匯出Excel檔\"</span>);</span><br><span class=\"line\">        progressDialog.show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onPostExecute</span><span class=\"params\">(Boolean aBoolean)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onPostExecute(aBoolean);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(progressDialog.isShowing())</span><br><span class=\"line\">            progressDialog.dismiss();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!aBoolean)</span><br><span class=\"line\">            Toast.makeText(context, <span class=\"string\">\"匯出失敗\"</span>, Toast.LENGTH_SHORT).show();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> Boolean <span class=\"title\">doInBackground</span><span class=\"params\">(String... params)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 創立Excel的檔名</span></span><br><span class=\"line\">        String fileName = <span class=\"string\">\"Test\"</span> + <span class=\"string\">\".xls\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 選擇要匯出的Table</span></span><br><span class=\"line\">        SQLiteManager sqLiteManager = <span class=\"keyword\">new</span> SQLiteManager(context);</span><br><span class=\"line\">        SQLiteDatabase db = sqLiteManager.getReadableDatabase();</span><br><span class=\"line\">        Cursor cursor = db.rawQuery(<span class=\"string\">\"SELECT * FROM \"</span> + CurrentAccountData.getMoneyTableName(), <span class=\"keyword\">null</span>);</span><br><span class=\"line\">       </span><br><span class=\"line\">        <span class=\"comment\">// 將會在內部空間內建立一個資料夾</span></span><br><span class=\"line\">        File exportDir = <span class=\"keyword\">new</span> File(Environment.getExternalStorageDirectory().getPath(), <span class=\"string\">\"TestExport\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!exportDir.exists())</span><br><span class=\"line\">            exportDir.mkdirs();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 在TestExport下創建一個檔案</span></span><br><span class=\"line\">        File file = <span class=\"keyword\">new</span> File(exportDir, fileName);</span><br><span class=\"line\">        </span><br><span class=\"line\">        /設定輸出相關格式</span><br><span class=\"line\">        WorkbookSettings wbSettings = <span class=\"keyword\">new</span> WorkbookSettings();</span><br><span class=\"line\">        wbSettings.setLocale(<span class=\"keyword\">new</span> Locale(<span class=\"string\">\"en\"</span>, <span class=\"string\">\"EN\"</span>));</span><br><span class=\"line\">        WritableWorkbook workbook;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 創立一個Excel檔</span></span><br><span class=\"line\">            workbook = Workbook.createWorkbook(file, wbSettings);</span><br><span class=\"line\">            </span><br><span class=\"line\">            <span class=\"comment\">// 建立分頁</span></span><br><span class=\"line\">            WritableSheet sheet = workbook.createSheet(CurrentAccountData.getAccountName(), <span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">            * 如果要建立第二分頁就會像 workbook.createSheet(CurrentAccountData.getAccountName(), 1);</span></span><br><span class=\"line\"><span class=\"comment\">            */</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//先建立我們Excel的標題</span></span><br><span class=\"line\">            sheet.addCell(<span class=\"keyword\">new</span> Label(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"string\">\"學號\"</span>));</span><br><span class=\"line\">            sheet.addCell(<span class=\"keyword\">new</span> Label(<span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"string\">\"姓名\"</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//開始放入表的資料，這邊請都用getString()</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cursor.moveToFirst()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">int</span> i = cursor.getPosition() + <span class=\"number\">1</span>;</span><br><span class=\"line\">                    sheet.addCell(<span class=\"keyword\">new</span> Label(<span class=\"number\">0</span>, i, cursor.getString(<span class=\"number\">0</span>)));</span><br><span class=\"line\">                    sheet.addCell(<span class=\"keyword\">new</span> Label(<span class=\"number\">1</span>, i, cursor.getString(<span class=\"number\">1</span>)));</span><br><span class=\"line\">                &#125; </span><br><span class=\"line\">                <span class=\"keyword\">while</span> (cursor.moveToNext());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            cursor.close();</span><br><span class=\"line\">            workbook.write();</span><br><span class=\"line\">            workbook.close();</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;  <span class=\"keyword\">catch</span> (RowsExceededException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (WriteException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>Done！<br>其實不管是Csv還是Excel最終都還是得將Table的資料一一取出來，然後再使用迴圈建立資料，因此使用AsnyTask是有其道理的，有人會說怎麼不使用Thread、Handler，其實效果大同小異。</p>\n<p>但AsnyTask是為了Android而產生的，它在Android比上述兩個速度更快，美中不足的是沒辦法像Thread可以運算非常大量的資料。</p>\n"},{"title":"Android. Bluetooth API 偵測與搜尋","date":"2016-06-20T02:58:55.000Z","_content":"\n藍芽裝置，最初的步驟就是搜尋附近的裝置，這其實已經是早期的技術了，但到現在還是被廣泛使用，尤其對於物聯網來說，是非常方便的，因為目前幾乎每一支手機都有藍芽，如果產品想要串接藍芽，其實也不難，但規格要盡量一致才不會出現奇怪的問題。\n\n通常藍芽會直接在Activity中使用，因為我們需要搭配BroadcastReceiver來做接收搜尋等動作，因此我們需要在Activtiy中建立，當然如果想要使用OOP這種寫法也可以，也只是將Code的位置擺放去其他地方。\n\n# Step 1. 加入Permission\n```xml\n<uses-permission android:name=\"android.permission.BLUETOOTH\" />\n<uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\" />\n```\n\n# Step 2. 偵測手機是否支援藍芽\n```java\nmBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();\nif(mBluetoothAdapter == null)\n    bluetoothList.setText(\"您的裝置沒有支援藍芽\");\n```\nBluetoothAdapter我們是不需要Intance的，因為這是早已經存在的東西，手機本身就帶有Intance的BluetoothAdapter，當然很簡單的，我們如果是NULL的，很明顯裝置並沒有藍芽。\n\n# Step 3. 查詢藍芽是否有開啟\n```java\nif (!mBluetoothAdapter.isEnabled()) {\n    Intent enableIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);\n    startActivityForResult(enableIntent, REQUEST_ENABLE_BT);\n} \n```\n當開啟藍芽界面並完成選擇動作時，ActivityForResult這個Method就會執行，也將會回傳REQUEST_CODE，讓開發者可以判斷。對了，這一段Code建議寫在onStart內，因為我們onCreate其實不太適合做這種動作，有疑問的可以在去看看Acivity週期。\n\n# Step 4. 搜尋藍芽裝置\n```java\nif (mBluetoothAdapter.isDiscovering())\n    mBluetoothAdapter.cancelDiscovery();\nmBluetoothAdapter.startDiscovery();\n```\n如果mBluetoothAdapter正在搜尋，但使用者又點了一次按鈕之類的，我們得取消查詢再次展開查詢的動作，不然可能會造成Loop的問題。\n\n# Step 5. 接收藍芽裝置\n```java\nIntentFilter filter = new IntentFilter(BluetoothDevice.ACTION_FOUND);\nthis.registerReceiver(mReceiver, filter);\n\nfilter = new IntentFilter(BluetoothAdapter.ACTION_DISCOVERY_FINISHED);\nthis.registerReceiver(mReceiver, filter);\n\nprivate ArrayAdapter<String> mNewDevicesArrayAdapter;\n\nprivate final BroadcastReceiver mReceiver = new BroadcastReceiver() {\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        String action = intent.getAction();\n        if (BluetoothDevice.ACTION_FOUND.equals(action)) {\n            BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);\n            if (device.getBondState() != BluetoothDevice.BOND_BONDED) {\n                mNewDevicesArrayAdapter.add(device.getName() + \"\\n\" + device.getAddress());\n            }\n        } else if (BluetoothAdapter.ACTION_DISCOVERY_FINISHED.equals(action)) {\n            if (mNewDevicesArrayAdapter.getCount() == 0) {\n                String noDevices = \"No Devices\";\n                mNewDevicesArrayAdapter.add(noDevices);\n            }\n        }\n    }\n};\n```\n\nBluetoothAdapter與BluetoothDevice有提供一些StringAction，但通常都使用FOUND與FINISHED兩種為多，在搭配Receiver接收每筆所查詢到的藍芽裝置。","source":"_posts/Android-Bluetooth-API-偵測與搜尋.md","raw":"---\ntitle: Android. Bluetooth API 偵測與搜尋\ndate: 2016-06-20 10:58:55\ntags: Android\n---\n\n藍芽裝置，最初的步驟就是搜尋附近的裝置，這其實已經是早期的技術了，但到現在還是被廣泛使用，尤其對於物聯網來說，是非常方便的，因為目前幾乎每一支手機都有藍芽，如果產品想要串接藍芽，其實也不難，但規格要盡量一致才不會出現奇怪的問題。\n\n通常藍芽會直接在Activity中使用，因為我們需要搭配BroadcastReceiver來做接收搜尋等動作，因此我們需要在Activtiy中建立，當然如果想要使用OOP這種寫法也可以，也只是將Code的位置擺放去其他地方。\n\n# Step 1. 加入Permission\n```xml\n<uses-permission android:name=\"android.permission.BLUETOOTH\" />\n<uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\" />\n```\n\n# Step 2. 偵測手機是否支援藍芽\n```java\nmBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();\nif(mBluetoothAdapter == null)\n    bluetoothList.setText(\"您的裝置沒有支援藍芽\");\n```\nBluetoothAdapter我們是不需要Intance的，因為這是早已經存在的東西，手機本身就帶有Intance的BluetoothAdapter，當然很簡單的，我們如果是NULL的，很明顯裝置並沒有藍芽。\n\n# Step 3. 查詢藍芽是否有開啟\n```java\nif (!mBluetoothAdapter.isEnabled()) {\n    Intent enableIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);\n    startActivityForResult(enableIntent, REQUEST_ENABLE_BT);\n} \n```\n當開啟藍芽界面並完成選擇動作時，ActivityForResult這個Method就會執行，也將會回傳REQUEST_CODE，讓開發者可以判斷。對了，這一段Code建議寫在onStart內，因為我們onCreate其實不太適合做這種動作，有疑問的可以在去看看Acivity週期。\n\n# Step 4. 搜尋藍芽裝置\n```java\nif (mBluetoothAdapter.isDiscovering())\n    mBluetoothAdapter.cancelDiscovery();\nmBluetoothAdapter.startDiscovery();\n```\n如果mBluetoothAdapter正在搜尋，但使用者又點了一次按鈕之類的，我們得取消查詢再次展開查詢的動作，不然可能會造成Loop的問題。\n\n# Step 5. 接收藍芽裝置\n```java\nIntentFilter filter = new IntentFilter(BluetoothDevice.ACTION_FOUND);\nthis.registerReceiver(mReceiver, filter);\n\nfilter = new IntentFilter(BluetoothAdapter.ACTION_DISCOVERY_FINISHED);\nthis.registerReceiver(mReceiver, filter);\n\nprivate ArrayAdapter<String> mNewDevicesArrayAdapter;\n\nprivate final BroadcastReceiver mReceiver = new BroadcastReceiver() {\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        String action = intent.getAction();\n        if (BluetoothDevice.ACTION_FOUND.equals(action)) {\n            BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);\n            if (device.getBondState() != BluetoothDevice.BOND_BONDED) {\n                mNewDevicesArrayAdapter.add(device.getName() + \"\\n\" + device.getAddress());\n            }\n        } else if (BluetoothAdapter.ACTION_DISCOVERY_FINISHED.equals(action)) {\n            if (mNewDevicesArrayAdapter.getCount() == 0) {\n                String noDevices = \"No Devices\";\n                mNewDevicesArrayAdapter.add(noDevices);\n            }\n        }\n    }\n};\n```\n\nBluetoothAdapter與BluetoothDevice有提供一些StringAction，但通常都使用FOUND與FINISHED兩種為多，在搭配Receiver接收每筆所查詢到的藍芽裝置。","slug":"Android-Bluetooth-API-偵測與搜尋","published":1,"updated":"2018-08-21T12:13:45.863Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0qu0002skvclu6ft2qg","content":"<p>藍芽裝置，最初的步驟就是搜尋附近的裝置，這其實已經是早期的技術了，但到現在還是被廣泛使用，尤其對於物聯網來說，是非常方便的，因為目前幾乎每一支手機都有藍芽，如果產品想要串接藍芽，其實也不難，但規格要盡量一致才不會出現奇怪的問題。</p>\n<p>通常藍芽會直接在Activity中使用，因為我們需要搭配BroadcastReceiver來做接收搜尋等動作，因此我們需要在Activtiy中建立，當然如果想要使用OOP這種寫法也可以，也只是將Code的位置擺放去其他地方。</p>\n<h1 id=\"Step-1-加入Permission\"><a href=\"#Step-1-加入Permission\" class=\"headerlink\" title=\"Step 1. 加入Permission\"></a>Step 1. 加入Permission</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.BLUETOOTH\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.BLUETOOTH_ADMIN\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"Step-2-偵測手機是否支援藍芽\"><a href=\"#Step-2-偵測手機是否支援藍芽\" class=\"headerlink\" title=\"Step 2. 偵測手機是否支援藍芽\"></a>Step 2. 偵測手機是否支援藍芽</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();</span><br><span class=\"line\"><span class=\"keyword\">if</span>(mBluetoothAdapter == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">    bluetoothList.setText(<span class=\"string\">\"您的裝置沒有支援藍芽\"</span>);</span><br></pre></td></tr></table></figure>\n<p>BluetoothAdapter我們是不需要Intance的，因為這是早已經存在的東西，手機本身就帶有Intance的BluetoothAdapter，當然很簡單的，我們如果是NULL的，很明顯裝置並沒有藍芽。</p>\n<h1 id=\"Step-3-查詢藍芽是否有開啟\"><a href=\"#Step-3-查詢藍芽是否有開啟\" class=\"headerlink\" title=\"Step 3. 查詢藍芽是否有開啟\"></a>Step 3. 查詢藍芽是否有開啟</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!mBluetoothAdapter.isEnabled()) &#123;</span><br><span class=\"line\">    Intent enableIntent = <span class=\"keyword\">new</span> Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);</span><br><span class=\"line\">    startActivityForResult(enableIntent, REQUEST_ENABLE_BT);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>當開啟藍芽界面並完成選擇動作時，ActivityForResult這個Method就會執行，也將會回傳REQUEST_CODE，讓開發者可以判斷。對了，這一段Code建議寫在onStart內，因為我們onCreate其實不太適合做這種動作，有疑問的可以在去看看Acivity週期。</p>\n<h1 id=\"Step-4-搜尋藍芽裝置\"><a href=\"#Step-4-搜尋藍芽裝置\" class=\"headerlink\" title=\"Step 4. 搜尋藍芽裝置\"></a>Step 4. 搜尋藍芽裝置</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (mBluetoothAdapter.isDiscovering())</span><br><span class=\"line\">    mBluetoothAdapter.cancelDiscovery();</span><br><span class=\"line\">mBluetoothAdapter.startDiscovery();</span><br></pre></td></tr></table></figure>\n<p>如果mBluetoothAdapter正在搜尋，但使用者又點了一次按鈕之類的，我們得取消查詢再次展開查詢的動作，不然可能會造成Loop的問題。</p>\n<h1 id=\"Step-5-接收藍芽裝置\"><a href=\"#Step-5-接收藍芽裝置\" class=\"headerlink\" title=\"Step 5. 接收藍芽裝置\"></a>Step 5. 接收藍芽裝置</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IntentFilter filter = <span class=\"keyword\">new</span> IntentFilter(BluetoothDevice.ACTION_FOUND);</span><br><span class=\"line\"><span class=\"keyword\">this</span>.registerReceiver(mReceiver, filter);</span><br><span class=\"line\"></span><br><span class=\"line\">filter = <span class=\"keyword\">new</span> IntentFilter(BluetoothAdapter.ACTION_DISCOVERY_FINISHED);</span><br><span class=\"line\"><span class=\"keyword\">this</span>.registerReceiver(mReceiver, filter);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> ArrayAdapter&lt;String&gt; mNewDevicesArrayAdapter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> BroadcastReceiver mReceiver = <span class=\"keyword\">new</span> BroadcastReceiver() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</span><br><span class=\"line\">        String action = intent.getAction();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (BluetoothDevice.ACTION_FOUND.equals(action)) &#123;</span><br><span class=\"line\">            BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (device.getBondState() != BluetoothDevice.BOND_BONDED) &#123;</span><br><span class=\"line\">                mNewDevicesArrayAdapter.add(device.getName() + <span class=\"string\">\"\\n\"</span> + device.getAddress());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (BluetoothAdapter.ACTION_DISCOVERY_FINISHED.equals(action)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mNewDevicesArrayAdapter.getCount() == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                String noDevices = <span class=\"string\">\"No Devices\"</span>;</span><br><span class=\"line\">                mNewDevicesArrayAdapter.add(noDevices);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>BluetoothAdapter與BluetoothDevice有提供一些StringAction，但通常都使用FOUND與FINISHED兩種為多，在搭配Receiver接收每筆所查詢到的藍芽裝置。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>藍芽裝置，最初的步驟就是搜尋附近的裝置，這其實已經是早期的技術了，但到現在還是被廣泛使用，尤其對於物聯網來說，是非常方便的，因為目前幾乎每一支手機都有藍芽，如果產品想要串接藍芽，其實也不難，但規格要盡量一致才不會出現奇怪的問題。</p>\n<p>通常藍芽會直接在Activity中使用，因為我們需要搭配BroadcastReceiver來做接收搜尋等動作，因此我們需要在Activtiy中建立，當然如果想要使用OOP這種寫法也可以，也只是將Code的位置擺放去其他地方。</p>\n<h1 id=\"Step-1-加入Permission\"><a href=\"#Step-1-加入Permission\" class=\"headerlink\" title=\"Step 1. 加入Permission\"></a>Step 1. 加入Permission</h1><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.BLUETOOTH\"</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">uses-permission</span> <span class=\"attr\">android:name</span>=<span class=\"string\">\"android.permission.BLUETOOTH_ADMIN\"</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"Step-2-偵測手機是否支援藍芽\"><a href=\"#Step-2-偵測手機是否支援藍芽\" class=\"headerlink\" title=\"Step 2. 偵測手機是否支援藍芽\"></a>Step 2. 偵測手機是否支援藍芽</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mBluetoothAdapter = BluetoothAdapter.getDefaultAdapter();</span><br><span class=\"line\"><span class=\"keyword\">if</span>(mBluetoothAdapter == <span class=\"keyword\">null</span>)</span><br><span class=\"line\">    bluetoothList.setText(<span class=\"string\">\"您的裝置沒有支援藍芽\"</span>);</span><br></pre></td></tr></table></figure>\n<p>BluetoothAdapter我們是不需要Intance的，因為這是早已經存在的東西，手機本身就帶有Intance的BluetoothAdapter，當然很簡單的，我們如果是NULL的，很明顯裝置並沒有藍芽。</p>\n<h1 id=\"Step-3-查詢藍芽是否有開啟\"><a href=\"#Step-3-查詢藍芽是否有開啟\" class=\"headerlink\" title=\"Step 3. 查詢藍芽是否有開啟\"></a>Step 3. 查詢藍芽是否有開啟</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!mBluetoothAdapter.isEnabled()) &#123;</span><br><span class=\"line\">    Intent enableIntent = <span class=\"keyword\">new</span> Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);</span><br><span class=\"line\">    startActivityForResult(enableIntent, REQUEST_ENABLE_BT);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>當開啟藍芽界面並完成選擇動作時，ActivityForResult這個Method就會執行，也將會回傳REQUEST_CODE，讓開發者可以判斷。對了，這一段Code建議寫在onStart內，因為我們onCreate其實不太適合做這種動作，有疑問的可以在去看看Acivity週期。</p>\n<h1 id=\"Step-4-搜尋藍芽裝置\"><a href=\"#Step-4-搜尋藍芽裝置\" class=\"headerlink\" title=\"Step 4. 搜尋藍芽裝置\"></a>Step 4. 搜尋藍芽裝置</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (mBluetoothAdapter.isDiscovering())</span><br><span class=\"line\">    mBluetoothAdapter.cancelDiscovery();</span><br><span class=\"line\">mBluetoothAdapter.startDiscovery();</span><br></pre></td></tr></table></figure>\n<p>如果mBluetoothAdapter正在搜尋，但使用者又點了一次按鈕之類的，我們得取消查詢再次展開查詢的動作，不然可能會造成Loop的問題。</p>\n<h1 id=\"Step-5-接收藍芽裝置\"><a href=\"#Step-5-接收藍芽裝置\" class=\"headerlink\" title=\"Step 5. 接收藍芽裝置\"></a>Step 5. 接收藍芽裝置</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IntentFilter filter = <span class=\"keyword\">new</span> IntentFilter(BluetoothDevice.ACTION_FOUND);</span><br><span class=\"line\"><span class=\"keyword\">this</span>.registerReceiver(mReceiver, filter);</span><br><span class=\"line\"></span><br><span class=\"line\">filter = <span class=\"keyword\">new</span> IntentFilter(BluetoothAdapter.ACTION_DISCOVERY_FINISHED);</span><br><span class=\"line\"><span class=\"keyword\">this</span>.registerReceiver(mReceiver, filter);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> ArrayAdapter&lt;String&gt; mNewDevicesArrayAdapter;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> BroadcastReceiver mReceiver = <span class=\"keyword\">new</span> BroadcastReceiver() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onReceive</span><span class=\"params\">(Context context, Intent intent)</span> </span>&#123;</span><br><span class=\"line\">        String action = intent.getAction();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (BluetoothDevice.ACTION_FOUND.equals(action)) &#123;</span><br><span class=\"line\">            BluetoothDevice device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (device.getBondState() != BluetoothDevice.BOND_BONDED) &#123;</span><br><span class=\"line\">                mNewDevicesArrayAdapter.add(device.getName() + <span class=\"string\">\"\\n\"</span> + device.getAddress());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (BluetoothAdapter.ACTION_DISCOVERY_FINISHED.equals(action)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mNewDevicesArrayAdapter.getCount() == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                String noDevices = <span class=\"string\">\"No Devices\"</span>;</span><br><span class=\"line\">                mNewDevicesArrayAdapter.add(noDevices);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>BluetoothAdapter與BluetoothDevice有提供一些StringAction，但通常都使用FOUND與FINISHED兩種為多，在搭配Receiver接收每筆所查詢到的藍芽裝置。</p>\n"},{"title":"Android. MVP的簡單介紹與使用","date":"2015-11-19T12:30:00.000Z","_content":"\n關於這篇文章的發表，個人其實也非常忐忑，但卻始終忍不住與大家一起探討這些問題。\n\n自從MVP問世以後，Android開發者中已經掀起了許多看法，也因每個人的看法不同，所以我想在此發表自己的看法，並且與各位討論！\n\nMVP 與 MVC 的選擇是如何? 我想很多人其實也很疑惑，但我相信新手們肯定都不知道這兩個是什麼?\n\n# 淺談MVC\n## 經典模式中的MVC\n{% asset_img MVC_ICON.jpg %}\n## 事實上MVC會變成\n{% asset_img Usual_MVC.jpg %}\n\n大家應該可以看到第二張圖中的虛線，沒錯，我們MVC通常會變成這樣，因為當我們Model完成時，該如何溝通View?\n\n除非我們讓View也可讓Model溝通，但這卻又不符合MVC的初始原則，也造就了現在許多人對於MVC的說法各種不一。\n\n我也只能夠確定一點，MVC這一詞只會越來越亂，因為許多工程師都有自己對於MVC的看法。\n\n# 淺談MVP\n{% asset_img MVP_ICON.jpg %}\n\nMVP其實就是由MVC所演變而來，從圖上可知道，View與Model靠著Presenter做溝通，兩者間並無法直接溝通，這樣的架構好處就是，當Model修改時，只要我們最後的數據型態是相同的，View就不需要修改。\n\n在Android方面，Activity(Fragment)可以稱為是Controller、View，兩者都是，如果使用MVC這種模式，我認為對於程式的撰寫是非常不易的，因此也認為MVP的架構對於Android，是相對有利的。\n\n# 為什麼要使用\n不論MVP與MVC兩者間都會讓程式上較於複雜，但如果理解這些模式的人，應該會更加容易明白這些位置的作用。也因為如此，這兩種架構都不適用於小型程式，畢竟只有大量的程式碼，才能夠讓他們發揮真正的作用。\n1. 模組、介面權責劃分明顯\n2. 模組可重複使用\n3. 增加靈活性\n4. 降低依賴性\n\n# MVP的使用方法\n## 建立Presenter與Model的監聽器\n```java\npublic interface OnFindItemListener {\n    // 假設我們要取得Integer數值的List\n    void onFindItem(ArrayList<Integer> integers);\n}\n```\n\n## Model\n## 建立Model要傳數值回OnFindItemListener的Interactor\n```java\npublic interface FindItemInteractor {\n    void onFind(OnFindItemListener onFindItemListener);\n}\n```\n\n## 建立我們運算取得數據的方法\n```java\npublic class FindItemInteractorImpl implements FindItemInteractor {\n\n    @Override\n    public void onFind(OnFindItemListener onFindItemListener) {\n        // 回傳ArrayList<Integer>\n        onFindItemListener.onFindItem(findIntegers()); \n    }\n\n    private ArrayList<Integer> findIntegers() {\n        ArrayList<Integer> integers = new ArrayList<>();\n        for(int i = 0 ; i < 10 ; i++) {\n            integers.add(i);\n        }\n        return integers;\n    }\n}\n```\n\n# View\n## 與Presenter建立溝通，也是獲取數據的功能\n```java\npublic interface FindItemView {\n    // 基本上跟OnFindItemListener是一樣的\n    void setItem(ArrayList<Integer> integers); \n}\n```\n\n# Presenter\n## 建立我們主要的Presenter\n```java\npublic interface FindItemPresenter {\n    // 這邊可以算是命令，當我onStartFind可以做些事\n    void onStartFind();\n}\n```\n\n## Presenter應用\n```java\npublic class FindItemPresenterImpl implements FindItemPresenter, OnFindItemListener {\n\n    private FindItemView findItemView;\n    private FindItemInteractor findItemInteractor;\n\n    public FindItemPresenterImpl(FindItemView findItemView) {\n        this.findItemView = findItemView;\n        findItemInteractor = new FindItemInteractorImpl();\n    }\n\n    @Override\n    public void onStartFind() {\n        // 當onFind啟動時，也代表FindItemInteractorImpl開始運算\n        findItemInteractor.onFind(this);\n    }\n\n    @Override\n    public void onFindItem(ArrayList<Integer> integers) {\n        // 使用View將數據回傳\n        findItemView.setItem(integers);\n    }\n}\n```\n\n## Activity使用Presenter獲取我們想要的數據\n```java\npublic class MainActivity extends AppCompatActivity implements FindItemView {\n    // 為了讓我們可以監聽到FindItemView所回傳的數據，所以需要implements FindItemView\n    \n    // 宣告一個Presenter\n    private FindItemPresenter findItemPresenter;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        initButton();\n        // new Presenter應用\n        findItemPresenter = new FindItemPresenterImpl(this); \n    }\n\n    private void initButton() {\n        Button button = (Button) findViewById(R.id.button);\n        button.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // 如上述所說，這可以算是一個命令，Activity請求Presenter使用onStartFind方法。\n                findItemPresenter.onStartFind(); \n            }\n        });\n    }\n\n    // 當Model完成運算後，會將數據經由Presenter傳回至View\n    @Override\n    public void setItem(ArrayList<Integer> integers) {\n        TextView textView = (TextView) findViewById(R.id.textView);\n        textView.setText(\"Find \" + integers.size() + \" item.\");\n    }\n}\n```\n# GitHub Download\n[GitHub](https://github.com/Kuan-Wei-Kuo/ExampleMVP)\n \n# 結語\n這篇文章就到此結束了，對於這些設計模式，我們有時候其實很難抉擇與確實的實現，因此只能說，先把View分出來，在來考慮Model。\n","source":"_posts/Android-MVP的簡單介紹與使用.md","raw":"---\ntitle: Android. MVP的簡單介紹與使用\ndate: 2015-11-19 20:30:00\ntags: Android\n---\n\n關於這篇文章的發表，個人其實也非常忐忑，但卻始終忍不住與大家一起探討這些問題。\n\n自從MVP問世以後，Android開發者中已經掀起了許多看法，也因每個人的看法不同，所以我想在此發表自己的看法，並且與各位討論！\n\nMVP 與 MVC 的選擇是如何? 我想很多人其實也很疑惑，但我相信新手們肯定都不知道這兩個是什麼?\n\n# 淺談MVC\n## 經典模式中的MVC\n{% asset_img MVC_ICON.jpg %}\n## 事實上MVC會變成\n{% asset_img Usual_MVC.jpg %}\n\n大家應該可以看到第二張圖中的虛線，沒錯，我們MVC通常會變成這樣，因為當我們Model完成時，該如何溝通View?\n\n除非我們讓View也可讓Model溝通，但這卻又不符合MVC的初始原則，也造就了現在許多人對於MVC的說法各種不一。\n\n我也只能夠確定一點，MVC這一詞只會越來越亂，因為許多工程師都有自己對於MVC的看法。\n\n# 淺談MVP\n{% asset_img MVP_ICON.jpg %}\n\nMVP其實就是由MVC所演變而來，從圖上可知道，View與Model靠著Presenter做溝通，兩者間並無法直接溝通，這樣的架構好處就是，當Model修改時，只要我們最後的數據型態是相同的，View就不需要修改。\n\n在Android方面，Activity(Fragment)可以稱為是Controller、View，兩者都是，如果使用MVC這種模式，我認為對於程式的撰寫是非常不易的，因此也認為MVP的架構對於Android，是相對有利的。\n\n# 為什麼要使用\n不論MVP與MVC兩者間都會讓程式上較於複雜，但如果理解這些模式的人，應該會更加容易明白這些位置的作用。也因為如此，這兩種架構都不適用於小型程式，畢竟只有大量的程式碼，才能夠讓他們發揮真正的作用。\n1. 模組、介面權責劃分明顯\n2. 模組可重複使用\n3. 增加靈活性\n4. 降低依賴性\n\n# MVP的使用方法\n## 建立Presenter與Model的監聽器\n```java\npublic interface OnFindItemListener {\n    // 假設我們要取得Integer數值的List\n    void onFindItem(ArrayList<Integer> integers);\n}\n```\n\n## Model\n## 建立Model要傳數值回OnFindItemListener的Interactor\n```java\npublic interface FindItemInteractor {\n    void onFind(OnFindItemListener onFindItemListener);\n}\n```\n\n## 建立我們運算取得數據的方法\n```java\npublic class FindItemInteractorImpl implements FindItemInteractor {\n\n    @Override\n    public void onFind(OnFindItemListener onFindItemListener) {\n        // 回傳ArrayList<Integer>\n        onFindItemListener.onFindItem(findIntegers()); \n    }\n\n    private ArrayList<Integer> findIntegers() {\n        ArrayList<Integer> integers = new ArrayList<>();\n        for(int i = 0 ; i < 10 ; i++) {\n            integers.add(i);\n        }\n        return integers;\n    }\n}\n```\n\n# View\n## 與Presenter建立溝通，也是獲取數據的功能\n```java\npublic interface FindItemView {\n    // 基本上跟OnFindItemListener是一樣的\n    void setItem(ArrayList<Integer> integers); \n}\n```\n\n# Presenter\n## 建立我們主要的Presenter\n```java\npublic interface FindItemPresenter {\n    // 這邊可以算是命令，當我onStartFind可以做些事\n    void onStartFind();\n}\n```\n\n## Presenter應用\n```java\npublic class FindItemPresenterImpl implements FindItemPresenter, OnFindItemListener {\n\n    private FindItemView findItemView;\n    private FindItemInteractor findItemInteractor;\n\n    public FindItemPresenterImpl(FindItemView findItemView) {\n        this.findItemView = findItemView;\n        findItemInteractor = new FindItemInteractorImpl();\n    }\n\n    @Override\n    public void onStartFind() {\n        // 當onFind啟動時，也代表FindItemInteractorImpl開始運算\n        findItemInteractor.onFind(this);\n    }\n\n    @Override\n    public void onFindItem(ArrayList<Integer> integers) {\n        // 使用View將數據回傳\n        findItemView.setItem(integers);\n    }\n}\n```\n\n## Activity使用Presenter獲取我們想要的數據\n```java\npublic class MainActivity extends AppCompatActivity implements FindItemView {\n    // 為了讓我們可以監聽到FindItemView所回傳的數據，所以需要implements FindItemView\n    \n    // 宣告一個Presenter\n    private FindItemPresenter findItemPresenter;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        initButton();\n        // new Presenter應用\n        findItemPresenter = new FindItemPresenterImpl(this); \n    }\n\n    private void initButton() {\n        Button button = (Button) findViewById(R.id.button);\n        button.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                // 如上述所說，這可以算是一個命令，Activity請求Presenter使用onStartFind方法。\n                findItemPresenter.onStartFind(); \n            }\n        });\n    }\n\n    // 當Model完成運算後，會將數據經由Presenter傳回至View\n    @Override\n    public void setItem(ArrayList<Integer> integers) {\n        TextView textView = (TextView) findViewById(R.id.textView);\n        textView.setText(\"Find \" + integers.size() + \" item.\");\n    }\n}\n```\n# GitHub Download\n[GitHub](https://github.com/Kuan-Wei-Kuo/ExampleMVP)\n \n# 結語\n這篇文章就到此結束了，對於這些設計模式，我們有時候其實很難抉擇與確實的實現，因此只能說，先把View分出來，在來考慮Model。\n","slug":"Android-MVP的簡單介紹與使用","published":1,"updated":"2018-08-21T12:13:45.864Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0qz0005skvc3586kop7","content":"<p>關於這篇文章的發表，個人其實也非常忐忑，但卻始終忍不住與大家一起探討這些問題。</p>\n<p>自從MVP問世以後，Android開發者中已經掀起了許多看法，也因每個人的看法不同，所以我想在此發表自己的看法，並且與各位討論！</p>\n<p>MVP 與 MVC 的選擇是如何? 我想很多人其實也很疑惑，但我相信新手們肯定都不知道這兩個是什麼?</p>\n<h1 id=\"淺談MVC\"><a href=\"#淺談MVC\" class=\"headerlink\" title=\"淺談MVC\"></a>淺談MVC</h1><h2 id=\"經典模式中的MVC\"><a href=\"#經典模式中的MVC\" class=\"headerlink\" title=\"經典模式中的MVC\"></a>經典模式中的MVC</h2><img src=\"/2015/11/19/Android-MVP的簡單介紹與使用/MVC_ICON.jpg\">\n<h2 id=\"事實上MVC會變成\"><a href=\"#事實上MVC會變成\" class=\"headerlink\" title=\"事實上MVC會變成\"></a>事實上MVC會變成</h2><img src=\"/2015/11/19/Android-MVP的簡單介紹與使用/Usual_MVC.jpg\">\n<p>大家應該可以看到第二張圖中的虛線，沒錯，我們MVC通常會變成這樣，因為當我們Model完成時，該如何溝通View?</p>\n<p>除非我們讓View也可讓Model溝通，但這卻又不符合MVC的初始原則，也造就了現在許多人對於MVC的說法各種不一。</p>\n<p>我也只能夠確定一點，MVC這一詞只會越來越亂，因為許多工程師都有自己對於MVC的看法。</p>\n<h1 id=\"淺談MVP\"><a href=\"#淺談MVP\" class=\"headerlink\" title=\"淺談MVP\"></a>淺談MVP</h1><img src=\"/2015/11/19/Android-MVP的簡單介紹與使用/MVP_ICON.jpg\">\n<p>MVP其實就是由MVC所演變而來，從圖上可知道，View與Model靠著Presenter做溝通，兩者間並無法直接溝通，這樣的架構好處就是，當Model修改時，只要我們最後的數據型態是相同的，View就不需要修改。</p>\n<p>在Android方面，Activity(Fragment)可以稱為是Controller、View，兩者都是，如果使用MVC這種模式，我認為對於程式的撰寫是非常不易的，因此也認為MVP的架構對於Android，是相對有利的。</p>\n<h1 id=\"為什麼要使用\"><a href=\"#為什麼要使用\" class=\"headerlink\" title=\"為什麼要使用\"></a>為什麼要使用</h1><p>不論MVP與MVC兩者間都會讓程式上較於複雜，但如果理解這些模式的人，應該會更加容易明白這些位置的作用。也因為如此，這兩種架構都不適用於小型程式，畢竟只有大量的程式碼，才能夠讓他們發揮真正的作用。</p>\n<ol>\n<li>模組、介面權責劃分明顯</li>\n<li>模組可重複使用</li>\n<li>增加靈活性</li>\n<li>降低依賴性</li>\n</ol>\n<h1 id=\"MVP的使用方法\"><a href=\"#MVP的使用方法\" class=\"headerlink\" title=\"MVP的使用方法\"></a>MVP的使用方法</h1><h2 id=\"建立Presenter與Model的監聽器\"><a href=\"#建立Presenter與Model的監聽器\" class=\"headerlink\" title=\"建立Presenter與Model的監聽器\"></a>建立Presenter與Model的監聽器</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">OnFindItemListener</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 假設我們要取得Integer數值的List</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onFindItem</span><span class=\"params\">(ArrayList&lt;Integer&gt; integers)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Model\"><a href=\"#Model\" class=\"headerlink\" title=\"Model\"></a>Model</h2><h2 id=\"建立Model要傳數值回OnFindItemListener的Interactor\"><a href=\"#建立Model要傳數值回OnFindItemListener的Interactor\" class=\"headerlink\" title=\"建立Model要傳數值回OnFindItemListener的Interactor\"></a>建立Model要傳數值回OnFindItemListener的Interactor</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">FindItemInteractor</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onFind</span><span class=\"params\">(OnFindItemListener onFindItemListener)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"建立我們運算取得數據的方法\"><a href=\"#建立我們運算取得數據的方法\" class=\"headerlink\" title=\"建立我們運算取得數據的方法\"></a>建立我們運算取得數據的方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FindItemInteractorImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">FindItemInteractor</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onFind</span><span class=\"params\">(OnFindItemListener onFindItemListener)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 回傳ArrayList&lt;Integer&gt;</span></span><br><span class=\"line\">        onFindItemListener.onFindItem(findIntegers()); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> ArrayList&lt;Integer&gt; <span class=\"title\">findIntegers</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        ArrayList&lt;Integer&gt; integers = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; <span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\">            integers.add(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> integers;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h1><h2 id=\"與Presenter建立溝通，也是獲取數據的功能\"><a href=\"#與Presenter建立溝通，也是獲取數據的功能\" class=\"headerlink\" title=\"與Presenter建立溝通，也是獲取數據的功能\"></a>與Presenter建立溝通，也是獲取數據的功能</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">FindItemView</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 基本上跟OnFindItemListener是一樣的</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setItem</span><span class=\"params\">(ArrayList&lt;Integer&gt; integers)</span></span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"Presenter\"><a href=\"#Presenter\" class=\"headerlink\" title=\"Presenter\"></a>Presenter</h1><h2 id=\"建立我們主要的Presenter\"><a href=\"#建立我們主要的Presenter\" class=\"headerlink\" title=\"建立我們主要的Presenter\"></a>建立我們主要的Presenter</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">FindItemPresenter</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 這邊可以算是命令，當我onStartFind可以做些事</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onStartFind</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Presenter應用\"><a href=\"#Presenter應用\" class=\"headerlink\" title=\"Presenter應用\"></a>Presenter應用</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FindItemPresenterImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">FindItemPresenter</span>, <span class=\"title\">OnFindItemListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> FindItemView findItemView;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> FindItemInteractor findItemInteractor;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">FindItemPresenterImpl</span><span class=\"params\">(FindItemView findItemView)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.findItemView = findItemView;</span><br><span class=\"line\">        findItemInteractor = <span class=\"keyword\">new</span> FindItemInteractorImpl();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onStartFind</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 當onFind啟動時，也代表FindItemInteractorImpl開始運算</span></span><br><span class=\"line\">        findItemInteractor.onFind(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onFindItem</span><span class=\"params\">(ArrayList&lt;Integer&gt; integers)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 使用View將數據回傳</span></span><br><span class=\"line\">        findItemView.setItem(integers);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Activity使用Presenter獲取我們想要的數據\"><a href=\"#Activity使用Presenter獲取我們想要的數據\" class=\"headerlink\" title=\"Activity使用Presenter獲取我們想要的數據\"></a>Activity使用Presenter獲取我們想要的數據</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> <span class=\"keyword\">implements</span> <span class=\"title\">FindItemView</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 為了讓我們可以監聽到FindItemView所回傳的數據，所以需要implements FindItemView</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 宣告一個Presenter</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> FindItemPresenter findItemPresenter;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\">        initButton();</span><br><span class=\"line\">        <span class=\"comment\">// new Presenter應用</span></span><br><span class=\"line\">        findItemPresenter = <span class=\"keyword\">new</span> FindItemPresenterImpl(<span class=\"keyword\">this</span>); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initButton</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Button button = (Button) findViewById(R.id.button);</span><br><span class=\"line\">        button.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">// 如上述所說，這可以算是一個命令，Activity請求Presenter使用onStartFind方法。</span></span><br><span class=\"line\">                findItemPresenter.onStartFind(); </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 當Model完成運算後，會將數據經由Presenter傳回至View</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setItem</span><span class=\"params\">(ArrayList&lt;Integer&gt; integers)</span> </span>&#123;</span><br><span class=\"line\">        TextView textView = (TextView) findViewById(R.id.textView);</span><br><span class=\"line\">        textView.setText(<span class=\"string\">\"Find \"</span> + integers.size() + <span class=\"string\">\" item.\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"GitHub-Download\"><a href=\"#GitHub-Download\" class=\"headerlink\" title=\"GitHub Download\"></a>GitHub Download</h1><p><a href=\"https://github.com/Kuan-Wei-Kuo/ExampleMVP\" target=\"_blank\" rel=\"noopener\">GitHub</a></p>\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><p>這篇文章就到此結束了，對於這些設計模式，我們有時候其實很難抉擇與確實的實現，因此只能說，先把View分出來，在來考慮Model。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>關於這篇文章的發表，個人其實也非常忐忑，但卻始終忍不住與大家一起探討這些問題。</p>\n<p>自從MVP問世以後，Android開發者中已經掀起了許多看法，也因每個人的看法不同，所以我想在此發表自己的看法，並且與各位討論！</p>\n<p>MVP 與 MVC 的選擇是如何? 我想很多人其實也很疑惑，但我相信新手們肯定都不知道這兩個是什麼?</p>\n<h1 id=\"淺談MVC\"><a href=\"#淺談MVC\" class=\"headerlink\" title=\"淺談MVC\"></a>淺談MVC</h1><h2 id=\"經典模式中的MVC\"><a href=\"#經典模式中的MVC\" class=\"headerlink\" title=\"經典模式中的MVC\"></a>經典模式中的MVC</h2><img src=\"/2015/11/19/Android-MVP的簡單介紹與使用/MVC_ICON.jpg\">\n<h2 id=\"事實上MVC會變成\"><a href=\"#事實上MVC會變成\" class=\"headerlink\" title=\"事實上MVC會變成\"></a>事實上MVC會變成</h2><img src=\"/2015/11/19/Android-MVP的簡單介紹與使用/Usual_MVC.jpg\">\n<p>大家應該可以看到第二張圖中的虛線，沒錯，我們MVC通常會變成這樣，因為當我們Model完成時，該如何溝通View?</p>\n<p>除非我們讓View也可讓Model溝通，但這卻又不符合MVC的初始原則，也造就了現在許多人對於MVC的說法各種不一。</p>\n<p>我也只能夠確定一點，MVC這一詞只會越來越亂，因為許多工程師都有自己對於MVC的看法。</p>\n<h1 id=\"淺談MVP\"><a href=\"#淺談MVP\" class=\"headerlink\" title=\"淺談MVP\"></a>淺談MVP</h1><img src=\"/2015/11/19/Android-MVP的簡單介紹與使用/MVP_ICON.jpg\">\n<p>MVP其實就是由MVC所演變而來，從圖上可知道，View與Model靠著Presenter做溝通，兩者間並無法直接溝通，這樣的架構好處就是，當Model修改時，只要我們最後的數據型態是相同的，View就不需要修改。</p>\n<p>在Android方面，Activity(Fragment)可以稱為是Controller、View，兩者都是，如果使用MVC這種模式，我認為對於程式的撰寫是非常不易的，因此也認為MVP的架構對於Android，是相對有利的。</p>\n<h1 id=\"為什麼要使用\"><a href=\"#為什麼要使用\" class=\"headerlink\" title=\"為什麼要使用\"></a>為什麼要使用</h1><p>不論MVP與MVC兩者間都會讓程式上較於複雜，但如果理解這些模式的人，應該會更加容易明白這些位置的作用。也因為如此，這兩種架構都不適用於小型程式，畢竟只有大量的程式碼，才能夠讓他們發揮真正的作用。</p>\n<ol>\n<li>模組、介面權責劃分明顯</li>\n<li>模組可重複使用</li>\n<li>增加靈活性</li>\n<li>降低依賴性</li>\n</ol>\n<h1 id=\"MVP的使用方法\"><a href=\"#MVP的使用方法\" class=\"headerlink\" title=\"MVP的使用方法\"></a>MVP的使用方法</h1><h2 id=\"建立Presenter與Model的監聽器\"><a href=\"#建立Presenter與Model的監聽器\" class=\"headerlink\" title=\"建立Presenter與Model的監聽器\"></a>建立Presenter與Model的監聽器</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">OnFindItemListener</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 假設我們要取得Integer數值的List</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onFindItem</span><span class=\"params\">(ArrayList&lt;Integer&gt; integers)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Model\"><a href=\"#Model\" class=\"headerlink\" title=\"Model\"></a>Model</h2><h2 id=\"建立Model要傳數值回OnFindItemListener的Interactor\"><a href=\"#建立Model要傳數值回OnFindItemListener的Interactor\" class=\"headerlink\" title=\"建立Model要傳數值回OnFindItemListener的Interactor\"></a>建立Model要傳數值回OnFindItemListener的Interactor</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">FindItemInteractor</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onFind</span><span class=\"params\">(OnFindItemListener onFindItemListener)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"建立我們運算取得數據的方法\"><a href=\"#建立我們運算取得數據的方法\" class=\"headerlink\" title=\"建立我們運算取得數據的方法\"></a>建立我們運算取得數據的方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FindItemInteractorImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">FindItemInteractor</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onFind</span><span class=\"params\">(OnFindItemListener onFindItemListener)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 回傳ArrayList&lt;Integer&gt;</span></span><br><span class=\"line\">        onFindItemListener.onFindItem(findIntegers()); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> ArrayList&lt;Integer&gt; <span class=\"title\">findIntegers</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        ArrayList&lt;Integer&gt; integers = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; <span class=\"number\">10</span> ; i++) &#123;</span><br><span class=\"line\">            integers.add(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> integers;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h1><h2 id=\"與Presenter建立溝通，也是獲取數據的功能\"><a href=\"#與Presenter建立溝通，也是獲取數據的功能\" class=\"headerlink\" title=\"與Presenter建立溝通，也是獲取數據的功能\"></a>與Presenter建立溝通，也是獲取數據的功能</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">FindItemView</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 基本上跟OnFindItemListener是一樣的</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">setItem</span><span class=\"params\">(ArrayList&lt;Integer&gt; integers)</span></span>; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"Presenter\"><a href=\"#Presenter\" class=\"headerlink\" title=\"Presenter\"></a>Presenter</h1><h2 id=\"建立我們主要的Presenter\"><a href=\"#建立我們主要的Presenter\" class=\"headerlink\" title=\"建立我們主要的Presenter\"></a>建立我們主要的Presenter</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">FindItemPresenter</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 這邊可以算是命令，當我onStartFind可以做些事</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onStartFind</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Presenter應用\"><a href=\"#Presenter應用\" class=\"headerlink\" title=\"Presenter應用\"></a>Presenter應用</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FindItemPresenterImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">FindItemPresenter</span>, <span class=\"title\">OnFindItemListener</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> FindItemView findItemView;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> FindItemInteractor findItemInteractor;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">FindItemPresenterImpl</span><span class=\"params\">(FindItemView findItemView)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.findItemView = findItemView;</span><br><span class=\"line\">        findItemInteractor = <span class=\"keyword\">new</span> FindItemInteractorImpl();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onStartFind</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 當onFind啟動時，也代表FindItemInteractorImpl開始運算</span></span><br><span class=\"line\">        findItemInteractor.onFind(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onFindItem</span><span class=\"params\">(ArrayList&lt;Integer&gt; integers)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 使用View將數據回傳</span></span><br><span class=\"line\">        findItemView.setItem(integers);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Activity使用Presenter獲取我們想要的數據\"><a href=\"#Activity使用Presenter獲取我們想要的數據\" class=\"headerlink\" title=\"Activity使用Presenter獲取我們想要的數據\"></a>Activity使用Presenter獲取我們想要的數據</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> <span class=\"keyword\">implements</span> <span class=\"title\">FindItemView</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 為了讓我們可以監聽到FindItemView所回傳的數據，所以需要implements FindItemView</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 宣告一個Presenter</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> FindItemPresenter findItemPresenter;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\">        initButton();</span><br><span class=\"line\">        <span class=\"comment\">// new Presenter應用</span></span><br><span class=\"line\">        findItemPresenter = <span class=\"keyword\">new</span> FindItemPresenterImpl(<span class=\"keyword\">this</span>); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initButton</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Button button = (Button) findViewById(R.id.button);</span><br><span class=\"line\">        button.setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"comment\">// 如上述所說，這可以算是一個命令，Activity請求Presenter使用onStartFind方法。</span></span><br><span class=\"line\">                findItemPresenter.onStartFind(); </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 當Model完成運算後，會將數據經由Presenter傳回至View</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setItem</span><span class=\"params\">(ArrayList&lt;Integer&gt; integers)</span> </span>&#123;</span><br><span class=\"line\">        TextView textView = (TextView) findViewById(R.id.textView);</span><br><span class=\"line\">        textView.setText(<span class=\"string\">\"Find \"</span> + integers.size() + <span class=\"string\">\" item.\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"GitHub-Download\"><a href=\"#GitHub-Download\" class=\"headerlink\" title=\"GitHub Download\"></a>GitHub Download</h1><p><a href=\"https://github.com/Kuan-Wei-Kuo/ExampleMVP\" target=\"_blank\" rel=\"noopener\">GitHub</a></p>\n<h1 id=\"結語\"><a href=\"#結語\" class=\"headerlink\" title=\"結語\"></a>結語</h1><p>這篇文章就到此結束了，對於這些設計模式，我們有時候其實很難抉擇與確實的實現，因此只能說，先把View分出來，在來考慮Model。</p>\n"},{"title":"Android. MyChartLib 圖表系統","date":"2016-03-28T01:09:00.000Z","top":10,"_content":"\n# New Update. 目前更新可以讓ViewPager 與 ScrollView三者結合\n<br/>\n\n# 長條圖\n<img src=\"/2016/03/28/Android-MyChartLib-圖表系統/columnChartView.png\" width=\"300\">\n\n# 摺線圖\n<img src=\"/2016/03/28/Android-MyChartLib-圖表系統/lineChartView.png\" width=\"300\">\n\n# 圓餅圖\n<img src=\"/2016/03/28/Android-MyChartLib-圖表系統/pieChartView.png\" width=\"300\">\n\n# [GitHub SourceCode](https://github.com/Kuan-Wei-Kuo/MyChart)\n<br/>\n\n# How to use\n\n## XML\n```xml\n<!-- 這邊長寬高可以自行設定-->\n<com.kuo.mychartlib.view.ColumnChartView\n    android:id=\"@+id/columnChartView\"\n    android:layout_width=\"match_parent\" \n    android:layout_height=\"match_parent\"/>\n```\n\n## Java\n```java\nprivate ArrayList<ColumnData> computeColumnData(int size, int maxValue) {\n    int[] colors = {ChartRendererUntil.CHART_GREEN, ChartRendererUntil.CHART_PINK,\n    ChartRendererUntil.CHART_RED, ChartRendererUntil.CHART_YELLOW, ChartRendererUntil.CHART_BROWN,\n    ChartRendererUntil.CHART_ORANGE, ChartRendererUntil.CHART_GREY,\n    ChartRendererUntil.CHART_PURPLE};\n\n    ArrayList<ColumnData> test = new ArrayList<>();\n    Random random = new Random();\n    for(int i = 0 ; i < size ; i++) {\n        test.add(new ColumnData(\"Axis X\",\n        random.nextInt(maxValue), colors[random.nextInt(colors.length)]));\n    }\n    return test;\n}\ncolumnChartView.setColumnData(computeColumnData(size, maxValue));\n```\n\n### UpdateChart\n```java\ncolumnChartView.setColumnData(computeColumnData(size, maxValue));\n// updateChart() 方法為更新用\ncolumnChartView.upadteChart(); \n```\n\n目前我覺得方法這邊還可以在改一下，updateChart()這邊有點難以與一般的Lib雷同，起因是因為每次更改都得查看是否有更改View大小，防止錯誤。\n","source":"_posts/Android-MyChartLib-圖表系統.md","raw":"---\ntitle: Android. MyChartLib 圖表系統\ndate: 2016-03-28 09:09:00\ntags: Android\ntop: 10\n---\n\n# New Update. 目前更新可以讓ViewPager 與 ScrollView三者結合\n<br/>\n\n# 長條圖\n<img src=\"/2016/03/28/Android-MyChartLib-圖表系統/columnChartView.png\" width=\"300\">\n\n# 摺線圖\n<img src=\"/2016/03/28/Android-MyChartLib-圖表系統/lineChartView.png\" width=\"300\">\n\n# 圓餅圖\n<img src=\"/2016/03/28/Android-MyChartLib-圖表系統/pieChartView.png\" width=\"300\">\n\n# [GitHub SourceCode](https://github.com/Kuan-Wei-Kuo/MyChart)\n<br/>\n\n# How to use\n\n## XML\n```xml\n<!-- 這邊長寬高可以自行設定-->\n<com.kuo.mychartlib.view.ColumnChartView\n    android:id=\"@+id/columnChartView\"\n    android:layout_width=\"match_parent\" \n    android:layout_height=\"match_parent\"/>\n```\n\n## Java\n```java\nprivate ArrayList<ColumnData> computeColumnData(int size, int maxValue) {\n    int[] colors = {ChartRendererUntil.CHART_GREEN, ChartRendererUntil.CHART_PINK,\n    ChartRendererUntil.CHART_RED, ChartRendererUntil.CHART_YELLOW, ChartRendererUntil.CHART_BROWN,\n    ChartRendererUntil.CHART_ORANGE, ChartRendererUntil.CHART_GREY,\n    ChartRendererUntil.CHART_PURPLE};\n\n    ArrayList<ColumnData> test = new ArrayList<>();\n    Random random = new Random();\n    for(int i = 0 ; i < size ; i++) {\n        test.add(new ColumnData(\"Axis X\",\n        random.nextInt(maxValue), colors[random.nextInt(colors.length)]));\n    }\n    return test;\n}\ncolumnChartView.setColumnData(computeColumnData(size, maxValue));\n```\n\n### UpdateChart\n```java\ncolumnChartView.setColumnData(computeColumnData(size, maxValue));\n// updateChart() 方法為更新用\ncolumnChartView.upadteChart(); \n```\n\n目前我覺得方法這邊還可以在改一下，updateChart()這邊有點難以與一般的Lib雷同，起因是因為每次更改都得查看是否有更改View大小，防止錯誤。\n","slug":"Android-MyChartLib-圖表系統","published":1,"updated":"2018-08-21T12:45:10.424Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0r10006skvchpt925sh","content":"<h1 id=\"New-Update-目前更新可以讓ViewPager-與-ScrollView三者結合\"><a href=\"#New-Update-目前更新可以讓ViewPager-與-ScrollView三者結合\" class=\"headerlink\" title=\"New Update. 目前更新可以讓ViewPager 與 ScrollView三者結合\"></a>New Update. 目前更新可以讓ViewPager 與 ScrollView三者結合</h1><p><br></p>\n<h1 id=\"長條圖\"><a href=\"#長條圖\" class=\"headerlink\" title=\"長條圖\"></a>長條圖</h1><p><img src=\"/2016/03/28/Android-MyChartLib-圖表系統/columnChartView.png\" width=\"300\"></p>\n<h1 id=\"摺線圖\"><a href=\"#摺線圖\" class=\"headerlink\" title=\"摺線圖\"></a>摺線圖</h1><p><img src=\"/2016/03/28/Android-MyChartLib-圖表系統/lineChartView.png\" width=\"300\"></p>\n<h1 id=\"圓餅圖\"><a href=\"#圓餅圖\" class=\"headerlink\" title=\"圓餅圖\"></a>圓餅圖</h1><p><img src=\"/2016/03/28/Android-MyChartLib-圖表系統/pieChartView.png\" width=\"300\"></p>\n<h1 id=\"GitHub-SourceCode\"><a href=\"#GitHub-SourceCode\" class=\"headerlink\" title=\"GitHub SourceCode\"></a><a href=\"https://github.com/Kuan-Wei-Kuo/MyChart\" target=\"_blank\" rel=\"noopener\">GitHub SourceCode</a></h1><p><br></p>\n<h1 id=\"How-to-use\"><a href=\"#How-to-use\" class=\"headerlink\" title=\"How to use\"></a>How to use</h1><h2 id=\"XML\"><a href=\"#XML\" class=\"headerlink\" title=\"XML\"></a>XML</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 這邊長寬高可以自行設定--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">com.kuo.mychartlib.view.ColumnChartView</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/columnChartView\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> ArrayList&lt;ColumnData&gt; <span class=\"title\">computeColumnData</span><span class=\"params\">(<span class=\"keyword\">int</span> size, <span class=\"keyword\">int</span> maxValue)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] colors = &#123;ChartRendererUntil.CHART_GREEN, ChartRendererUntil.CHART_PINK,</span><br><span class=\"line\">    ChartRendererUntil.CHART_RED, ChartRendererUntil.CHART_YELLOW, ChartRendererUntil.CHART_BROWN,</span><br><span class=\"line\">    ChartRendererUntil.CHART_ORANGE, ChartRendererUntil.CHART_GREY,</span><br><span class=\"line\">    ChartRendererUntil.CHART_PURPLE&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    ArrayList&lt;ColumnData&gt; test = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    Random random = <span class=\"keyword\">new</span> Random();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; size ; i++) &#123;</span><br><span class=\"line\">        test.add(<span class=\"keyword\">new</span> ColumnData(<span class=\"string\">\"Axis X\"</span>,</span><br><span class=\"line\">        random.nextInt(maxValue), colors[random.nextInt(colors.length)]));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> test;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">columnChartView.setColumnData(computeColumnData(size, maxValue));</span><br></pre></td></tr></table></figure>\n<h3 id=\"UpdateChart\"><a href=\"#UpdateChart\" class=\"headerlink\" title=\"UpdateChart\"></a>UpdateChart</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">columnChartView.setColumnData(computeColumnData(size, maxValue));</span><br><span class=\"line\"><span class=\"comment\">// updateChart() 方法為更新用</span></span><br><span class=\"line\">columnChartView.upadteChart();</span><br></pre></td></tr></table></figure>\n<p>目前我覺得方法這邊還可以在改一下，updateChart()這邊有點難以與一般的Lib雷同，起因是因為每次更改都得查看是否有更改View大小，防止錯誤。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"New-Update-目前更新可以讓ViewPager-與-ScrollView三者結合\"><a href=\"#New-Update-目前更新可以讓ViewPager-與-ScrollView三者結合\" class=\"headerlink\" title=\"New Update. 目前更新可以讓ViewPager 與 ScrollView三者結合\"></a>New Update. 目前更新可以讓ViewPager 與 ScrollView三者結合</h1><p><br></p>\n<h1 id=\"長條圖\"><a href=\"#長條圖\" class=\"headerlink\" title=\"長條圖\"></a>長條圖</h1><p><img src=\"/2016/03/28/Android-MyChartLib-圖表系統/columnChartView.png\" width=\"300\"></p>\n<h1 id=\"摺線圖\"><a href=\"#摺線圖\" class=\"headerlink\" title=\"摺線圖\"></a>摺線圖</h1><p><img src=\"/2016/03/28/Android-MyChartLib-圖表系統/lineChartView.png\" width=\"300\"></p>\n<h1 id=\"圓餅圖\"><a href=\"#圓餅圖\" class=\"headerlink\" title=\"圓餅圖\"></a>圓餅圖</h1><p><img src=\"/2016/03/28/Android-MyChartLib-圖表系統/pieChartView.png\" width=\"300\"></p>\n<h1 id=\"GitHub-SourceCode\"><a href=\"#GitHub-SourceCode\" class=\"headerlink\" title=\"GitHub SourceCode\"></a><a href=\"https://github.com/Kuan-Wei-Kuo/MyChart\" target=\"_blank\" rel=\"noopener\">GitHub SourceCode</a></h1><p><br></p>\n<h1 id=\"How-to-use\"><a href=\"#How-to-use\" class=\"headerlink\" title=\"How to use\"></a>How to use</h1><h2 id=\"XML\"><a href=\"#XML\" class=\"headerlink\" title=\"XML\"></a>XML</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- 這邊長寬高可以自行設定--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">com.kuo.mychartlib.view.ColumnChartView</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/columnChartView\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> ArrayList&lt;ColumnData&gt; <span class=\"title\">computeColumnData</span><span class=\"params\">(<span class=\"keyword\">int</span> size, <span class=\"keyword\">int</span> maxValue)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>[] colors = &#123;ChartRendererUntil.CHART_GREEN, ChartRendererUntil.CHART_PINK,</span><br><span class=\"line\">    ChartRendererUntil.CHART_RED, ChartRendererUntil.CHART_YELLOW, ChartRendererUntil.CHART_BROWN,</span><br><span class=\"line\">    ChartRendererUntil.CHART_ORANGE, ChartRendererUntil.CHART_GREY,</span><br><span class=\"line\">    ChartRendererUntil.CHART_PURPLE&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    ArrayList&lt;ColumnData&gt; test = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    Random random = <span class=\"keyword\">new</span> Random();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; size ; i++) &#123;</span><br><span class=\"line\">        test.add(<span class=\"keyword\">new</span> ColumnData(<span class=\"string\">\"Axis X\"</span>,</span><br><span class=\"line\">        random.nextInt(maxValue), colors[random.nextInt(colors.length)]));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> test;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">columnChartView.setColumnData(computeColumnData(size, maxValue));</span><br></pre></td></tr></table></figure>\n<h3 id=\"UpdateChart\"><a href=\"#UpdateChart\" class=\"headerlink\" title=\"UpdateChart\"></a>UpdateChart</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">columnChartView.setColumnData(computeColumnData(size, maxValue));</span><br><span class=\"line\"><span class=\"comment\">// updateChart() 方法為更新用</span></span><br><span class=\"line\">columnChartView.upadteChart();</span><br></pre></td></tr></table></figure>\n<p>目前我覺得方法這邊還可以在改一下，updateChart()這邊有點難以與一般的Lib雷同，起因是因為每次更改都得查看是否有更改View大小，防止錯誤。</p>\n"},{"title":"Android. RecyclerView ItemAnimator 簡單示範","date":"2015-08-07T22:08:00.000Z","_content":"\n目前在GitHub找到的資源，內部大多是使用DefaultItemAnimator.java(默認動畫程式碼)，並且做修改，因為它非常的好用，可以為您省去許多時間。\n\n如果想要使用動畫就像下面那行程式碼就好了。\n```java\nrecyclerView.setItemAnimator(new DefaultItemAnimator());\n```\n當然也有可能會是SlideInTop、OvershootInLeft、ScaleIn等等的動畫，但記住，這些都是需要自行製作的。\n\n# Video\nhttps://youtu.be/3Y9oEKV9h4w\n[![Video](https://lh3.googleusercontent.com/kaAu9WJ9stE3X9ta0HaUozhLK3QJ57ipXo8_ipKuIjg=w852-h512-no)](https://youtu.be/3Y9oEKV9h4w)\n\n# Reference Sources\n[wasabeef/recyclerview-animators](https://github.com/wasabeef/recyclerview-animators)","source":"_posts/Android-RecyclerView-ItemAnimator簡單示範.md","raw":"---\ntitle: Android. RecyclerView ItemAnimator 簡單示範\ndate: 2015-08-08 06:08:00\ntags: Android\n---\n\n目前在GitHub找到的資源，內部大多是使用DefaultItemAnimator.java(默認動畫程式碼)，並且做修改，因為它非常的好用，可以為您省去許多時間。\n\n如果想要使用動畫就像下面那行程式碼就好了。\n```java\nrecyclerView.setItemAnimator(new DefaultItemAnimator());\n```\n當然也有可能會是SlideInTop、OvershootInLeft、ScaleIn等等的動畫，但記住，這些都是需要自行製作的。\n\n# Video\nhttps://youtu.be/3Y9oEKV9h4w\n[![Video](https://lh3.googleusercontent.com/kaAu9WJ9stE3X9ta0HaUozhLK3QJ57ipXo8_ipKuIjg=w852-h512-no)](https://youtu.be/3Y9oEKV9h4w)\n\n# Reference Sources\n[wasabeef/recyclerview-animators](https://github.com/wasabeef/recyclerview-animators)","slug":"Android-RecyclerView-ItemAnimator簡單示範","published":1,"updated":"2018-08-21T12:13:45.885Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0r60007skvcyxq5j1qc","content":"<p>目前在GitHub找到的資源，內部大多是使用DefaultItemAnimator.java(默認動畫程式碼)，並且做修改，因為它非常的好用，可以為您省去許多時間。</p>\n<p>如果想要使用動畫就像下面那行程式碼就好了。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">recyclerView.setItemAnimator(<span class=\"keyword\">new</span> DefaultItemAnimator());</span><br></pre></td></tr></table></figure></p>\n<p>當然也有可能會是SlideInTop、OvershootInLeft、ScaleIn等等的動畫，但記住，這些都是需要自行製作的。</p>\n<h1 id=\"Video\"><a href=\"#Video\" class=\"headerlink\" title=\"Video\"></a>Video</h1><p><a href=\"https://youtu.be/3Y9oEKV9h4w\" target=\"_blank\" rel=\"noopener\">https://youtu.be/3Y9oEKV9h4w</a><br><a href=\"https://youtu.be/3Y9oEKV9h4w\" target=\"_blank\" rel=\"noopener\"><img src=\"https://lh3.googleusercontent.com/kaAu9WJ9stE3X9ta0HaUozhLK3QJ57ipXo8_ipKuIjg=w852-h512-no\" alt=\"Video\"></a></p>\n<h1 id=\"Reference-Sources\"><a href=\"#Reference-Sources\" class=\"headerlink\" title=\"Reference Sources\"></a>Reference Sources</h1><p><a href=\"https://github.com/wasabeef/recyclerview-animators\" target=\"_blank\" rel=\"noopener\">wasabeef/recyclerview-animators</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>目前在GitHub找到的資源，內部大多是使用DefaultItemAnimator.java(默認動畫程式碼)，並且做修改，因為它非常的好用，可以為您省去許多時間。</p>\n<p>如果想要使用動畫就像下面那行程式碼就好了。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">recyclerView.setItemAnimator(<span class=\"keyword\">new</span> DefaultItemAnimator());</span><br></pre></td></tr></table></figure></p>\n<p>當然也有可能會是SlideInTop、OvershootInLeft、ScaleIn等等的動畫，但記住，這些都是需要自行製作的。</p>\n<h1 id=\"Video\"><a href=\"#Video\" class=\"headerlink\" title=\"Video\"></a>Video</h1><p><a href=\"https://youtu.be/3Y9oEKV9h4w\" target=\"_blank\" rel=\"noopener\">https://youtu.be/3Y9oEKV9h4w</a><br><a href=\"https://youtu.be/3Y9oEKV9h4w\" target=\"_blank\" rel=\"noopener\"><img src=\"https://lh3.googleusercontent.com/kaAu9WJ9stE3X9ta0HaUozhLK3QJ57ipXo8_ipKuIjg=w852-h512-no\" alt=\"Video\"></a></p>\n<h1 id=\"Reference-Sources\"><a href=\"#Reference-Sources\" class=\"headerlink\" title=\"Reference Sources\"></a>Reference Sources</h1><p><a href=\"https://github.com/wasabeef/recyclerview-animators\" target=\"_blank\" rel=\"noopener\">wasabeef/recyclerview-animators</a></p>\n"},{"title":"Android. SeekBar 顏色修改","date":"2015-08-31T04:38:00.000Z","_content":"\n日前有機會做個顏色選擇器，因此去研究了SeekBar的相關文獻，主要還是使用xml達到修改的目的，如下方所示：\n\n### red_seekbar_progress.xml\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\" >\n    <item android:id=\"@android:id/background\">\n        //SeekBar滾動條的背景\n        <shape android:shape=\"rectangle\" >\n            <solid\n                android:color=\"@color/GREY_800\" />\n        </shape>\n    </item>\n    <item android:id=\"@android:id/progress\">\n        //SeekBar Progress的顏色\n        <clip>\n            <shape android:shape=\"rectangle\" >\n                <solid\n                    android:color=\"@color/RED_300\" />\n            </shape>\n        </clip>\n    </item>\n</layer-list>\n```\n\n### seekbar_layout.xml\n```xml\n<SeekBar\n    android:id=\"@+id/slideR\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:padding=\"10dp\"\n    android:max=\"255\"\n    android:maxHeight=\"3dp\" \n    android:minHeight=\"3dp\"\n    android:progressDrawable=\"@drawable/red_seekbar_progress\"\n    android:thumbTint=\"@color/RED_300\"/>\n```\n\nred_seekbar_progress.xml部分其實也沒有什麼需要探討的，簡單改個顏色與背景罷了，然而在seekbar_layout.xml就需要去注意一些事項：\n1. 記得要設置maxHeight and minHeight否則會看到Progress Background比SeekBar滑動按鈕還要大的情形出現。\n2. progressDrawable為剛剛所設置的red_seekbar_progress.xml。\n3. thumbTint其實就是我們SeekBar的滑動按鈕顏色。","source":"_posts/Android-SeekBar-顏色修改.md","raw":"---\ntitle: Android. SeekBar 顏色修改\ndate: 2015-08-31 12:38:00\ntags: Android\n---\n\n日前有機會做個顏色選擇器，因此去研究了SeekBar的相關文獻，主要還是使用xml達到修改的目的，如下方所示：\n\n### red_seekbar_progress.xml\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layer-list xmlns:android=\"http://schemas.android.com/apk/res/android\" >\n    <item android:id=\"@android:id/background\">\n        //SeekBar滾動條的背景\n        <shape android:shape=\"rectangle\" >\n            <solid\n                android:color=\"@color/GREY_800\" />\n        </shape>\n    </item>\n    <item android:id=\"@android:id/progress\">\n        //SeekBar Progress的顏色\n        <clip>\n            <shape android:shape=\"rectangle\" >\n                <solid\n                    android:color=\"@color/RED_300\" />\n            </shape>\n        </clip>\n    </item>\n</layer-list>\n```\n\n### seekbar_layout.xml\n```xml\n<SeekBar\n    android:id=\"@+id/slideR\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:padding=\"10dp\"\n    android:max=\"255\"\n    android:maxHeight=\"3dp\" \n    android:minHeight=\"3dp\"\n    android:progressDrawable=\"@drawable/red_seekbar_progress\"\n    android:thumbTint=\"@color/RED_300\"/>\n```\n\nred_seekbar_progress.xml部分其實也沒有什麼需要探討的，簡單改個顏色與背景罷了，然而在seekbar_layout.xml就需要去注意一些事項：\n1. 記得要設置maxHeight and minHeight否則會看到Progress Background比SeekBar滑動按鈕還要大的情形出現。\n2. progressDrawable為剛剛所設置的red_seekbar_progress.xml。\n3. thumbTint其實就是我們SeekBar的滑動按鈕顏色。","slug":"Android-SeekBar-顏色修改","published":1,"updated":"2018-08-21T12:13:45.885Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0r9000askvcspm3dahg","content":"<p>日前有機會做個顏色選擇器，因此去研究了SeekBar的相關文獻，主要還是使用xml達到修改的目的，如下方所示：</p>\n<h3 id=\"red-seekbar-progress-xml\"><a href=\"#red-seekbar-progress-xml\" class=\"headerlink\" title=\"red_seekbar_progress.xml\"></a>red_seekbar_progress.xml</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">layer-list</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span> &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:id</span>=<span class=\"string\">\"@android:id/background\"</span>&gt;</span></span><br><span class=\"line\">        //SeekBar滾動條的背景</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span> &gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">solid</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:color</span>=<span class=\"string\">\"@color/GREY_800\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:id</span>=<span class=\"string\">\"@android:id/progress\"</span>&gt;</span></span><br><span class=\"line\">        //SeekBar Progress的顏色</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">clip</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span> &gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">solid</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">android:color</span>=<span class=\"string\">\"@color/RED_300\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">clip</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">layer-list</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"seekbar-layout-xml\"><a href=\"#seekbar-layout-xml\" class=\"headerlink\" title=\"seekbar_layout.xml\"></a>seekbar_layout.xml</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">SeekBar</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/slideR\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:padding</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:max</span>=<span class=\"string\">\"255\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:maxHeight</span>=<span class=\"string\">\"3dp\"</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:minHeight</span>=<span class=\"string\">\"3dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:progressDrawable</span>=<span class=\"string\">\"@drawable/red_seekbar_progress\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:thumbTint</span>=<span class=\"string\">\"@color/RED_300\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>red_seekbar_progress.xml部分其實也沒有什麼需要探討的，簡單改個顏色與背景罷了，然而在seekbar_layout.xml就需要去注意一些事項：</p>\n<ol>\n<li>記得要設置maxHeight and minHeight否則會看到Progress Background比SeekBar滑動按鈕還要大的情形出現。</li>\n<li>progressDrawable為剛剛所設置的red_seekbar_progress.xml。</li>\n<li>thumbTint其實就是我們SeekBar的滑動按鈕顏色。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>日前有機會做個顏色選擇器，因此去研究了SeekBar的相關文獻，主要還是使用xml達到修改的目的，如下方所示：</p>\n<h3 id=\"red-seekbar-progress-xml\"><a href=\"#red-seekbar-progress-xml\" class=\"headerlink\" title=\"red_seekbar_progress.xml\"></a>red_seekbar_progress.xml</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">layer-list</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span> &gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:id</span>=<span class=\"string\">\"@android:id/background\"</span>&gt;</span></span><br><span class=\"line\">        //SeekBar滾動條的背景</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span> &gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">solid</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:color</span>=<span class=\"string\">\"@color/GREY_800\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:id</span>=<span class=\"string\">\"@android:id/progress\"</span>&gt;</span></span><br><span class=\"line\">        //SeekBar Progress的顏色</span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">clip</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span> &gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">solid</span></span></span><br><span class=\"line\"><span class=\"tag\">                    <span class=\"attr\">android:color</span>=<span class=\"string\">\"@color/RED_300\"</span> /&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">clip</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">layer-list</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"seekbar-layout-xml\"><a href=\"#seekbar-layout-xml\" class=\"headerlink\" title=\"seekbar_layout.xml\"></a>seekbar_layout.xml</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">SeekBar</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/slideR\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:padding</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:max</span>=<span class=\"string\">\"255\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:maxHeight</span>=<span class=\"string\">\"3dp\"</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:minHeight</span>=<span class=\"string\">\"3dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:progressDrawable</span>=<span class=\"string\">\"@drawable/red_seekbar_progress\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:thumbTint</span>=<span class=\"string\">\"@color/RED_300\"</span>/&gt;</span></span><br></pre></td></tr></table></figure>\n<p>red_seekbar_progress.xml部分其實也沒有什麼需要探討的，簡單改個顏色與背景罷了，然而在seekbar_layout.xml就需要去注意一些事項：</p>\n<ol>\n<li>記得要設置maxHeight and minHeight否則會看到Progress Background比SeekBar滑動按鈕還要大的情形出現。</li>\n<li>progressDrawable為剛剛所設置的red_seekbar_progress.xml。</li>\n<li>thumbTint其實就是我們SeekBar的滑動按鈕顏色。</li>\n</ol>\n"},{"title":"Android. Toolbar與ActionMode的運用","date":"2015-11-19T02:25:00.000Z","_content":"\n我想很多人不知道有這個ActionMode的存在，好啦...我承認之前真的不知道。\n\n值得高興的是Toolbar也有支援ActionMode，可以讓我們更方便的在特殊時刻切換至想要的Menu。\n\n# 接下來就來說明如何應用\n\n```java\nActionMode actionMode; //為了可以對ActionMode做外部的更改\nToolbar toolbar = (Toolbar) findViewById(R.i.toolbar);\ntoolbar.toolbar.startActionMode( new ActionMode.Callback() {\n    @Override\n    public boolean onCreateActionMode(ActionMode mode, Menu menu) {\n        actionMode = mode; //取得目前的ActionMode\n        mode.getMenuInflater().inflate(R.menu.menu, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {\n        //準備\n        mode.setTitle(\"Title\");\n        return true;\n    }\n\n    @Override\n    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {\n        //Menu Item 點擊\n        return false;\n    }\n\n    @Override\n    public void onDestroyActionMode(ActionMode mode) {\n        //當ActionMode移除\n    }\n});\n```\n\n其實用法就這麼簡單，但當完成的時候，肯定會發現為什麼沒有覆蓋Toolbar，這時候我們只要加入下面這行：\n```xml\n<item name=\"windowActionModeOverlay\">true</item>\n```\n那麼ActionMode就可以覆蓋在Toolbar上面。\n\n# Before\n<img src=\"/2015/11/19/Android-Toolbar與ActionMode的運用/actionMode_0.png\" width=\"300\">\n\n# After\n<img src=\"/2015/11/19/Android-Toolbar與ActionMode的運用/actionMode_1.png\" width=\"300\">","source":"_posts/Android-Toolbar與ActionMode的運用.md","raw":"---\ntitle: Android. Toolbar與ActionMode的運用\ndate: 2015-11-19 10:25:00\ntags: Android\n---\n\n我想很多人不知道有這個ActionMode的存在，好啦...我承認之前真的不知道。\n\n值得高興的是Toolbar也有支援ActionMode，可以讓我們更方便的在特殊時刻切換至想要的Menu。\n\n# 接下來就來說明如何應用\n\n```java\nActionMode actionMode; //為了可以對ActionMode做外部的更改\nToolbar toolbar = (Toolbar) findViewById(R.i.toolbar);\ntoolbar.toolbar.startActionMode( new ActionMode.Callback() {\n    @Override\n    public boolean onCreateActionMode(ActionMode mode, Menu menu) {\n        actionMode = mode; //取得目前的ActionMode\n        mode.getMenuInflater().inflate(R.menu.menu, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onPrepareActionMode(ActionMode mode, Menu menu) {\n        //準備\n        mode.setTitle(\"Title\");\n        return true;\n    }\n\n    @Override\n    public boolean onActionItemClicked(ActionMode mode, MenuItem item) {\n        //Menu Item 點擊\n        return false;\n    }\n\n    @Override\n    public void onDestroyActionMode(ActionMode mode) {\n        //當ActionMode移除\n    }\n});\n```\n\n其實用法就這麼簡單，但當完成的時候，肯定會發現為什麼沒有覆蓋Toolbar，這時候我們只要加入下面這行：\n```xml\n<item name=\"windowActionModeOverlay\">true</item>\n```\n那麼ActionMode就可以覆蓋在Toolbar上面。\n\n# Before\n<img src=\"/2015/11/19/Android-Toolbar與ActionMode的運用/actionMode_0.png\" width=\"300\">\n\n# After\n<img src=\"/2015/11/19/Android-Toolbar與ActionMode的運用/actionMode_1.png\" width=\"300\">","slug":"Android-Toolbar與ActionMode的運用","published":1,"updated":"2018-08-21T12:13:45.891Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0rb000cskvcofis9yof","content":"<p>我想很多人不知道有這個ActionMode的存在，好啦…我承認之前真的不知道。</p>\n<p>值得高興的是Toolbar也有支援ActionMode，可以讓我們更方便的在特殊時刻切換至想要的Menu。</p>\n<h1 id=\"接下來就來說明如何應用\"><a href=\"#接下來就來說明如何應用\" class=\"headerlink\" title=\"接下來就來說明如何應用\"></a>接下來就來說明如何應用</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ActionMode actionMode; <span class=\"comment\">//為了可以對ActionMode做外部的更改</span></span><br><span class=\"line\">Toolbar toolbar = (Toolbar) findViewById(R.i.toolbar);</span><br><span class=\"line\">toolbar.toolbar.startActionMode( <span class=\"keyword\">new</span> ActionMode.Callback() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onCreateActionMode</span><span class=\"params\">(ActionMode mode, Menu menu)</span> </span>&#123;</span><br><span class=\"line\">        actionMode = mode; <span class=\"comment\">//取得目前的ActionMode</span></span><br><span class=\"line\">        mode.getMenuInflater().inflate(R.menu.menu, menu);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onPrepareActionMode</span><span class=\"params\">(ActionMode mode, Menu menu)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//準備</span></span><br><span class=\"line\">        mode.setTitle(<span class=\"string\">\"Title\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onActionItemClicked</span><span class=\"params\">(ActionMode mode, MenuItem item)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//Menu Item 點擊</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDestroyActionMode</span><span class=\"params\">(ActionMode mode)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//當ActionMode移除</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>其實用法就這麼簡單，但當完成的時候，肯定會發現為什麼沒有覆蓋Toolbar，這時候我們只要加入下面這行：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"windowActionModeOverlay\"</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>那麼ActionMode就可以覆蓋在Toolbar上面。</p>\n<h1 id=\"Before\"><a href=\"#Before\" class=\"headerlink\" title=\"Before\"></a>Before</h1><p><img src=\"/2015/11/19/Android-Toolbar與ActionMode的運用/actionMode_0.png\" width=\"300\"></p>\n<h1 id=\"After\"><a href=\"#After\" class=\"headerlink\" title=\"After\"></a>After</h1><p><img src=\"/2015/11/19/Android-Toolbar與ActionMode的運用/actionMode_1.png\" width=\"300\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>我想很多人不知道有這個ActionMode的存在，好啦…我承認之前真的不知道。</p>\n<p>值得高興的是Toolbar也有支援ActionMode，可以讓我們更方便的在特殊時刻切換至想要的Menu。</p>\n<h1 id=\"接下來就來說明如何應用\"><a href=\"#接下來就來說明如何應用\" class=\"headerlink\" title=\"接下來就來說明如何應用\"></a>接下來就來說明如何應用</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ActionMode actionMode; <span class=\"comment\">//為了可以對ActionMode做外部的更改</span></span><br><span class=\"line\">Toolbar toolbar = (Toolbar) findViewById(R.i.toolbar);</span><br><span class=\"line\">toolbar.toolbar.startActionMode( <span class=\"keyword\">new</span> ActionMode.Callback() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onCreateActionMode</span><span class=\"params\">(ActionMode mode, Menu menu)</span> </span>&#123;</span><br><span class=\"line\">        actionMode = mode; <span class=\"comment\">//取得目前的ActionMode</span></span><br><span class=\"line\">        mode.getMenuInflater().inflate(R.menu.menu, menu);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onPrepareActionMode</span><span class=\"params\">(ActionMode mode, Menu menu)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//準備</span></span><br><span class=\"line\">        mode.setTitle(<span class=\"string\">\"Title\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onActionItemClicked</span><span class=\"params\">(ActionMode mode, MenuItem item)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//Menu Item 點擊</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onDestroyActionMode</span><span class=\"params\">(ActionMode mode)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//當ActionMode移除</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<p>其實用法就這麼簡單，但當完成的時候，肯定會發現為什麼沒有覆蓋Toolbar，這時候我們只要加入下面這行：<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">name</span>=<span class=\"string\">\"windowActionModeOverlay\"</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>那麼ActionMode就可以覆蓋在Toolbar上面。</p>\n<h1 id=\"Before\"><a href=\"#Before\" class=\"headerlink\" title=\"Before\"></a>Before</h1><p><img src=\"/2015/11/19/Android-Toolbar與ActionMode的運用/actionMode_0.png\" width=\"300\"></p>\n<h1 id=\"After\"><a href=\"#After\" class=\"headerlink\" title=\"After\"></a>After</h1><p><img src=\"/2015/11/19/Android-Toolbar與ActionMode的運用/actionMode_1.png\" width=\"300\"></p>\n"},{"title":"Android. SpriteImage介紹","date":"2016-04-24T05:44:28.000Z","_content":"\n有些人常問我，怎一天到晚都在寫程式?\n\nTMD肥宅我覺得還是進入主體，牢騷沒人要聽啦！看看上次發文4/1，似乎今天有點久了，最近都在修改MyChart以及製作履歷表，剛好這次履歷表有用到SpriteImage，這種東西通常都用在遊戲上面。\n\n如果製作2D遊戲的人可能會常看到以下這種圖片\n<img src=\"/2016/03/01/Android-SpriteImage介紹/test2.png\" width=\"600\">\n(圖片資源取自於[Game 2D Art](http://www.gameart2d.com/freebies.html))\n\n為的就是減少效能使用，我們把一個連續動作放在一張大圖內，使用程式碼，裁減我們所需要的部分即可，這樣我們就不用一次讀取多張圖片。\n\n因為我這邊已經有自己寫好的類別，沒意外直接套用即可，所以就直接打上來\n\n# 主類別\n```java\npublic class SpriteAnimation {\n\n    protected Context context;\n\n    protected Rect bitmapRect;\n\n    protected long lastFrameChangeTime = 0; //累計時間\n\n    protected long frameLengthInMilliseconds = 100; //更新速度\n\n    /**\n    * 對圖片預算，垂直與水平的框架都要計算\n    * countFrame 為所有框架的數量\n    */\n    protected int countHorizontalFrame = 0, countVerticalFrame = 0, countFrame = 0;\n    \n    /**\n    * 目前運行的框架位置\n    */\n    protected int currentHorizontalFrame = 0, currentVerticalFrame = 0;\n    \n    /**\n    * 裁減的大小\n    */\n    protected int frameWidth = 0;\n    protected int frameHeight = 0;\n\n    private OnUpdateListener onUpdateListener;\n\n    public SpriteAnimation(long frameLengthInMilliseconds, Rect bitmapRect, int frameWidth, int frameHeight, int countFrame) {\n        this.frameLengthInMilliseconds = frameLengthInMilliseconds;\n        this.bitmapRect = bitmapRect;\n        this.frameWidth = frameWidth;\n        this.frameHeight = frameHeight;\n        this.countFrame = countFrame;\n\n        countHorizontalFrame = bitmapRect.width() / frameWidth;\n        countVerticalFrame = bitmapRect.height() / frameHeight;\n    }\n\n    private int animateCount = 0;\n\n    public void start() {\n        long time  = System.currentTimeMillis();\n        if ( time > lastFrameChangeTime + frameLengthInMilliseconds) {\n            lastFrameChangeTime = time;\n            currentHorizontalFrame++;\n            if (currentHorizontalFrame >= countHorizontalFrame) {\n                currentHorizontalFrame = 0;\n                currentVerticalFrame++;\n                if(currentVerticalFrame >= countVerticalFrame)\n                    currentVerticalFrame = 0;\n            }\n            animateCount++;\n        }\n        if(onUpdateListener != null) {\n            onUpdateListener.onUpdate(currentHorizontalFrame, currentVerticalFrame);\n            if(animateCount >= countFrame) {\n                currentVerticalFrame = 0;\n                currentHorizontalFrame = 0;\n                animateCount = 0;\n                onUpdateListener.end();\n            }\n        }\n    }\n\n    public interface OnUpdateListener {\n        void onUpdate(int currentHorizontalFrame, int currentVerticalFrame);\n        void end();\n    }\n\n    public void setOnUpdateListener(OnUpdateListener onUpdateListener) {\n        this.onUpdateListener = onUpdateListener;\n    }\n\n    public int getFrameHeight() {\n        return frameHeight;\n    }\n\n    public int getFrameWidth() {\n        return frameWidth;\n    }\n\n    public int getCountFrame() {\n        return countFrame;\n    }\n}\n```\n\n# 使用方法\n```java\nmSpriteAnimation = new SpriteAnimation(100, \n                    new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight()), 192, 192, 10);\nmSpriteAnimation.setOnUpdateListener(onUpdateListener);\nmSpriteAnimation.start();\nprivate SpriteAnimation.OnUpdateListener onUpdateListener = new SpriteAnimation.OnUpdateListener() {\n    @Override\n    public void onUpdate(int currentHorizontalFrame, int currentVerticalFrame) {\n        int left = currentHorizontalFrame * mSpriteAnimation.getFrameWidth();\n        int right = left + mSpriteAnimation.getFrameWidth();\n        int top = currentVerticalFrame * mSpriteAnimation.getFrameHeight();\n        int bottom = top + mSpriteAnimation.getFrameHeight();\n        srcRect.set(left, top, right, bottom); //更新剪裁位置\n        canvas.drawBitmap(runBitmap, srcRect, dstRect, null);\n    }\n\n    @Override\n    public void end() {\n\n    }\n}\n```","source":"_posts/Android-SpriteImage介紹.md","raw":"---\ntitle: Android. SpriteImage介紹\ndate: 2016-04-24 13:44:28\ntags: Android\n---\n\n有些人常問我，怎一天到晚都在寫程式?\n\nTMD肥宅我覺得還是進入主體，牢騷沒人要聽啦！看看上次發文4/1，似乎今天有點久了，最近都在修改MyChart以及製作履歷表，剛好這次履歷表有用到SpriteImage，這種東西通常都用在遊戲上面。\n\n如果製作2D遊戲的人可能會常看到以下這種圖片\n<img src=\"/2016/03/01/Android-SpriteImage介紹/test2.png\" width=\"600\">\n(圖片資源取自於[Game 2D Art](http://www.gameart2d.com/freebies.html))\n\n為的就是減少效能使用，我們把一個連續動作放在一張大圖內，使用程式碼，裁減我們所需要的部分即可，這樣我們就不用一次讀取多張圖片。\n\n因為我這邊已經有自己寫好的類別，沒意外直接套用即可，所以就直接打上來\n\n# 主類別\n```java\npublic class SpriteAnimation {\n\n    protected Context context;\n\n    protected Rect bitmapRect;\n\n    protected long lastFrameChangeTime = 0; //累計時間\n\n    protected long frameLengthInMilliseconds = 100; //更新速度\n\n    /**\n    * 對圖片預算，垂直與水平的框架都要計算\n    * countFrame 為所有框架的數量\n    */\n    protected int countHorizontalFrame = 0, countVerticalFrame = 0, countFrame = 0;\n    \n    /**\n    * 目前運行的框架位置\n    */\n    protected int currentHorizontalFrame = 0, currentVerticalFrame = 0;\n    \n    /**\n    * 裁減的大小\n    */\n    protected int frameWidth = 0;\n    protected int frameHeight = 0;\n\n    private OnUpdateListener onUpdateListener;\n\n    public SpriteAnimation(long frameLengthInMilliseconds, Rect bitmapRect, int frameWidth, int frameHeight, int countFrame) {\n        this.frameLengthInMilliseconds = frameLengthInMilliseconds;\n        this.bitmapRect = bitmapRect;\n        this.frameWidth = frameWidth;\n        this.frameHeight = frameHeight;\n        this.countFrame = countFrame;\n\n        countHorizontalFrame = bitmapRect.width() / frameWidth;\n        countVerticalFrame = bitmapRect.height() / frameHeight;\n    }\n\n    private int animateCount = 0;\n\n    public void start() {\n        long time  = System.currentTimeMillis();\n        if ( time > lastFrameChangeTime + frameLengthInMilliseconds) {\n            lastFrameChangeTime = time;\n            currentHorizontalFrame++;\n            if (currentHorizontalFrame >= countHorizontalFrame) {\n                currentHorizontalFrame = 0;\n                currentVerticalFrame++;\n                if(currentVerticalFrame >= countVerticalFrame)\n                    currentVerticalFrame = 0;\n            }\n            animateCount++;\n        }\n        if(onUpdateListener != null) {\n            onUpdateListener.onUpdate(currentHorizontalFrame, currentVerticalFrame);\n            if(animateCount >= countFrame) {\n                currentVerticalFrame = 0;\n                currentHorizontalFrame = 0;\n                animateCount = 0;\n                onUpdateListener.end();\n            }\n        }\n    }\n\n    public interface OnUpdateListener {\n        void onUpdate(int currentHorizontalFrame, int currentVerticalFrame);\n        void end();\n    }\n\n    public void setOnUpdateListener(OnUpdateListener onUpdateListener) {\n        this.onUpdateListener = onUpdateListener;\n    }\n\n    public int getFrameHeight() {\n        return frameHeight;\n    }\n\n    public int getFrameWidth() {\n        return frameWidth;\n    }\n\n    public int getCountFrame() {\n        return countFrame;\n    }\n}\n```\n\n# 使用方法\n```java\nmSpriteAnimation = new SpriteAnimation(100, \n                    new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight()), 192, 192, 10);\nmSpriteAnimation.setOnUpdateListener(onUpdateListener);\nmSpriteAnimation.start();\nprivate SpriteAnimation.OnUpdateListener onUpdateListener = new SpriteAnimation.OnUpdateListener() {\n    @Override\n    public void onUpdate(int currentHorizontalFrame, int currentVerticalFrame) {\n        int left = currentHorizontalFrame * mSpriteAnimation.getFrameWidth();\n        int right = left + mSpriteAnimation.getFrameWidth();\n        int top = currentVerticalFrame * mSpriteAnimation.getFrameHeight();\n        int bottom = top + mSpriteAnimation.getFrameHeight();\n        srcRect.set(left, top, right, bottom); //更新剪裁位置\n        canvas.drawBitmap(runBitmap, srcRect, dstRect, null);\n    }\n\n    @Override\n    public void end() {\n\n    }\n}\n```","slug":"Android-SpriteImage介紹","published":1,"updated":"2018-08-21T12:13:45.885Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0rd000fskvcso4vt4y0","content":"<p>有些人常問我，怎一天到晚都在寫程式?</p>\n<p>TMD肥宅我覺得還是進入主體，牢騷沒人要聽啦！看看上次發文4/1，似乎今天有點久了，最近都在修改MyChart以及製作履歷表，剛好這次履歷表有用到SpriteImage，這種東西通常都用在遊戲上面。</p>\n<p>如果製作2D遊戲的人可能會常看到以下這種圖片<br><img src=\"/2016/03/01/Android-SpriteImage介紹/test2.png\" width=\"600\"><br>(圖片資源取自於<a href=\"http://www.gameart2d.com/freebies.html\" target=\"_blank\" rel=\"noopener\">Game 2D Art</a>)</p>\n<p>為的就是減少效能使用，我們把一個連續動作放在一張大圖內，使用程式碼，裁減我們所需要的部分即可，這樣我們就不用一次讀取多張圖片。</p>\n<p>因為我這邊已經有自己寫好的類別，沒意外直接套用即可，所以就直接打上來</p>\n<h1 id=\"主類別\"><a href=\"#主類別\" class=\"headerlink\" title=\"主類別\"></a>主類別</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpriteAnimation</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Context context;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Rect bitmapRect;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">long</span> lastFrameChangeTime = <span class=\"number\">0</span>; <span class=\"comment\">//累計時間</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">long</span> frameLengthInMilliseconds = <span class=\"number\">100</span>; <span class=\"comment\">//更新速度</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 對圖片預算，垂直與水平的框架都要計算</span></span><br><span class=\"line\"><span class=\"comment\">    * countFrame 為所有框架的數量</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> countHorizontalFrame = <span class=\"number\">0</span>, countVerticalFrame = <span class=\"number\">0</span>, countFrame = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 目前運行的框架位置</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> currentHorizontalFrame = <span class=\"number\">0</span>, currentVerticalFrame = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 裁減的大小</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> frameWidth = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> frameHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> OnUpdateListener onUpdateListener;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SpriteAnimation</span><span class=\"params\">(<span class=\"keyword\">long</span> frameLengthInMilliseconds, Rect bitmapRect, <span class=\"keyword\">int</span> frameWidth, <span class=\"keyword\">int</span> frameHeight, <span class=\"keyword\">int</span> countFrame)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.frameLengthInMilliseconds = frameLengthInMilliseconds;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.bitmapRect = bitmapRect;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.frameWidth = frameWidth;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.frameHeight = frameHeight;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.countFrame = countFrame;</span><br><span class=\"line\"></span><br><span class=\"line\">        countHorizontalFrame = bitmapRect.width() / frameWidth;</span><br><span class=\"line\">        countVerticalFrame = bitmapRect.height() / frameHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> animateCount = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">start</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> time  = System.currentTimeMillis();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( time &gt; lastFrameChangeTime + frameLengthInMilliseconds) &#123;</span><br><span class=\"line\">            lastFrameChangeTime = time;</span><br><span class=\"line\">            currentHorizontalFrame++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (currentHorizontalFrame &gt;= countHorizontalFrame) &#123;</span><br><span class=\"line\">                currentHorizontalFrame = <span class=\"number\">0</span>;</span><br><span class=\"line\">                currentVerticalFrame++;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(currentVerticalFrame &gt;= countVerticalFrame)</span><br><span class=\"line\">                    currentVerticalFrame = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            animateCount++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(onUpdateListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            onUpdateListener.onUpdate(currentHorizontalFrame, currentVerticalFrame);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(animateCount &gt;= countFrame) &#123;</span><br><span class=\"line\">                currentVerticalFrame = <span class=\"number\">0</span>;</span><br><span class=\"line\">                currentHorizontalFrame = <span class=\"number\">0</span>;</span><br><span class=\"line\">                animateCount = <span class=\"number\">0</span>;</span><br><span class=\"line\">                onUpdateListener.end();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">OnUpdateListener</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onUpdate</span><span class=\"params\">(<span class=\"keyword\">int</span> currentHorizontalFrame, <span class=\"keyword\">int</span> currentVerticalFrame)</span></span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">end</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOnUpdateListener</span><span class=\"params\">(OnUpdateListener onUpdateListener)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.onUpdateListener = onUpdateListener;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getFrameHeight</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> frameHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getFrameWidth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> frameWidth;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getCountFrame</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> countFrame;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mSpriteAnimation = <span class=\"keyword\">new</span> SpriteAnimation(<span class=\"number\">100</span>, </span><br><span class=\"line\">                    <span class=\"keyword\">new</span> Rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, bitmap.getWidth(), bitmap.getHeight()), <span class=\"number\">192</span>, <span class=\"number\">192</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">mSpriteAnimation.setOnUpdateListener(onUpdateListener);</span><br><span class=\"line\">mSpriteAnimation.start();</span><br><span class=\"line\"><span class=\"keyword\">private</span> SpriteAnimation.OnUpdateListener onUpdateListener = <span class=\"keyword\">new</span> SpriteAnimation.OnUpdateListener() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onUpdate</span><span class=\"params\">(<span class=\"keyword\">int</span> currentHorizontalFrame, <span class=\"keyword\">int</span> currentVerticalFrame)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> left = currentHorizontalFrame * mSpriteAnimation.getFrameWidth();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> right = left + mSpriteAnimation.getFrameWidth();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> top = currentVerticalFrame * mSpriteAnimation.getFrameHeight();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> bottom = top + mSpriteAnimation.getFrameHeight();</span><br><span class=\"line\">        srcRect.set(left, top, right, bottom); <span class=\"comment\">//更新剪裁位置</span></span><br><span class=\"line\">        canvas.drawBitmap(runBitmap, srcRect, dstRect, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">end</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>有些人常問我，怎一天到晚都在寫程式?</p>\n<p>TMD肥宅我覺得還是進入主體，牢騷沒人要聽啦！看看上次發文4/1，似乎今天有點久了，最近都在修改MyChart以及製作履歷表，剛好這次履歷表有用到SpriteImage，這種東西通常都用在遊戲上面。</p>\n<p>如果製作2D遊戲的人可能會常看到以下這種圖片<br><img src=\"/2016/03/01/Android-SpriteImage介紹/test2.png\" width=\"600\"><br>(圖片資源取自於<a href=\"http://www.gameart2d.com/freebies.html\" target=\"_blank\" rel=\"noopener\">Game 2D Art</a>)</p>\n<p>為的就是減少效能使用，我們把一個連續動作放在一張大圖內，使用程式碼，裁減我們所需要的部分即可，這樣我們就不用一次讀取多張圖片。</p>\n<p>因為我這邊已經有自己寫好的類別，沒意外直接套用即可，所以就直接打上來</p>\n<h1 id=\"主類別\"><a href=\"#主類別\" class=\"headerlink\" title=\"主類別\"></a>主類別</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SpriteAnimation</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Context context;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Rect bitmapRect;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">long</span> lastFrameChangeTime = <span class=\"number\">0</span>; <span class=\"comment\">//累計時間</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">long</span> frameLengthInMilliseconds = <span class=\"number\">100</span>; <span class=\"comment\">//更新速度</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 對圖片預算，垂直與水平的框架都要計算</span></span><br><span class=\"line\"><span class=\"comment\">    * countFrame 為所有框架的數量</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> countHorizontalFrame = <span class=\"number\">0</span>, countVerticalFrame = <span class=\"number\">0</span>, countFrame = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 目前運行的框架位置</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> currentHorizontalFrame = <span class=\"number\">0</span>, currentVerticalFrame = <span class=\"number\">0</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 裁減的大小</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> frameWidth = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> frameHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> OnUpdateListener onUpdateListener;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SpriteAnimation</span><span class=\"params\">(<span class=\"keyword\">long</span> frameLengthInMilliseconds, Rect bitmapRect, <span class=\"keyword\">int</span> frameWidth, <span class=\"keyword\">int</span> frameHeight, <span class=\"keyword\">int</span> countFrame)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.frameLengthInMilliseconds = frameLengthInMilliseconds;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.bitmapRect = bitmapRect;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.frameWidth = frameWidth;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.frameHeight = frameHeight;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.countFrame = countFrame;</span><br><span class=\"line\"></span><br><span class=\"line\">        countHorizontalFrame = bitmapRect.width() / frameWidth;</span><br><span class=\"line\">        countVerticalFrame = bitmapRect.height() / frameHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> animateCount = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">start</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">long</span> time  = System.currentTimeMillis();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( time &gt; lastFrameChangeTime + frameLengthInMilliseconds) &#123;</span><br><span class=\"line\">            lastFrameChangeTime = time;</span><br><span class=\"line\">            currentHorizontalFrame++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (currentHorizontalFrame &gt;= countHorizontalFrame) &#123;</span><br><span class=\"line\">                currentHorizontalFrame = <span class=\"number\">0</span>;</span><br><span class=\"line\">                currentVerticalFrame++;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(currentVerticalFrame &gt;= countVerticalFrame)</span><br><span class=\"line\">                    currentVerticalFrame = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            animateCount++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(onUpdateListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            onUpdateListener.onUpdate(currentHorizontalFrame, currentVerticalFrame);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(animateCount &gt;= countFrame) &#123;</span><br><span class=\"line\">                currentVerticalFrame = <span class=\"number\">0</span>;</span><br><span class=\"line\">                currentHorizontalFrame = <span class=\"number\">0</span>;</span><br><span class=\"line\">                animateCount = <span class=\"number\">0</span>;</span><br><span class=\"line\">                onUpdateListener.end();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">OnUpdateListener</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onUpdate</span><span class=\"params\">(<span class=\"keyword\">int</span> currentHorizontalFrame, <span class=\"keyword\">int</span> currentVerticalFrame)</span></span>;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">end</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOnUpdateListener</span><span class=\"params\">(OnUpdateListener onUpdateListener)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.onUpdateListener = onUpdateListener;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getFrameHeight</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> frameHeight;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getFrameWidth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> frameWidth;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getCountFrame</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> countFrame;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mSpriteAnimation = <span class=\"keyword\">new</span> SpriteAnimation(<span class=\"number\">100</span>, </span><br><span class=\"line\">                    <span class=\"keyword\">new</span> Rect(<span class=\"number\">0</span>, <span class=\"number\">0</span>, bitmap.getWidth(), bitmap.getHeight()), <span class=\"number\">192</span>, <span class=\"number\">192</span>, <span class=\"number\">10</span>);</span><br><span class=\"line\">mSpriteAnimation.setOnUpdateListener(onUpdateListener);</span><br><span class=\"line\">mSpriteAnimation.start();</span><br><span class=\"line\"><span class=\"keyword\">private</span> SpriteAnimation.OnUpdateListener onUpdateListener = <span class=\"keyword\">new</span> SpriteAnimation.OnUpdateListener() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onUpdate</span><span class=\"params\">(<span class=\"keyword\">int</span> currentHorizontalFrame, <span class=\"keyword\">int</span> currentVerticalFrame)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> left = currentHorizontalFrame * mSpriteAnimation.getFrameWidth();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> right = left + mSpriteAnimation.getFrameWidth();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> top = currentVerticalFrame * mSpriteAnimation.getFrameHeight();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> bottom = top + mSpriteAnimation.getFrameHeight();</span><br><span class=\"line\">        srcRect.set(left, top, right, bottom); <span class=\"comment\">//更新剪裁位置</span></span><br><span class=\"line\">        canvas.drawBitmap(runBitmap, srcRect, dstRect, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">end</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Android. View的水平與慣性移動","date":"2016-04-01T08:10:37.000Z","_content":"\n猶如前幾天所發布的開源圖表套件，有嘗試的人應該會發現移動怪怪的，這部分確實當初並沒有對於這部分下功夫，所以我今天給他更改了一下，達到我們所想要的滑動效果。\n\n今天比較平穩的Po文，因為我好累，懶得靠北太多程式的東西，但還是得分享分享。\n\n首先我們得了解兩大Class，分別為Scroller與VelocityTracker，前者為滑動效果，後者為手勢速度，看到上述的物件應該都明白我們將之搭配起來，來讓我們有高級滑動的效果！\n\n# Scroller\n它不是物件，簡單的來說，它可以計算精確的滑動位置，讓我們使用這些數據做運用。\n它包含了各種滑動的運算，當然我們通常都只用到其中幾種。\n\n# VelocityTracker\n這Class通常放在OnTouch觸發的狀態下，記錄當前手勢的移動位置與計算速度。\n\n接下來以一個簡單的範例來說明。\n\n```java\npublic class CustomView extands View {\n    \n    public static final int SCROLL_MODE = 0;\n    public static final int FLING_MODE = 1;\n\n    public int SCROLLER_MODE = -1;\n\n    private Scroller mScroller;\n    private VelocityTracker mVelocityTracker;\n\n    private int mScaledMinimumFlingVelocity;\n    private int mScaledMaximumFlingVelocity;\n\n    private float offestX, offestY;\n\n    public CustomView(Context context) {\n    super(context);\n        mScroller = new Scroller(context);\n        mViewConfiguration = ViewConfiguration.get(context);\n        mScaledMinimumFlingVelocity = mViewConfiguration.getScaledMinimumFlingVelocity();\n        mScaledMaximumFlingVelocity = mViewConfiguration.getScaledMaximumFlingVelocity();\n    }\n\n    private void obtainVelocityTracker(MotionEvent event) {\n        if (mVelocityTracker == null) {\n            mVelocityTracker = VelocityTracker.obtain();\n        }\n        mVelocityTracker.addMovement(event);\n    }\n\n    private void releaseVelocityTracker() {\n        if (mVelocityTracker != null) {\n            mVelocityTracker.recycle();\n            mVelocityTracker = null;\n        }\n    }\n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        obtainVelocityTracker(event); //每次動作都得運算\n        switch(event.getAction) {\n            case MotionEvent.ACTION_DOWN:\n                offestX = curLeft - event.getX();\n                offestY = curTop - event.getY();\n                break;\n            case MotionEvent.ACTION_MOVE:\n                SCROLLER_MODE = SCROLL_MODE;\n                mScroller.startScroll((int) event.getX(), (int) event.getY(),\n                    (int) offestX, (int) offestY, 1);\n                break;\n            case MotionEvent.ACTION_UP:\n                SCROLLER_MODE = FLING_MODE;\n                int initialVelocity = (int) mVelocityTracker.getXVelocity();\n                mVelocityTracker.computeCurrentVelocity(1000, mScaledMaximumFlingVelocity);\n                if (Math.abs(initialVelocity) > mScaledMinimumFlingVelocity) {\n                    // 這個方法不難看出，Scroller與VelocityTracker的緊密結合。\n                    mScroller.fling((int) curLeft, (int) curTop,\n                                (int) mVelocityTracker.getXVelocity(), (int) mVelocityTracker.getYVelocity(),\n                                minX, maxX, minY, maxY);\n                }\n                // 釋放VelocityTracker資源\n                releaseVelocityTracker();\n                break;\n        }\n        // 如果沒有Invalidate狀態，Scroller是不會運作的，更不會運作computeScroll()\n        ViewCompat.postInvalidateOnAnimation(this);\n        return true;\n    }\n  \n    /**\n    * 這方法很明顯的就是要我們自行去計算Sroller所給予的數值。\n    */\n    @Override\n    public void computeScroll() {\n        /**\n        *將兩種不同數據分開的原因為，我們Scroll更新速度快，因此直接用最終結果\n        *然而Fling算是一種動畫效果，因此在ACTION_UP時會有這個動畫，這時候就需要使用當前數據。    \n        */\n        if(SCROLLER_MODE == SCROLL_MODE) {\n            curLeft = mScroller.getFinalX();\n            curTop = mScroller.getFinalY():\n        } else {\n            curLeft = mScroller.getCurrX();\n            curTop = mScroller.getCurrY();\n        }\n        ViewCompat.postInvalidateOnAnimation(this);\n    }\n}\n```\n\n好吧！　今天下課了，看起來沒有很複雜，如果想有更棒的效果，\n對於Scroller與VelocityTracker的了解是不可或缺的，除非你想自己寫Buffer >\\<\n\n程式碼只是把部分打出來，所以可能不能直接套用，自己先嘗試看看吧！","source":"_posts/Android-View的水平與慣性移動.md","raw":"---\ntitle: Android. View的水平與慣性移動\ndate: 2016-04-01 16:10:37\ntags: Android\n---\n\n猶如前幾天所發布的開源圖表套件，有嘗試的人應該會發現移動怪怪的，這部分確實當初並沒有對於這部分下功夫，所以我今天給他更改了一下，達到我們所想要的滑動效果。\n\n今天比較平穩的Po文，因為我好累，懶得靠北太多程式的東西，但還是得分享分享。\n\n首先我們得了解兩大Class，分別為Scroller與VelocityTracker，前者為滑動效果，後者為手勢速度，看到上述的物件應該都明白我們將之搭配起來，來讓我們有高級滑動的效果！\n\n# Scroller\n它不是物件，簡單的來說，它可以計算精確的滑動位置，讓我們使用這些數據做運用。\n它包含了各種滑動的運算，當然我們通常都只用到其中幾種。\n\n# VelocityTracker\n這Class通常放在OnTouch觸發的狀態下，記錄當前手勢的移動位置與計算速度。\n\n接下來以一個簡單的範例來說明。\n\n```java\npublic class CustomView extands View {\n    \n    public static final int SCROLL_MODE = 0;\n    public static final int FLING_MODE = 1;\n\n    public int SCROLLER_MODE = -1;\n\n    private Scroller mScroller;\n    private VelocityTracker mVelocityTracker;\n\n    private int mScaledMinimumFlingVelocity;\n    private int mScaledMaximumFlingVelocity;\n\n    private float offestX, offestY;\n\n    public CustomView(Context context) {\n    super(context);\n        mScroller = new Scroller(context);\n        mViewConfiguration = ViewConfiguration.get(context);\n        mScaledMinimumFlingVelocity = mViewConfiguration.getScaledMinimumFlingVelocity();\n        mScaledMaximumFlingVelocity = mViewConfiguration.getScaledMaximumFlingVelocity();\n    }\n\n    private void obtainVelocityTracker(MotionEvent event) {\n        if (mVelocityTracker == null) {\n            mVelocityTracker = VelocityTracker.obtain();\n        }\n        mVelocityTracker.addMovement(event);\n    }\n\n    private void releaseVelocityTracker() {\n        if (mVelocityTracker != null) {\n            mVelocityTracker.recycle();\n            mVelocityTracker = null;\n        }\n    }\n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        obtainVelocityTracker(event); //每次動作都得運算\n        switch(event.getAction) {\n            case MotionEvent.ACTION_DOWN:\n                offestX = curLeft - event.getX();\n                offestY = curTop - event.getY();\n                break;\n            case MotionEvent.ACTION_MOVE:\n                SCROLLER_MODE = SCROLL_MODE;\n                mScroller.startScroll((int) event.getX(), (int) event.getY(),\n                    (int) offestX, (int) offestY, 1);\n                break;\n            case MotionEvent.ACTION_UP:\n                SCROLLER_MODE = FLING_MODE;\n                int initialVelocity = (int) mVelocityTracker.getXVelocity();\n                mVelocityTracker.computeCurrentVelocity(1000, mScaledMaximumFlingVelocity);\n                if (Math.abs(initialVelocity) > mScaledMinimumFlingVelocity) {\n                    // 這個方法不難看出，Scroller與VelocityTracker的緊密結合。\n                    mScroller.fling((int) curLeft, (int) curTop,\n                                (int) mVelocityTracker.getXVelocity(), (int) mVelocityTracker.getYVelocity(),\n                                minX, maxX, minY, maxY);\n                }\n                // 釋放VelocityTracker資源\n                releaseVelocityTracker();\n                break;\n        }\n        // 如果沒有Invalidate狀態，Scroller是不會運作的，更不會運作computeScroll()\n        ViewCompat.postInvalidateOnAnimation(this);\n        return true;\n    }\n  \n    /**\n    * 這方法很明顯的就是要我們自行去計算Sroller所給予的數值。\n    */\n    @Override\n    public void computeScroll() {\n        /**\n        *將兩種不同數據分開的原因為，我們Scroll更新速度快，因此直接用最終結果\n        *然而Fling算是一種動畫效果，因此在ACTION_UP時會有這個動畫，這時候就需要使用當前數據。    \n        */\n        if(SCROLLER_MODE == SCROLL_MODE) {\n            curLeft = mScroller.getFinalX();\n            curTop = mScroller.getFinalY():\n        } else {\n            curLeft = mScroller.getCurrX();\n            curTop = mScroller.getCurrY();\n        }\n        ViewCompat.postInvalidateOnAnimation(this);\n    }\n}\n```\n\n好吧！　今天下課了，看起來沒有很複雜，如果想有更棒的效果，\n對於Scroller與VelocityTracker的了解是不可或缺的，除非你想自己寫Buffer >\\<\n\n程式碼只是把部分打出來，所以可能不能直接套用，自己先嘗試看看吧！","slug":"Android-View的水平與慣性移動","published":1,"updated":"2018-08-21T12:13:45.893Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0re000hskvcpj1kljtt","content":"<p>猶如前幾天所發布的開源圖表套件，有嘗試的人應該會發現移動怪怪的，這部分確實當初並沒有對於這部分下功夫，所以我今天給他更改了一下，達到我們所想要的滑動效果。</p>\n<p>今天比較平穩的Po文，因為我好累，懶得靠北太多程式的東西，但還是得分享分享。</p>\n<p>首先我們得了解兩大Class，分別為Scroller與VelocityTracker，前者為滑動效果，後者為手勢速度，看到上述的物件應該都明白我們將之搭配起來，來讓我們有高級滑動的效果！</p>\n<h1 id=\"Scroller\"><a href=\"#Scroller\" class=\"headerlink\" title=\"Scroller\"></a>Scroller</h1><p>它不是物件，簡單的來說，它可以計算精確的滑動位置，讓我們使用這些數據做運用。<br>它包含了各種滑動的運算，當然我們通常都只用到其中幾種。</p>\n<h1 id=\"VelocityTracker\"><a href=\"#VelocityTracker\" class=\"headerlink\" title=\"VelocityTracker\"></a>VelocityTracker</h1><p>這Class通常放在OnTouch觸發的狀態下，記錄當前手勢的移動位置與計算速度。</p>\n<p>接下來以一個簡單的範例來說明。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CustomView</span> <span class=\"title\">extands</span> <span class=\"title\">View</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> SCROLL_MODE = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> FLING_MODE = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> SCROLLER_MODE = -<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Scroller mScroller;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> VelocityTracker mVelocityTracker;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mScaledMinimumFlingVelocity;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mScaledMaximumFlingVelocity;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> offestX, offestY;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CustomView</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(context);</span><br><span class=\"line\">        mScroller = <span class=\"keyword\">new</span> Scroller(context);</span><br><span class=\"line\">        mViewConfiguration = ViewConfiguration.get(context);</span><br><span class=\"line\">        mScaledMinimumFlingVelocity = mViewConfiguration.getScaledMinimumFlingVelocity();</span><br><span class=\"line\">        mScaledMaximumFlingVelocity = mViewConfiguration.getScaledMaximumFlingVelocity();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">obtainVelocityTracker</span><span class=\"params\">(MotionEvent event)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mVelocityTracker == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            mVelocityTracker = VelocityTracker.obtain();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mVelocityTracker.addMovement(event);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">releaseVelocityTracker</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mVelocityTracker != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            mVelocityTracker.recycle();</span><br><span class=\"line\">            mVelocityTracker = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouchEvent</span><span class=\"params\">(MotionEvent event)</span> </span>&#123;</span><br><span class=\"line\">        obtainVelocityTracker(event); <span class=\"comment\">//每次動作都得運算</span></span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(event.getAction) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_DOWN:</span><br><span class=\"line\">                offestX = curLeft - event.getX();</span><br><span class=\"line\">                offestY = curTop - event.getY();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_MOVE:</span><br><span class=\"line\">                SCROLLER_MODE = SCROLL_MODE;</span><br><span class=\"line\">                mScroller.startScroll((<span class=\"keyword\">int</span>) event.getX(), (<span class=\"keyword\">int</span>) event.getY(),</span><br><span class=\"line\">                    (<span class=\"keyword\">int</span>) offestX, (<span class=\"keyword\">int</span>) offestY, <span class=\"number\">1</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_UP:</span><br><span class=\"line\">                SCROLLER_MODE = FLING_MODE;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> initialVelocity = (<span class=\"keyword\">int</span>) mVelocityTracker.getXVelocity();</span><br><span class=\"line\">                mVelocityTracker.computeCurrentVelocity(<span class=\"number\">1000</span>, mScaledMaximumFlingVelocity);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (Math.abs(initialVelocity) &gt; mScaledMinimumFlingVelocity) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 這個方法不難看出，Scroller與VelocityTracker的緊密結合。</span></span><br><span class=\"line\">                    mScroller.fling((<span class=\"keyword\">int</span>) curLeft, (<span class=\"keyword\">int</span>) curTop,</span><br><span class=\"line\">                                (<span class=\"keyword\">int</span>) mVelocityTracker.getXVelocity(), (<span class=\"keyword\">int</span>) mVelocityTracker.getYVelocity(),</span><br><span class=\"line\">                                minX, maxX, minY, maxY);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">// 釋放VelocityTracker資源</span></span><br><span class=\"line\">                releaseVelocityTracker();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 如果沒有Invalidate狀態，Scroller是不會運作的，更不會運作computeScroll()</span></span><br><span class=\"line\">        ViewCompat.postInvalidateOnAnimation(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 這方法很明顯的就是要我們自行去計算Sroller所給予的數值。</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">computeScroll</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">        *將兩種不同數據分開的原因為，我們Scroll更新速度快，因此直接用最終結果</span></span><br><span class=\"line\"><span class=\"comment\">        *然而Fling算是一種動畫效果，因此在ACTION_UP時會有這個動畫，這時候就需要使用當前數據。    </span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(SCROLLER_MODE == SCROLL_MODE) &#123;</span><br><span class=\"line\">            curLeft = mScroller.getFinalX();</span><br><span class=\"line\">            curTop = mScroller.getFinalY():</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            curLeft = mScroller.getCurrX();</span><br><span class=\"line\">            curTop = mScroller.getCurrY();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ViewCompat.postInvalidateOnAnimation(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>好吧！　今天下課了，看起來沒有很複雜，如果想有更棒的效果，<br>對於Scroller與VelocityTracker的了解是不可或缺的，除非你想自己寫Buffer &gt;\\&lt;</p>\n<p>程式碼只是把部分打出來，所以可能不能直接套用，自己先嘗試看看吧！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>猶如前幾天所發布的開源圖表套件，有嘗試的人應該會發現移動怪怪的，這部分確實當初並沒有對於這部分下功夫，所以我今天給他更改了一下，達到我們所想要的滑動效果。</p>\n<p>今天比較平穩的Po文，因為我好累，懶得靠北太多程式的東西，但還是得分享分享。</p>\n<p>首先我們得了解兩大Class，分別為Scroller與VelocityTracker，前者為滑動效果，後者為手勢速度，看到上述的物件應該都明白我們將之搭配起來，來讓我們有高級滑動的效果！</p>\n<h1 id=\"Scroller\"><a href=\"#Scroller\" class=\"headerlink\" title=\"Scroller\"></a>Scroller</h1><p>它不是物件，簡單的來說，它可以計算精確的滑動位置，讓我們使用這些數據做運用。<br>它包含了各種滑動的運算，當然我們通常都只用到其中幾種。</p>\n<h1 id=\"VelocityTracker\"><a href=\"#VelocityTracker\" class=\"headerlink\" title=\"VelocityTracker\"></a>VelocityTracker</h1><p>這Class通常放在OnTouch觸發的狀態下，記錄當前手勢的移動位置與計算速度。</p>\n<p>接下來以一個簡單的範例來說明。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CustomView</span> <span class=\"title\">extands</span> <span class=\"title\">View</span> </span>&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> SCROLL_MODE = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> FLING_MODE = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">int</span> SCROLLER_MODE = -<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Scroller mScroller;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> VelocityTracker mVelocityTracker;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mScaledMinimumFlingVelocity;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mScaledMaximumFlingVelocity;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> offestX, offestY;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CustomView</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">super</span>(context);</span><br><span class=\"line\">        mScroller = <span class=\"keyword\">new</span> Scroller(context);</span><br><span class=\"line\">        mViewConfiguration = ViewConfiguration.get(context);</span><br><span class=\"line\">        mScaledMinimumFlingVelocity = mViewConfiguration.getScaledMinimumFlingVelocity();</span><br><span class=\"line\">        mScaledMaximumFlingVelocity = mViewConfiguration.getScaledMaximumFlingVelocity();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">obtainVelocityTracker</span><span class=\"params\">(MotionEvent event)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mVelocityTracker == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            mVelocityTracker = VelocityTracker.obtain();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mVelocityTracker.addMovement(event);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">releaseVelocityTracker</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mVelocityTracker != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            mVelocityTracker.recycle();</span><br><span class=\"line\">            mVelocityTracker = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouchEvent</span><span class=\"params\">(MotionEvent event)</span> </span>&#123;</span><br><span class=\"line\">        obtainVelocityTracker(event); <span class=\"comment\">//每次動作都得運算</span></span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(event.getAction) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_DOWN:</span><br><span class=\"line\">                offestX = curLeft - event.getX();</span><br><span class=\"line\">                offestY = curTop - event.getY();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_MOVE:</span><br><span class=\"line\">                SCROLLER_MODE = SCROLL_MODE;</span><br><span class=\"line\">                mScroller.startScroll((<span class=\"keyword\">int</span>) event.getX(), (<span class=\"keyword\">int</span>) event.getY(),</span><br><span class=\"line\">                    (<span class=\"keyword\">int</span>) offestX, (<span class=\"keyword\">int</span>) offestY, <span class=\"number\">1</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_UP:</span><br><span class=\"line\">                SCROLLER_MODE = FLING_MODE;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> initialVelocity = (<span class=\"keyword\">int</span>) mVelocityTracker.getXVelocity();</span><br><span class=\"line\">                mVelocityTracker.computeCurrentVelocity(<span class=\"number\">1000</span>, mScaledMaximumFlingVelocity);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (Math.abs(initialVelocity) &gt; mScaledMinimumFlingVelocity) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// 這個方法不難看出，Scroller與VelocityTracker的緊密結合。</span></span><br><span class=\"line\">                    mScroller.fling((<span class=\"keyword\">int</span>) curLeft, (<span class=\"keyword\">int</span>) curTop,</span><br><span class=\"line\">                                (<span class=\"keyword\">int</span>) mVelocityTracker.getXVelocity(), (<span class=\"keyword\">int</span>) mVelocityTracker.getYVelocity(),</span><br><span class=\"line\">                                minX, maxX, minY, maxY);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"comment\">// 釋放VelocityTracker資源</span></span><br><span class=\"line\">                releaseVelocityTracker();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 如果沒有Invalidate狀態，Scroller是不會運作的，更不會運作computeScroll()</span></span><br><span class=\"line\">        ViewCompat.postInvalidateOnAnimation(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 這方法很明顯的就是要我們自行去計算Sroller所給予的數值。</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">computeScroll</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">        *將兩種不同數據分開的原因為，我們Scroll更新速度快，因此直接用最終結果</span></span><br><span class=\"line\"><span class=\"comment\">        *然而Fling算是一種動畫效果，因此在ACTION_UP時會有這個動畫，這時候就需要使用當前數據。    </span></span><br><span class=\"line\"><span class=\"comment\">        */</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(SCROLLER_MODE == SCROLL_MODE) &#123;</span><br><span class=\"line\">            curLeft = mScroller.getFinalX();</span><br><span class=\"line\">            curTop = mScroller.getFinalY():</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            curLeft = mScroller.getCurrX();</span><br><span class=\"line\">            curTop = mScroller.getCurrY();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ViewCompat.postInvalidateOnAnimation(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>好吧！　今天下課了，看起來沒有很複雜，如果想有更棒的效果，<br>對於Scroller與VelocityTracker的了解是不可或缺的，除非你想自己寫Buffer &gt;\\&lt;</p>\n<p>程式碼只是把部分打出來，所以可能不能直接套用，自己先嘗試看看吧！</p>\n"},{"title":"Android. 使用ValueAnimator令顏色漸變轉換","date":"2016-02-05T01:22:46.000Z","_content":"\n大家好 大gay嚇 摳擬機挖，肥宅今天來分享一下如何取得連續漸變的顏色呢!?在目前手機的發達上，UX的顧慮也是特別重要，因此我們發現動作效果是不是更多了?\n\n沒錯，以前只要切來切去，現在就是要有一點順暢的切換，毫無為何感的fu，所以我們常常要使用一些動畫來輔助一下，因此，所以，也就是我們不可以不學習這東西囉！\n\n其實Value簡單的說就是數值，這個東東可以讓數值漸變，由0~100之類的慢慢轉換。\n\n<img src=\"http://developer.android.com/images/animation/animation-nonlinear.png\" width=\"600\">\n(圖片取自Google)\n\n然而我們的Value預設下是使用非線性的樣子去做變換，因此會像上圖那樣。\n使用方法如下：\n```java\nint colorFrom = Color.RED;\nint colorTo = Color.BLUE;\nValueAnimator colorAnimation = ValueAnimator.ofObject(new ArgbEvaluator(), colorFrom, colorTo);\ncolorAnimation.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n    @Override\n    public void onAnimationUpdate(ValueAnimator animator) {\n        toolbar.setBackgroundColor((int) animator.getAnimatedValue());\n    }\n});\ncolorAnimation.setDuration(300); //設定速度\ncolorAnimation.start();\n```\n\n要記得加入AnimatorUpdateListener監聽我們的動畫運行以及取得目前的Value，來達到漸變切換的感覺。Animator的應用實在是非常多，我想簡單介紹即可，如果要在更深入使用，就在說吧！","source":"_posts/Android-使用ValueAnimator令顏色漸變轉換.md","raw":"---\ntitle: Android. 使用ValueAnimator令顏色漸變轉換\ndate: 2016-02-05 09:22:46\ntags: Android\n---\n\n大家好 大gay嚇 摳擬機挖，肥宅今天來分享一下如何取得連續漸變的顏色呢!?在目前手機的發達上，UX的顧慮也是特別重要，因此我們發現動作效果是不是更多了?\n\n沒錯，以前只要切來切去，現在就是要有一點順暢的切換，毫無為何感的fu，所以我們常常要使用一些動畫來輔助一下，因此，所以，也就是我們不可以不學習這東西囉！\n\n其實Value簡單的說就是數值，這個東東可以讓數值漸變，由0~100之類的慢慢轉換。\n\n<img src=\"http://developer.android.com/images/animation/animation-nonlinear.png\" width=\"600\">\n(圖片取自Google)\n\n然而我們的Value預設下是使用非線性的樣子去做變換，因此會像上圖那樣。\n使用方法如下：\n```java\nint colorFrom = Color.RED;\nint colorTo = Color.BLUE;\nValueAnimator colorAnimation = ValueAnimator.ofObject(new ArgbEvaluator(), colorFrom, colorTo);\ncolorAnimation.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n    @Override\n    public void onAnimationUpdate(ValueAnimator animator) {\n        toolbar.setBackgroundColor((int) animator.getAnimatedValue());\n    }\n});\ncolorAnimation.setDuration(300); //設定速度\ncolorAnimation.start();\n```\n\n要記得加入AnimatorUpdateListener監聽我們的動畫運行以及取得目前的Value，來達到漸變切換的感覺。Animator的應用實在是非常多，我想簡單介紹即可，如果要在更深入使用，就在說吧！","slug":"Android-使用ValueAnimator令顏色漸變轉換","published":1,"updated":"2018-08-21T12:13:45.893Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0rg000jskvchme79irq","content":"<p>大家好 大gay嚇 摳擬機挖，肥宅今天來分享一下如何取得連續漸變的顏色呢!?在目前手機的發達上，UX的顧慮也是特別重要，因此我們發現動作效果是不是更多了?</p>\n<p>沒錯，以前只要切來切去，現在就是要有一點順暢的切換，毫無為何感的fu，所以我們常常要使用一些動畫來輔助一下，因此，所以，也就是我們不可以不學習這東西囉！</p>\n<p>其實Value簡單的說就是數值，這個東東可以讓數值漸變，由0~100之類的慢慢轉換。</p>\n<p><img src=\"http://developer.android.com/images/animation/animation-nonlinear.png\" width=\"600\"><br>(圖片取自Google)</p>\n<p>然而我們的Value預設下是使用非線性的樣子去做變換，因此會像上圖那樣。<br>使用方法如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> colorFrom = Color.RED;</span><br><span class=\"line\"><span class=\"keyword\">int</span> colorTo = Color.BLUE;</span><br><span class=\"line\">ValueAnimator colorAnimation = ValueAnimator.ofObject(<span class=\"keyword\">new</span> ArgbEvaluator(), colorFrom, colorTo);</span><br><span class=\"line\">colorAnimation.addUpdateListener(<span class=\"keyword\">new</span> ValueAnimator.AnimatorUpdateListener() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAnimationUpdate</span><span class=\"params\">(ValueAnimator animator)</span> </span>&#123;</span><br><span class=\"line\">        toolbar.setBackgroundColor((<span class=\"keyword\">int</span>) animator.getAnimatedValue());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">colorAnimation.setDuration(<span class=\"number\">300</span>); <span class=\"comment\">//設定速度</span></span><br><span class=\"line\">colorAnimation.start();</span><br></pre></td></tr></table></figure></p>\n<p>要記得加入AnimatorUpdateListener監聽我們的動畫運行以及取得目前的Value，來達到漸變切換的感覺。Animator的應用實在是非常多，我想簡單介紹即可，如果要在更深入使用，就在說吧！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>大家好 大gay嚇 摳擬機挖，肥宅今天來分享一下如何取得連續漸變的顏色呢!?在目前手機的發達上，UX的顧慮也是特別重要，因此我們發現動作效果是不是更多了?</p>\n<p>沒錯，以前只要切來切去，現在就是要有一點順暢的切換，毫無為何感的fu，所以我們常常要使用一些動畫來輔助一下，因此，所以，也就是我們不可以不學習這東西囉！</p>\n<p>其實Value簡單的說就是數值，這個東東可以讓數值漸變，由0~100之類的慢慢轉換。</p>\n<p><img src=\"http://developer.android.com/images/animation/animation-nonlinear.png\" width=\"600\"><br>(圖片取自Google)</p>\n<p>然而我們的Value預設下是使用非線性的樣子去做變換，因此會像上圖那樣。<br>使用方法如下：<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">int</span> colorFrom = Color.RED;</span><br><span class=\"line\"><span class=\"keyword\">int</span> colorTo = Color.BLUE;</span><br><span class=\"line\">ValueAnimator colorAnimation = ValueAnimator.ofObject(<span class=\"keyword\">new</span> ArgbEvaluator(), colorFrom, colorTo);</span><br><span class=\"line\">colorAnimation.addUpdateListener(<span class=\"keyword\">new</span> ValueAnimator.AnimatorUpdateListener() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAnimationUpdate</span><span class=\"params\">(ValueAnimator animator)</span> </span>&#123;</span><br><span class=\"line\">        toolbar.setBackgroundColor((<span class=\"keyword\">int</span>) animator.getAnimatedValue());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\">colorAnimation.setDuration(<span class=\"number\">300</span>); <span class=\"comment\">//設定速度</span></span><br><span class=\"line\">colorAnimation.start();</span><br></pre></td></tr></table></figure></p>\n<p>要記得加入AnimatorUpdateListener監聽我們的動畫運行以及取得目前的Value，來達到漸變切換的感覺。Animator的應用實在是非常多，我想簡單介紹即可，如果要在更深入使用，就在說吧！</p>\n"},{"title":"Android. 使用getIdentifier獲取資源ID","date":"2015-12-29T05:15:28.000Z","_content":"\n最近在開發App的時候發現一個問題，如果我們早先就將Image的位置放入SQLite，然後加入新的Image位置，發現會產生id錯亂的問題，這問題其實也就只是因為我們加入新的Image而產生的，因為每加入新的圖片，可能就會造成id的從新編排。\n\n那避免方法其實很簡單，方法如下\n```java\n/**\n* @param name 這邊請填入我們所想要的id名稱 (ex:ic_luncher)\n* @param defType 填入我們想要在哪個資料夾尋找上述的id名稱 (ex:mipmap)\n* @param defPackage 想要從哪個Package取得上述的內容\n**/\ngetResources().getIdentifier(String name, String defType, String defPackage);\n\nint resId = getResources().getIdentifier(\"ic_luncher\", \"mipmap\", getPackageName());\n```\n其實就這麼簡單而已，這樣也不怕因為更新圖片而導致id位置錯亂。","source":"_posts/Android-使用getIdentifier獲取資源ID.md","raw":"---\ntitle: Android. 使用getIdentifier獲取資源ID\ndate: 2015-12-29 13:15:28\ntags: Android\n---\n\n最近在開發App的時候發現一個問題，如果我們早先就將Image的位置放入SQLite，然後加入新的Image位置，發現會產生id錯亂的問題，這問題其實也就只是因為我們加入新的Image而產生的，因為每加入新的圖片，可能就會造成id的從新編排。\n\n那避免方法其實很簡單，方法如下\n```java\n/**\n* @param name 這邊請填入我們所想要的id名稱 (ex:ic_luncher)\n* @param defType 填入我們想要在哪個資料夾尋找上述的id名稱 (ex:mipmap)\n* @param defPackage 想要從哪個Package取得上述的內容\n**/\ngetResources().getIdentifier(String name, String defType, String defPackage);\n\nint resId = getResources().getIdentifier(\"ic_luncher\", \"mipmap\", getPackageName());\n```\n其實就這麼簡單而已，這樣也不怕因為更新圖片而導致id位置錯亂。","slug":"Android-使用getIdentifier獲取資源ID","published":1,"updated":"2018-08-21T12:13:45.893Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0rh000lskvctp4pse84","content":"<p>最近在開發App的時候發現一個問題，如果我們早先就將Image的位置放入SQLite，然後加入新的Image位置，發現會產生id錯亂的問題，這問題其實也就只是因為我們加入新的Image而產生的，因為每加入新的圖片，可能就會造成id的從新編排。</p>\n<p>那避免方法其實很簡單，方法如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> name 這邊請填入我們所想要的id名稱 (ex:ic_luncher)</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> defType 填入我們想要在哪個資料夾尋找上述的id名稱 (ex:mipmap)</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> defPackage 想要從哪個Package取得上述的內容</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br><span class=\"line\">getResources().getIdentifier(String name, String defType, String defPackage);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> resId = getResources().getIdentifier(<span class=\"string\">\"ic_luncher\"</span>, <span class=\"string\">\"mipmap\"</span>, getPackageName());</span><br></pre></td></tr></table></figure></p>\n<p>其實就這麼簡單而已，這樣也不怕因為更新圖片而導致id位置錯亂。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>最近在開發App的時候發現一個問題，如果我們早先就將Image的位置放入SQLite，然後加入新的Image位置，發現會產生id錯亂的問題，這問題其實也就只是因為我們加入新的Image而產生的，因為每加入新的圖片，可能就會造成id的從新編排。</p>\n<p>那避免方法其實很簡單，方法如下<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> name 這邊請填入我們所想要的id名稱 (ex:ic_luncher)</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> defType 填入我們想要在哪個資料夾尋找上述的id名稱 (ex:mipmap)</span></span><br><span class=\"line\"><span class=\"comment\">* <span class=\"doctag\">@param</span> defPackage 想要從哪個Package取得上述的內容</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br><span class=\"line\">getResources().getIdentifier(String name, String defType, String defPackage);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> resId = getResources().getIdentifier(<span class=\"string\">\"ic_luncher\"</span>, <span class=\"string\">\"mipmap\"</span>, getPackageName());</span><br></pre></td></tr></table></figure></p>\n<p>其實就這麼簡單而已，這樣也不怕因為更新圖片而導致id位置錯亂。</p>\n"},{"title":"Android. 猴子也學不會的SQLite(2)","date":"2016-01-10T01:56:42.000Z","_content":"\n在上一篇文章想必大家都建立好了一個資料庫(檔案型)，那麼接下來就是重頭戲了，如何新增、修改、刪除以及取得資料等動作呢?\n\n# 新增\n```java\npublic void insterInfo(SQLiteDatabase db, String name, String phone) {\n    ContentValues contentValues = new ContentValues();\n    contentValues.put(NAME, name);\n    contentValues.put(PHONE, phone);\n\n    db.insert(INFO_TABLE, null, contentValues);\n}\n```\n在第一章節我們建立了INFO TABLE，內部欄位為RowId, Name, Phone，但因RowId每次自動累加，因此不需在新增一次。\n\n# 修改\n```java\npublic void updateInfo(SQLiteDatabase db, String rowId, String name, String phone) {\n    ContentValues contentValues = new ContentValues();\n    contentValues.put(NAME, name);\n    contentValues.put(PHONE, phone);\n\n    //問號對應到後面陣列的資料\n    db.update(INFO_TABLE, contentValues, ROW_ID + \"=?\", new String[] {rowId});\n}\n```\n修改部分與新增大同小異，唯一不同的就是多了個RowId，這個欄位是我們主要索引值，當RowId = 1時，那麼我們將會把新的資料塞進去第一筆資料當中，以此類推。\n\n# 刪除\n```java\npublic void removeInfo(SQLiteDatabase db, String rowId) {\n    db.delete(INFO_TABLE, ROW_ID + \"=?\", new String[]{rowId});\n}\n```\n利用PK值進行刪除，如果想要多欄位刪除的話，需要自行設計，方法雷同。\n\n# 取得資料\n```java\npublic Cursor getInfO(SQLiteDatabase db) {\n    return  db.query(INFO_TABLE, new String[] {ROW_ID, NAME, PHONE}, null, null, null, null, null);\n}\n```\n回傳值是Cursor物件，我們看看Cursor物件的使用方式\n\n## Cursor使用方法\n```java\nMySQLiteManager mSQLiteManager = new MySQLiteManager(this);\nCursor mCursor = mSQLiteManager.getInfo(mSQLiteManager.getReadableDatabase());\nif(mCursor != null) {\n    mCursor.moveToFirst();\n    for(int i = 0 ; i < mCursor.getCount() ; i++) {\n        //Do Something\n        mCursor.moverToNext();\n    }\n}\n```\n\n好了今天就到這邊，其實也就是一般的SQL操作而已。","source":"_posts/Android-猴子也學不會的SQLite-2.md","raw":"---\ntitle: Android. 猴子也學不會的SQLite(2)\ndate: 2016-01-10 09:56:42\ntags:\n  - Android\n  - SQLite\n---\n\n在上一篇文章想必大家都建立好了一個資料庫(檔案型)，那麼接下來就是重頭戲了，如何新增、修改、刪除以及取得資料等動作呢?\n\n# 新增\n```java\npublic void insterInfo(SQLiteDatabase db, String name, String phone) {\n    ContentValues contentValues = new ContentValues();\n    contentValues.put(NAME, name);\n    contentValues.put(PHONE, phone);\n\n    db.insert(INFO_TABLE, null, contentValues);\n}\n```\n在第一章節我們建立了INFO TABLE，內部欄位為RowId, Name, Phone，但因RowId每次自動累加，因此不需在新增一次。\n\n# 修改\n```java\npublic void updateInfo(SQLiteDatabase db, String rowId, String name, String phone) {\n    ContentValues contentValues = new ContentValues();\n    contentValues.put(NAME, name);\n    contentValues.put(PHONE, phone);\n\n    //問號對應到後面陣列的資料\n    db.update(INFO_TABLE, contentValues, ROW_ID + \"=?\", new String[] {rowId});\n}\n```\n修改部分與新增大同小異，唯一不同的就是多了個RowId，這個欄位是我們主要索引值，當RowId = 1時，那麼我們將會把新的資料塞進去第一筆資料當中，以此類推。\n\n# 刪除\n```java\npublic void removeInfo(SQLiteDatabase db, String rowId) {\n    db.delete(INFO_TABLE, ROW_ID + \"=?\", new String[]{rowId});\n}\n```\n利用PK值進行刪除，如果想要多欄位刪除的話，需要自行設計，方法雷同。\n\n# 取得資料\n```java\npublic Cursor getInfO(SQLiteDatabase db) {\n    return  db.query(INFO_TABLE, new String[] {ROW_ID, NAME, PHONE}, null, null, null, null, null);\n}\n```\n回傳值是Cursor物件，我們看看Cursor物件的使用方式\n\n## Cursor使用方法\n```java\nMySQLiteManager mSQLiteManager = new MySQLiteManager(this);\nCursor mCursor = mSQLiteManager.getInfo(mSQLiteManager.getReadableDatabase());\nif(mCursor != null) {\n    mCursor.moveToFirst();\n    for(int i = 0 ; i < mCursor.getCount() ; i++) {\n        //Do Something\n        mCursor.moverToNext();\n    }\n}\n```\n\n好了今天就到這邊，其實也就是一般的SQL操作而已。","slug":"Android-猴子也學不會的SQLite-2","published":1,"updated":"2018-08-21T12:13:45.894Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0ri000nskvckqlfi4hq","content":"<p>在上一篇文章想必大家都建立好了一個資料庫(檔案型)，那麼接下來就是重頭戲了，如何新增、修改、刪除以及取得資料等動作呢?</p>\n<h1 id=\"新增\"><a href=\"#新增\" class=\"headerlink\" title=\"新增\"></a>新增</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insterInfo</span><span class=\"params\">(SQLiteDatabase db, String name, String phone)</span> </span>&#123;</span><br><span class=\"line\">    ContentValues contentValues = <span class=\"keyword\">new</span> ContentValues();</span><br><span class=\"line\">    contentValues.put(NAME, name);</span><br><span class=\"line\">    contentValues.put(PHONE, phone);</span><br><span class=\"line\"></span><br><span class=\"line\">    db.insert(INFO_TABLE, <span class=\"keyword\">null</span>, contentValues);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在第一章節我們建立了INFO TABLE，內部欄位為RowId, Name, Phone，但因RowId每次自動累加，因此不需在新增一次。</p>\n<h1 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateInfo</span><span class=\"params\">(SQLiteDatabase db, String rowId, String name, String phone)</span> </span>&#123;</span><br><span class=\"line\">    ContentValues contentValues = <span class=\"keyword\">new</span> ContentValues();</span><br><span class=\"line\">    contentValues.put(NAME, name);</span><br><span class=\"line\">    contentValues.put(PHONE, phone);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//問號對應到後面陣列的資料</span></span><br><span class=\"line\">    db.update(INFO_TABLE, contentValues, ROW_ID + <span class=\"string\">\"=?\"</span>, <span class=\"keyword\">new</span> String[] &#123;rowId&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>修改部分與新增大同小異，唯一不同的就是多了個RowId，這個欄位是我們主要索引值，當RowId = 1時，那麼我們將會把新的資料塞進去第一筆資料當中，以此類推。</p>\n<h1 id=\"刪除\"><a href=\"#刪除\" class=\"headerlink\" title=\"刪除\"></a>刪除</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">removeInfo</span><span class=\"params\">(SQLiteDatabase db, String rowId)</span> </span>&#123;</span><br><span class=\"line\">    db.delete(INFO_TABLE, ROW_ID + <span class=\"string\">\"=?\"</span>, <span class=\"keyword\">new</span> String[]&#123;rowId&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>利用PK值進行刪除，如果想要多欄位刪除的話，需要自行設計，方法雷同。</p>\n<h1 id=\"取得資料\"><a href=\"#取得資料\" class=\"headerlink\" title=\"取得資料\"></a>取得資料</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Cursor <span class=\"title\">getInfO</span><span class=\"params\">(SQLiteDatabase db)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  db.query(INFO_TABLE, <span class=\"keyword\">new</span> String[] &#123;ROW_ID, NAME, PHONE&#125;, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回傳值是Cursor物件，我們看看Cursor物件的使用方式</p>\n<h2 id=\"Cursor使用方法\"><a href=\"#Cursor使用方法\" class=\"headerlink\" title=\"Cursor使用方法\"></a>Cursor使用方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQLiteManager mSQLiteManager = <span class=\"keyword\">new</span> MySQLiteManager(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">Cursor mCursor = mSQLiteManager.getInfo(mSQLiteManager.getReadableDatabase());</span><br><span class=\"line\"><span class=\"keyword\">if</span>(mCursor != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">    mCursor.moveToFirst();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; mCursor.getCount() ; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//Do Something</span></span><br><span class=\"line\">        mCursor.moverToNext();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>好了今天就到這邊，其實也就是一般的SQL操作而已。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>在上一篇文章想必大家都建立好了一個資料庫(檔案型)，那麼接下來就是重頭戲了，如何新增、修改、刪除以及取得資料等動作呢?</p>\n<h1 id=\"新增\"><a href=\"#新增\" class=\"headerlink\" title=\"新增\"></a>新增</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">insterInfo</span><span class=\"params\">(SQLiteDatabase db, String name, String phone)</span> </span>&#123;</span><br><span class=\"line\">    ContentValues contentValues = <span class=\"keyword\">new</span> ContentValues();</span><br><span class=\"line\">    contentValues.put(NAME, name);</span><br><span class=\"line\">    contentValues.put(PHONE, phone);</span><br><span class=\"line\"></span><br><span class=\"line\">    db.insert(INFO_TABLE, <span class=\"keyword\">null</span>, contentValues);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在第一章節我們建立了INFO TABLE，內部欄位為RowId, Name, Phone，但因RowId每次自動累加，因此不需在新增一次。</p>\n<h1 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateInfo</span><span class=\"params\">(SQLiteDatabase db, String rowId, String name, String phone)</span> </span>&#123;</span><br><span class=\"line\">    ContentValues contentValues = <span class=\"keyword\">new</span> ContentValues();</span><br><span class=\"line\">    contentValues.put(NAME, name);</span><br><span class=\"line\">    contentValues.put(PHONE, phone);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//問號對應到後面陣列的資料</span></span><br><span class=\"line\">    db.update(INFO_TABLE, contentValues, ROW_ID + <span class=\"string\">\"=?\"</span>, <span class=\"keyword\">new</span> String[] &#123;rowId&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>修改部分與新增大同小異，唯一不同的就是多了個RowId，這個欄位是我們主要索引值，當RowId = 1時，那麼我們將會把新的資料塞進去第一筆資料當中，以此類推。</p>\n<h1 id=\"刪除\"><a href=\"#刪除\" class=\"headerlink\" title=\"刪除\"></a>刪除</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">removeInfo</span><span class=\"params\">(SQLiteDatabase db, String rowId)</span> </span>&#123;</span><br><span class=\"line\">    db.delete(INFO_TABLE, ROW_ID + <span class=\"string\">\"=?\"</span>, <span class=\"keyword\">new</span> String[]&#123;rowId&#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>利用PK值進行刪除，如果想要多欄位刪除的話，需要自行設計，方法雷同。</p>\n<h1 id=\"取得資料\"><a href=\"#取得資料\" class=\"headerlink\" title=\"取得資料\"></a>取得資料</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Cursor <span class=\"title\">getInfO</span><span class=\"params\">(SQLiteDatabase db)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span>  db.query(INFO_TABLE, <span class=\"keyword\">new</span> String[] &#123;ROW_ID, NAME, PHONE&#125;, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>回傳值是Cursor物件，我們看看Cursor物件的使用方式</p>\n<h2 id=\"Cursor使用方法\"><a href=\"#Cursor使用方法\" class=\"headerlink\" title=\"Cursor使用方法\"></a>Cursor使用方法</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MySQLiteManager mSQLiteManager = <span class=\"keyword\">new</span> MySQLiteManager(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">Cursor mCursor = mSQLiteManager.getInfo(mSQLiteManager.getReadableDatabase());</span><br><span class=\"line\"><span class=\"keyword\">if</span>(mCursor != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">    mCursor.moveToFirst();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span> ; i &lt; mCursor.getCount() ; i++) &#123;</span><br><span class=\"line\">        <span class=\"comment\">//Do Something</span></span><br><span class=\"line\">        mCursor.moverToNext();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>好了今天就到這邊，其實也就是一般的SQL操作而已。</p>\n"},{"title":"Android. 自製剪裁圖片元件 CropImageView","date":"2016-01-30T06:24:16.000Z","_content":"\n這次分享簡單的剪裁圖片方式，我還沒做成Library，還滿懶惰的...((被踹飛\n\n大家可以參考參考，程式碼方面不難，反正就一堆 ? : if else 的判定。\n\n不過這次做起來有點瑕疵，在剪裁時候，有些許的不準確，目前判斷是因為Bitmap大小與剪裁不符合，大家可能都會想說，不是用Canvas去畫Bitmap嗎? No no ~ 我盡量不去使用Canvas去畫Bitmap，每次更新時都得在畫一次Bitmap，這是多麼恐怖的事情，你會非常Lag，效能之差，所以我直接使用ImageView.setImageBitmap。\n\n當然這並不算是我第一次製作此類，在先前的項目就有使用過，但並未認真去抓取一些Bug，所以有時候會有些錯誤。\n\n然而這次我將外圍、伸縮剪裁框等，小瑕疵都修改完畢，因此應該是不會發生瑕疵的問題了。\n\n大家有興趣可以去GitHub看看，記得不要看在學時期的Project就別看了，很丟臉...((淚灑\n\nP.S.也許有人說，我的藍點怎麼只有一個，應該四面八方都要有呀！ 我就是懶，我懶我驕傲!! ((又飛走\n\n<img src=\"/2016/01/30/Android-自製剪裁圖片元件-CropImageView/Screenshot_2016-01-30-14-19-52.png\" width=\"300\">\n<img src=\"/2016/01/30/Android-自製剪裁圖片元件-CropImageView/Screenshot_2016-01-30-14-20-02.png\" width=\"300\">\n\n# [GitHub SourceCode](https://github.com/Kuan-Wei-Kuo/PhotoDesign)","source":"_posts/Android-自製剪裁圖片元件-CropImageView.md","raw":"---\ntitle: Android. 自製剪裁圖片元件 CropImageView\ndate: 2016-01-30 14:24:16\ntags: Android\n---\n\n這次分享簡單的剪裁圖片方式，我還沒做成Library，還滿懶惰的...((被踹飛\n\n大家可以參考參考，程式碼方面不難，反正就一堆 ? : if else 的判定。\n\n不過這次做起來有點瑕疵，在剪裁時候，有些許的不準確，目前判斷是因為Bitmap大小與剪裁不符合，大家可能都會想說，不是用Canvas去畫Bitmap嗎? No no ~ 我盡量不去使用Canvas去畫Bitmap，每次更新時都得在畫一次Bitmap，這是多麼恐怖的事情，你會非常Lag，效能之差，所以我直接使用ImageView.setImageBitmap。\n\n當然這並不算是我第一次製作此類，在先前的項目就有使用過，但並未認真去抓取一些Bug，所以有時候會有些錯誤。\n\n然而這次我將外圍、伸縮剪裁框等，小瑕疵都修改完畢，因此應該是不會發生瑕疵的問題了。\n\n大家有興趣可以去GitHub看看，記得不要看在學時期的Project就別看了，很丟臉...((淚灑\n\nP.S.也許有人說，我的藍點怎麼只有一個，應該四面八方都要有呀！ 我就是懶，我懶我驕傲!! ((又飛走\n\n<img src=\"/2016/01/30/Android-自製剪裁圖片元件-CropImageView/Screenshot_2016-01-30-14-19-52.png\" width=\"300\">\n<img src=\"/2016/01/30/Android-自製剪裁圖片元件-CropImageView/Screenshot_2016-01-30-14-20-02.png\" width=\"300\">\n\n# [GitHub SourceCode](https://github.com/Kuan-Wei-Kuo/PhotoDesign)","slug":"Android-自製剪裁圖片元件-CropImageView","published":1,"updated":"2018-08-21T12:13:45.895Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0rk000pskvc44chnkz7","content":"<p>這次分享簡單的剪裁圖片方式，我還沒做成Library，還滿懶惰的…((被踹飛</p>\n<p>大家可以參考參考，程式碼方面不難，反正就一堆 ? : if else 的判定。</p>\n<p>不過這次做起來有點瑕疵，在剪裁時候，有些許的不準確，目前判斷是因為Bitmap大小與剪裁不符合，大家可能都會想說，不是用Canvas去畫Bitmap嗎? No no ~ 我盡量不去使用Canvas去畫Bitmap，每次更新時都得在畫一次Bitmap，這是多麼恐怖的事情，你會非常Lag，效能之差，所以我直接使用ImageView.setImageBitmap。</p>\n<p>當然這並不算是我第一次製作此類，在先前的項目就有使用過，但並未認真去抓取一些Bug，所以有時候會有些錯誤。</p>\n<p>然而這次我將外圍、伸縮剪裁框等，小瑕疵都修改完畢，因此應該是不會發生瑕疵的問題了。</p>\n<p>大家有興趣可以去GitHub看看，記得不要看在學時期的Project就別看了，很丟臉…((淚灑</p>\n<p>P.S.也許有人說，我的藍點怎麼只有一個，應該四面八方都要有呀！ 我就是懶，我懶我驕傲!! ((又飛走</p>\n<p><img src=\"/2016/01/30/Android-自製剪裁圖片元件-CropImageView/Screenshot_2016-01-30-14-19-52.png\" width=\"300\"><br><img src=\"/2016/01/30/Android-自製剪裁圖片元件-CropImageView/Screenshot_2016-01-30-14-20-02.png\" width=\"300\"></p>\n<h1 id=\"GitHub-SourceCode\"><a href=\"#GitHub-SourceCode\" class=\"headerlink\" title=\"GitHub SourceCode\"></a><a href=\"https://github.com/Kuan-Wei-Kuo/PhotoDesign\" target=\"_blank\" rel=\"noopener\">GitHub SourceCode</a></h1>","site":{"data":{}},"excerpt":"","more":"<p>這次分享簡單的剪裁圖片方式，我還沒做成Library，還滿懶惰的…((被踹飛</p>\n<p>大家可以參考參考，程式碼方面不難，反正就一堆 ? : if else 的判定。</p>\n<p>不過這次做起來有點瑕疵，在剪裁時候，有些許的不準確，目前判斷是因為Bitmap大小與剪裁不符合，大家可能都會想說，不是用Canvas去畫Bitmap嗎? No no ~ 我盡量不去使用Canvas去畫Bitmap，每次更新時都得在畫一次Bitmap，這是多麼恐怖的事情，你會非常Lag，效能之差，所以我直接使用ImageView.setImageBitmap。</p>\n<p>當然這並不算是我第一次製作此類，在先前的項目就有使用過，但並未認真去抓取一些Bug，所以有時候會有些錯誤。</p>\n<p>然而這次我將外圍、伸縮剪裁框等，小瑕疵都修改完畢，因此應該是不會發生瑕疵的問題了。</p>\n<p>大家有興趣可以去GitHub看看，記得不要看在學時期的Project就別看了，很丟臉…((淚灑</p>\n<p>P.S.也許有人說，我的藍點怎麼只有一個，應該四面八方都要有呀！ 我就是懶，我懶我驕傲!! ((又飛走</p>\n<p><img src=\"/2016/01/30/Android-自製剪裁圖片元件-CropImageView/Screenshot_2016-01-30-14-19-52.png\" width=\"300\"><br><img src=\"/2016/01/30/Android-自製剪裁圖片元件-CropImageView/Screenshot_2016-01-30-14-20-02.png\" width=\"300\"></p>\n<h1 id=\"GitHub-SourceCode\"><a href=\"#GitHub-SourceCode\" class=\"headerlink\" title=\"GitHub SourceCode\"></a><a href=\"https://github.com/Kuan-Wei-Kuo/PhotoDesign\" target=\"_blank\" rel=\"noopener\">GitHub SourceCode</a></h1>"},{"title":"Android. 猴子也學不會的SQLite(3)","date":"2016-01-18T03:05:42.000Z","_content":"\n有時候會因應一些需求，需要修改資料庫欄位設計，這時候SQLite稍嫌不太方便，需要利用onUpgrade方法，進行ALTER動作。\n\n```java\nprivate final static String DATE = \"date\"; //欄位名稱\n\n@Override\npublic void onUpgrade(SQLiteDatabase sqLiteDatabase, int oldVersion, int newVersion) {\n    if(newVersion > oldVersion) {\n        sqLiteDatabase.beginTransaction();\n    if(oldVersion == 1) {\n        try {\n            // 新增一個日期欄位，預設為NULL字串\n            sqLiteDatabase.execSQL(\"ALTER TABLE \" + INFO_TABLE + \" ADD COLUMN \" + DATE + \" TEXT DEFAULT \" + \"NULL\";\n            Log.d(\"SQLite\", \"版本更新成功，結束交易...\");\n            sqLiteDatabase.setTransactionSuccessful();\n            sqLiteDatabase.endTransaction();\n        } catch (Exception e) {\n            Log.d(\"SQLite\", \"版本更新失敗，結束交易...\");\n            sqLiteDatabase.endTransaction();\n        }        \n    } else {\n        onCreate(sqLiteDatabase);\n    }\n}\n```\n\n由上述程式碼可以看出我們新增需要自己去編寫程式碼，就是這麼簡單，但SQLite是放在使用者的地方，因此也不建議大量更新資料庫。\n","source":"_posts/Android-猴子也學不會的SQLite-3.md","raw":"---\ntitle: Android. 猴子也學不會的SQLite(3)\ndate: 2016-01-18 11:05:42\ntags:\n  - Android\n  - SQLite\n---\n\n有時候會因應一些需求，需要修改資料庫欄位設計，這時候SQLite稍嫌不太方便，需要利用onUpgrade方法，進行ALTER動作。\n\n```java\nprivate final static String DATE = \"date\"; //欄位名稱\n\n@Override\npublic void onUpgrade(SQLiteDatabase sqLiteDatabase, int oldVersion, int newVersion) {\n    if(newVersion > oldVersion) {\n        sqLiteDatabase.beginTransaction();\n    if(oldVersion == 1) {\n        try {\n            // 新增一個日期欄位，預設為NULL字串\n            sqLiteDatabase.execSQL(\"ALTER TABLE \" + INFO_TABLE + \" ADD COLUMN \" + DATE + \" TEXT DEFAULT \" + \"NULL\";\n            Log.d(\"SQLite\", \"版本更新成功，結束交易...\");\n            sqLiteDatabase.setTransactionSuccessful();\n            sqLiteDatabase.endTransaction();\n        } catch (Exception e) {\n            Log.d(\"SQLite\", \"版本更新失敗，結束交易...\");\n            sqLiteDatabase.endTransaction();\n        }        \n    } else {\n        onCreate(sqLiteDatabase);\n    }\n}\n```\n\n由上述程式碼可以看出我們新增需要自己去編寫程式碼，就是這麼簡單，但SQLite是放在使用者的地方，因此也不建議大量更新資料庫。\n","slug":"Android-猴子也學不會的SQLite-3","published":1,"updated":"2018-08-21T12:13:45.895Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0rn000sskvc5z9621ls","content":"<p>有時候會因應一些需求，需要修改資料庫欄位設計，這時候SQLite稍嫌不太方便，需要利用onUpgrade方法，進行ALTER動作。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String DATE = <span class=\"string\">\"date\"</span>; <span class=\"comment\">//欄位名稱</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onUpgrade</span><span class=\"params\">(SQLiteDatabase sqLiteDatabase, <span class=\"keyword\">int</span> oldVersion, <span class=\"keyword\">int</span> newVersion)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(newVersion &gt; oldVersion) &#123;</span><br><span class=\"line\">        sqLiteDatabase.beginTransaction();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(oldVersion == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 新增一個日期欄位，預設為NULL字串</span></span><br><span class=\"line\">            sqLiteDatabase.execSQL(<span class=\"string\">\"ALTER TABLE \"</span> + INFO_TABLE + <span class=\"string\">\" ADD COLUMN \"</span> + DATE + <span class=\"string\">\" TEXT DEFAULT \"</span> + <span class=\"string\">\"NULL\"</span>;</span><br><span class=\"line\">            Log.d(<span class=\"string\">\"SQLite\"</span>, <span class=\"string\">\"版本更新成功，結束交易...\"</span>);</span><br><span class=\"line\">            sqLiteDatabase.setTransactionSuccessful();</span><br><span class=\"line\">            sqLiteDatabase.endTransaction();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            Log.d(<span class=\"string\">\"SQLite\"</span>, <span class=\"string\">\"版本更新失敗，結束交易...\"</span>);</span><br><span class=\"line\">            sqLiteDatabase.endTransaction();</span><br><span class=\"line\">        &#125;        </span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        onCreate(sqLiteDatabase);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>由上述程式碼可以看出我們新增需要自己去編寫程式碼，就是這麼簡單，但SQLite是放在使用者的地方，因此也不建議大量更新資料庫。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>有時候會因應一些需求，需要修改資料庫欄位設計，這時候SQLite稍嫌不太方便，需要利用onUpgrade方法，進行ALTER動作。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String DATE = <span class=\"string\">\"date\"</span>; <span class=\"comment\">//欄位名稱</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onUpgrade</span><span class=\"params\">(SQLiteDatabase sqLiteDatabase, <span class=\"keyword\">int</span> oldVersion, <span class=\"keyword\">int</span> newVersion)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(newVersion &gt; oldVersion) &#123;</span><br><span class=\"line\">        sqLiteDatabase.beginTransaction();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(oldVersion == <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 新增一個日期欄位，預設為NULL字串</span></span><br><span class=\"line\">            sqLiteDatabase.execSQL(<span class=\"string\">\"ALTER TABLE \"</span> + INFO_TABLE + <span class=\"string\">\" ADD COLUMN \"</span> + DATE + <span class=\"string\">\" TEXT DEFAULT \"</span> + <span class=\"string\">\"NULL\"</span>;</span><br><span class=\"line\">            Log.d(<span class=\"string\">\"SQLite\"</span>, <span class=\"string\">\"版本更新成功，結束交易...\"</span>);</span><br><span class=\"line\">            sqLiteDatabase.setTransactionSuccessful();</span><br><span class=\"line\">            sqLiteDatabase.endTransaction();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            Log.d(<span class=\"string\">\"SQLite\"</span>, <span class=\"string\">\"版本更新失敗，結束交易...\"</span>);</span><br><span class=\"line\">            sqLiteDatabase.endTransaction();</span><br><span class=\"line\">        &#125;        </span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        onCreate(sqLiteDatabase);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>由上述程式碼可以看出我們新增需要自己去編寫程式碼，就是這麼簡單，但SQLite是放在使用者的地方，因此也不建議大量更新資料庫。</p>\n"},{"title":"Android. 關於Handler不可不知道的事","date":"2015-11-17T07:02:00.000Z","_content":"\n大家都應該都有使用過Handler更新UI的時刻，但我們的使用方法是對的嗎?\n\n# 我們通常都會像下面這樣寫\n```java\nprivate Handler mHandler = new Handler() {\n    @Override\n    public void handleMessage(Message msg) {\n        // TODO\n    }\n}\n```\n\n各種關於Handler的教學文章應該都是如此使用吧?\n\n那麼大家有沒有看過下面這行錯誤警告↓\nWarn:This Handler class should be static or leaks might occur\n這句話給的意義其實非常重大，Handler應該是static，否則內存可能洩漏！\n就讓小魯解釋一下，他這個可恨的東西到底是如何洩漏的呢?\n\n問題在於Runnable、Thread，我們獲取大量數據時當然會使用這些方法，並且加上msg讓他完成時更新UI，但如果我們將這個Activity(Fragment)註銷掉呢?\n\n很不幸的，當你應用程式開啟framework也跟著開啟，內部有一個Looper，整個App靠他，如果msg沒有執行前，這些正在執行中的Runnable、Thread將會繼續執行，直至msg被執行，這根本就是驚天動地，令人無法接受，唉聲嘆氣的消耗程式資源!\n\n但不要吃驚，Romain Guy(Adroid framework engineer)也幫助我們，給我們建議[使用方法](https://groups.google.com/forum/?fromgroups=#%21msg/android-developers/1aPZXZG6kWk/lIYDavGYn5UJ)\n\n# 就讓咱們繼續看下去...\n```java\nclass OuterClass {\n    class InnerClass {\n\n        private final WeakReference<OuterClass> mTarget;\n                                        \n        InnerClass(OuterClass target) {\n            mTarget = new WeakReference<OuterClass>(target);\n        }\n                                    \n        void doSomething() {\n            OuterClass target = mTarget.get();\n            if (target != null) {\n                target.do();    \n            }\n        }\n    }\n}\n```\n\n上述程式碼可以看到一個不常看見的東西叫WeakReference，也是所謂的\"弱引用\"，小魯在這邊也大概說一下，弱引用就是不能阻擋任何關於回收的動作。\n\n# 那麼我們的程式碼將會\n```java\nprivate static class OuterHandler extends Handler {\n    private final WeakReference<MainActivity> mActivity;\n        \n    public OuterHandler(MainActivity activity) {\n        mActivity = new WeakReference<MainActivity>(activity);\n    }\n        \n    @Override\n    public void handleMessage(Message msg) {\n        MainActivity activity = mActivity.get();\n        if (activity != null) {\n        // do something...\n        }\n    }\n}\n```\n\n所以其實當我們使用到了handler以及msg，如果我們無法取得想要WeakReference的物件，那麼回收機制也將會直接收走，連一點殘渣也不想留給你，這樣也解決的上述內存洩漏的可能。\n\n# 參考資料\n[泡在網上的日子](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2014/1106/1922.html)\n[Google開發論壇](https://groups.google.com/forum/?fromgroups=#%21msg/android-developers/1aPZXZG6kWk/lIYDavGYn5UJ)\n[Java之WeakReference與SoftReference使用講解](http://codex.wiki/post/132087-711)","source":"_posts/Android-關於Handler不可不知道的事.md","raw":"---\ntitle: Android. 關於Handler不可不知道的事\ndate: 2015-11-17 15:02:00\ntags: Android\n---\n\n大家都應該都有使用過Handler更新UI的時刻，但我們的使用方法是對的嗎?\n\n# 我們通常都會像下面這樣寫\n```java\nprivate Handler mHandler = new Handler() {\n    @Override\n    public void handleMessage(Message msg) {\n        // TODO\n    }\n}\n```\n\n各種關於Handler的教學文章應該都是如此使用吧?\n\n那麼大家有沒有看過下面這行錯誤警告↓\nWarn:This Handler class should be static or leaks might occur\n這句話給的意義其實非常重大，Handler應該是static，否則內存可能洩漏！\n就讓小魯解釋一下，他這個可恨的東西到底是如何洩漏的呢?\n\n問題在於Runnable、Thread，我們獲取大量數據時當然會使用這些方法，並且加上msg讓他完成時更新UI，但如果我們將這個Activity(Fragment)註銷掉呢?\n\n很不幸的，當你應用程式開啟framework也跟著開啟，內部有一個Looper，整個App靠他，如果msg沒有執行前，這些正在執行中的Runnable、Thread將會繼續執行，直至msg被執行，這根本就是驚天動地，令人無法接受，唉聲嘆氣的消耗程式資源!\n\n但不要吃驚，Romain Guy(Adroid framework engineer)也幫助我們，給我們建議[使用方法](https://groups.google.com/forum/?fromgroups=#%21msg/android-developers/1aPZXZG6kWk/lIYDavGYn5UJ)\n\n# 就讓咱們繼續看下去...\n```java\nclass OuterClass {\n    class InnerClass {\n\n        private final WeakReference<OuterClass> mTarget;\n                                        \n        InnerClass(OuterClass target) {\n            mTarget = new WeakReference<OuterClass>(target);\n        }\n                                    \n        void doSomething() {\n            OuterClass target = mTarget.get();\n            if (target != null) {\n                target.do();    \n            }\n        }\n    }\n}\n```\n\n上述程式碼可以看到一個不常看見的東西叫WeakReference，也是所謂的\"弱引用\"，小魯在這邊也大概說一下，弱引用就是不能阻擋任何關於回收的動作。\n\n# 那麼我們的程式碼將會\n```java\nprivate static class OuterHandler extends Handler {\n    private final WeakReference<MainActivity> mActivity;\n        \n    public OuterHandler(MainActivity activity) {\n        mActivity = new WeakReference<MainActivity>(activity);\n    }\n        \n    @Override\n    public void handleMessage(Message msg) {\n        MainActivity activity = mActivity.get();\n        if (activity != null) {\n        // do something...\n        }\n    }\n}\n```\n\n所以其實當我們使用到了handler以及msg，如果我們無法取得想要WeakReference的物件，那麼回收機制也將會直接收走，連一點殘渣也不想留給你，這樣也解決的上述內存洩漏的可能。\n\n# 參考資料\n[泡在網上的日子](http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2014/1106/1922.html)\n[Google開發論壇](https://groups.google.com/forum/?fromgroups=#%21msg/android-developers/1aPZXZG6kWk/lIYDavGYn5UJ)\n[Java之WeakReference與SoftReference使用講解](http://codex.wiki/post/132087-711)","slug":"Android-關於Handler不可不知道的事","published":1,"updated":"2018-08-21T12:13:45.936Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0rp000uskvcfdakdfi1","content":"<p>大家都應該都有使用過Handler更新UI的時刻，但我們的使用方法是對的嗎?</p>\n<h1 id=\"我們通常都會像下面這樣寫\"><a href=\"#我們通常都會像下面這樣寫\" class=\"headerlink\" title=\"我們通常都會像下面這樣寫\"></a>我們通常都會像下面這樣寫</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> Handler mHandler = <span class=\"keyword\">new</span> Handler() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// TODO</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>各種關於Handler的教學文章應該都是如此使用吧?</p>\n<p>那麼大家有沒有看過下面這行錯誤警告↓<br>Warn:This Handler class should be static or leaks might occur<br>這句話給的意義其實非常重大，Handler應該是static，否則內存可能洩漏！<br>就讓小魯解釋一下，他這個可恨的東西到底是如何洩漏的呢?</p>\n<p>問題在於Runnable、Thread，我們獲取大量數據時當然會使用這些方法，並且加上msg讓他完成時更新UI，但如果我們將這個Activity(Fragment)註銷掉呢?</p>\n<p>很不幸的，當你應用程式開啟framework也跟著開啟，內部有一個Looper，整個App靠他，如果msg沒有執行前，這些正在執行中的Runnable、Thread將會繼續執行，直至msg被執行，這根本就是驚天動地，令人無法接受，唉聲嘆氣的消耗程式資源!</p>\n<p>但不要吃驚，Romain Guy(Adroid framework engineer)也幫助我們，給我們建議<a href=\"https://groups.google.com/forum/?fromgroups=#%21msg/android-developers/1aPZXZG6kWk/lIYDavGYn5UJ\" target=\"_blank\" rel=\"noopener\">使用方法</a></p>\n<h1 id=\"就讓咱們繼續看下去…\"><a href=\"#就讓咱們繼續看下去…\" class=\"headerlink\" title=\"就讓咱們繼續看下去…\"></a>就讓咱們繼續看下去…</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OuterClass</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InnerClass</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> WeakReference&lt;OuterClass&gt; mTarget;</span><br><span class=\"line\">                                        </span><br><span class=\"line\">        InnerClass(OuterClass target) &#123;</span><br><span class=\"line\">            mTarget = <span class=\"keyword\">new</span> WeakReference&lt;OuterClass&gt;(target);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">                                    </span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">doSomething</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            OuterClass target = mTarget.get();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (target != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                target.<span class=\"keyword\">do</span>();    </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上述程式碼可以看到一個不常看見的東西叫WeakReference，也是所謂的”弱引用”，小魯在這邊也大概說一下，弱引用就是不能阻擋任何關於回收的動作。</p>\n<h1 id=\"那麼我們的程式碼將會\"><a href=\"#那麼我們的程式碼將會\" class=\"headerlink\" title=\"那麼我們的程式碼將會\"></a>那麼我們的程式碼將會</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OuterHandler</span> <span class=\"keyword\">extends</span> <span class=\"title\">Handler</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> WeakReference&lt;MainActivity&gt; mActivity;</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OuterHandler</span><span class=\"params\">(MainActivity activity)</span> </span>&#123;</span><br><span class=\"line\">        mActivity = <span class=\"keyword\">new</span> WeakReference&lt;MainActivity&gt;(activity);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span> </span>&#123;</span><br><span class=\"line\">        MainActivity activity = mActivity.get();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (activity != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// do something...</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>所以其實當我們使用到了handler以及msg，如果我們無法取得想要WeakReference的物件，那麼回收機制也將會直接收走，連一點殘渣也不想留給你，這樣也解決的上述內存洩漏的可能。</p>\n<h1 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h1><p><a href=\"http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2014/1106/1922.html\" target=\"_blank\" rel=\"noopener\">泡在網上的日子</a><br><a href=\"https://groups.google.com/forum/?fromgroups=#%21msg/android-developers/1aPZXZG6kWk/lIYDavGYn5UJ\" target=\"_blank\" rel=\"noopener\">Google開發論壇</a><br><a href=\"http://codex.wiki/post/132087-711\" target=\"_blank\" rel=\"noopener\">Java之WeakReference與SoftReference使用講解</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>大家都應該都有使用過Handler更新UI的時刻，但我們的使用方法是對的嗎?</p>\n<h1 id=\"我們通常都會像下面這樣寫\"><a href=\"#我們通常都會像下面這樣寫\" class=\"headerlink\" title=\"我們通常都會像下面這樣寫\"></a>我們通常都會像下面這樣寫</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> Handler mHandler = <span class=\"keyword\">new</span> Handler() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// TODO</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>各種關於Handler的教學文章應該都是如此使用吧?</p>\n<p>那麼大家有沒有看過下面這行錯誤警告↓<br>Warn:This Handler class should be static or leaks might occur<br>這句話給的意義其實非常重大，Handler應該是static，否則內存可能洩漏！<br>就讓小魯解釋一下，他這個可恨的東西到底是如何洩漏的呢?</p>\n<p>問題在於Runnable、Thread，我們獲取大量數據時當然會使用這些方法，並且加上msg讓他完成時更新UI，但如果我們將這個Activity(Fragment)註銷掉呢?</p>\n<p>很不幸的，當你應用程式開啟framework也跟著開啟，內部有一個Looper，整個App靠他，如果msg沒有執行前，這些正在執行中的Runnable、Thread將會繼續執行，直至msg被執行，這根本就是驚天動地，令人無法接受，唉聲嘆氣的消耗程式資源!</p>\n<p>但不要吃驚，Romain Guy(Adroid framework engineer)也幫助我們，給我們建議<a href=\"https://groups.google.com/forum/?fromgroups=#%21msg/android-developers/1aPZXZG6kWk/lIYDavGYn5UJ\" target=\"_blank\" rel=\"noopener\">使用方法</a></p>\n<h1 id=\"就讓咱們繼續看下去…\"><a href=\"#就讓咱們繼續看下去…\" class=\"headerlink\" title=\"就讓咱們繼續看下去…\"></a>就讓咱們繼續看下去…</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OuterClass</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">InnerClass</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> WeakReference&lt;OuterClass&gt; mTarget;</span><br><span class=\"line\">                                        </span><br><span class=\"line\">        InnerClass(OuterClass target) &#123;</span><br><span class=\"line\">            mTarget = <span class=\"keyword\">new</span> WeakReference&lt;OuterClass&gt;(target);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">                                    </span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">doSomething</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">            OuterClass target = mTarget.get();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (target != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                target.<span class=\"keyword\">do</span>();    </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上述程式碼可以看到一個不常看見的東西叫WeakReference，也是所謂的”弱引用”，小魯在這邊也大概說一下，弱引用就是不能阻擋任何關於回收的動作。</p>\n<h1 id=\"那麼我們的程式碼將會\"><a href=\"#那麼我們的程式碼將會\" class=\"headerlink\" title=\"那麼我們的程式碼將會\"></a>那麼我們的程式碼將會</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">OuterHandler</span> <span class=\"keyword\">extends</span> <span class=\"title\">Handler</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> WeakReference&lt;MainActivity&gt; mActivity;</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">OuterHandler</span><span class=\"params\">(MainActivity activity)</span> </span>&#123;</span><br><span class=\"line\">        mActivity = <span class=\"keyword\">new</span> WeakReference&lt;MainActivity&gt;(activity);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">handleMessage</span><span class=\"params\">(Message msg)</span> </span>&#123;</span><br><span class=\"line\">        MainActivity activity = mActivity.get();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (activity != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// do something...</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>所以其實當我們使用到了handler以及msg，如果我們無法取得想要WeakReference的物件，那麼回收機制也將會直接收走，連一點殘渣也不想留給你，這樣也解決的上述內存洩漏的可能。</p>\n<h1 id=\"參考資料\"><a href=\"#參考資料\" class=\"headerlink\" title=\"參考資料\"></a>參考資料</h1><p><a href=\"http://www.jcodecraeer.com/a/anzhuokaifa/androidkaifa/2014/1106/1922.html\" target=\"_blank\" rel=\"noopener\">泡在網上的日子</a><br><a href=\"https://groups.google.com/forum/?fromgroups=#%21msg/android-developers/1aPZXZG6kWk/lIYDavGYn5UJ\" target=\"_blank\" rel=\"noopener\">Google開發論壇</a><br><a href=\"http://codex.wiki/post/132087-711\" target=\"_blank\" rel=\"noopener\">Java之WeakReference與SoftReference使用講解</a></p>\n"},{"title":"Android. 關於RecyclerView自適應高、寬(WrapContent)的方法","date":"2016-02-20T03:01:46.000Z","_content":"\n我們要知道一件事情啦！ RecyclerView沒有對於Item做任何的改變，簡單的說，我們的Layout編排，都是靠LayoutManager去做修改，因此我們需要對於LayoutManager做運算。\n\n所以我們得手動更改onMeasure，以下為LinearLayoutManager做範例。\n\n```java\npublic class WrapContentLinearLayout extends LinearLayoutManager {\n\n    public WrapContentLinearLayout(Context context) {\n        super(context);\n    }\n\n    public WrapContentLinearLayout(Context context, int orientation, boolean reverseLayout) {\n        super(context, orientation, reverseLayout);\n    }\n\n    public WrapContentLinearLayout(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {\n        super(context, attrs, defStyleAttr, defStyleRes);\n    }\n\n    @Override\n    public void onMeasure(RecyclerView.Recycler recycler, RecyclerView.State state, int widthSpec, int heightSpec) {\n        View view = recycler.getViewForPosition(0);\n        if(view != null){\n            measureChild(view, widthSpec, heightSpec); //計算View的高寬\n            int measuredWidth = getItemCount() * view.getMeasuredWidth() > View.MeasureSpec.getSize(widthSpec) ? View.MeasureSpec.getSize(widthSpec) : getItemCount() * view.getMeasuredWidth();\n            int measuredHeight = view.getMeasuredHeight();\n            setMeasuredDimension(measuredWidth, measuredHeight);\n        }\n    }\n}\n```\n\n如果全部的ItemView寬度大於RecyclerView的寬度就使用原先的寬度，反之就使用我們ItemView的寬度，如此一來就解決了。\n\n然後就...江...上面這方法聽說不是很準確的抓到高寬度，但我覺得夠用了！反正使用者又看不太出來(感覺要被打了...)。\n\n以上為今日不負責任教學講座，請看好看滿。","source":"_posts/Android-關於RecyclerView自適應高、寬-WrapContent-的方法.md","raw":"---\ntitle: Android. 關於RecyclerView自適應高、寬(WrapContent)的方法\ndate: 2016-02-20 11:01:46\ntags: Android\n---\n\n我們要知道一件事情啦！ RecyclerView沒有對於Item做任何的改變，簡單的說，我們的Layout編排，都是靠LayoutManager去做修改，因此我們需要對於LayoutManager做運算。\n\n所以我們得手動更改onMeasure，以下為LinearLayoutManager做範例。\n\n```java\npublic class WrapContentLinearLayout extends LinearLayoutManager {\n\n    public WrapContentLinearLayout(Context context) {\n        super(context);\n    }\n\n    public WrapContentLinearLayout(Context context, int orientation, boolean reverseLayout) {\n        super(context, orientation, reverseLayout);\n    }\n\n    public WrapContentLinearLayout(Context context, AttributeSet attrs, int defStyleAttr, int defStyleRes) {\n        super(context, attrs, defStyleAttr, defStyleRes);\n    }\n\n    @Override\n    public void onMeasure(RecyclerView.Recycler recycler, RecyclerView.State state, int widthSpec, int heightSpec) {\n        View view = recycler.getViewForPosition(0);\n        if(view != null){\n            measureChild(view, widthSpec, heightSpec); //計算View的高寬\n            int measuredWidth = getItemCount() * view.getMeasuredWidth() > View.MeasureSpec.getSize(widthSpec) ? View.MeasureSpec.getSize(widthSpec) : getItemCount() * view.getMeasuredWidth();\n            int measuredHeight = view.getMeasuredHeight();\n            setMeasuredDimension(measuredWidth, measuredHeight);\n        }\n    }\n}\n```\n\n如果全部的ItemView寬度大於RecyclerView的寬度就使用原先的寬度，反之就使用我們ItemView的寬度，如此一來就解決了。\n\n然後就...江...上面這方法聽說不是很準確的抓到高寬度，但我覺得夠用了！反正使用者又看不太出來(感覺要被打了...)。\n\n以上為今日不負責任教學講座，請看好看滿。","slug":"Android-關於RecyclerView自適應高、寬-WrapContent-的方法","published":1,"updated":"2018-08-21T12:13:45.937Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0rq000wskvcjkalg2m7","content":"<p>我們要知道一件事情啦！ RecyclerView沒有對於Item做任何的改變，簡單的說，我們的Layout編排，都是靠LayoutManager去做修改，因此我們需要對於LayoutManager做運算。</p>\n<p>所以我們得手動更改onMeasure，以下為LinearLayoutManager做範例。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WrapContentLinearLayout</span> <span class=\"keyword\">extends</span> <span class=\"title\">LinearLayoutManager</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">WrapContentLinearLayout</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">WrapContentLinearLayout</span><span class=\"params\">(Context context, <span class=\"keyword\">int</span> orientation, <span class=\"keyword\">boolean</span> reverseLayout)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, orientation, reverseLayout);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">WrapContentLinearLayout</span><span class=\"params\">(Context context, AttributeSet attrs, <span class=\"keyword\">int</span> defStyleAttr, <span class=\"keyword\">int</span> defStyleRes)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs, defStyleAttr, defStyleRes);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onMeasure</span><span class=\"params\">(RecyclerView.Recycler recycler, RecyclerView.State state, <span class=\"keyword\">int</span> widthSpec, <span class=\"keyword\">int</span> heightSpec)</span> </span>&#123;</span><br><span class=\"line\">        View view = recycler.getViewForPosition(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(view != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            measureChild(view, widthSpec, heightSpec); <span class=\"comment\">//計算View的高寬</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> measuredWidth = getItemCount() * view.getMeasuredWidth() &gt; View.MeasureSpec.getSize(widthSpec) ? View.MeasureSpec.getSize(widthSpec) : getItemCount() * view.getMeasuredWidth();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> measuredHeight = view.getMeasuredHeight();</span><br><span class=\"line\">            setMeasuredDimension(measuredWidth, measuredHeight);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果全部的ItemView寬度大於RecyclerView的寬度就使用原先的寬度，反之就使用我們ItemView的寬度，如此一來就解決了。</p>\n<p>然後就…江…上面這方法聽說不是很準確的抓到高寬度，但我覺得夠用了！反正使用者又看不太出來(感覺要被打了…)。</p>\n<p>以上為今日不負責任教學講座，請看好看滿。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>我們要知道一件事情啦！ RecyclerView沒有對於Item做任何的改變，簡單的說，我們的Layout編排，都是靠LayoutManager去做修改，因此我們需要對於LayoutManager做運算。</p>\n<p>所以我們得手動更改onMeasure，以下為LinearLayoutManager做範例。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WrapContentLinearLayout</span> <span class=\"keyword\">extends</span> <span class=\"title\">LinearLayoutManager</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">WrapContentLinearLayout</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">WrapContentLinearLayout</span><span class=\"params\">(Context context, <span class=\"keyword\">int</span> orientation, <span class=\"keyword\">boolean</span> reverseLayout)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, orientation, reverseLayout);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">WrapContentLinearLayout</span><span class=\"params\">(Context context, AttributeSet attrs, <span class=\"keyword\">int</span> defStyleAttr, <span class=\"keyword\">int</span> defStyleRes)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs, defStyleAttr, defStyleRes);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onMeasure</span><span class=\"params\">(RecyclerView.Recycler recycler, RecyclerView.State state, <span class=\"keyword\">int</span> widthSpec, <span class=\"keyword\">int</span> heightSpec)</span> </span>&#123;</span><br><span class=\"line\">        View view = recycler.getViewForPosition(<span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(view != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            measureChild(view, widthSpec, heightSpec); <span class=\"comment\">//計算View的高寬</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> measuredWidth = getItemCount() * view.getMeasuredWidth() &gt; View.MeasureSpec.getSize(widthSpec) ? View.MeasureSpec.getSize(widthSpec) : getItemCount() * view.getMeasuredWidth();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> measuredHeight = view.getMeasuredHeight();</span><br><span class=\"line\">            setMeasuredDimension(measuredWidth, measuredHeight);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果全部的ItemView寬度大於RecyclerView的寬度就使用原先的寬度，反之就使用我們ItemView的寬度，如此一來就解決了。</p>\n<p>然後就…江…上面這方法聽說不是很準確的抓到高寬度，但我覺得夠用了！反正使用者又看不太出來(感覺要被打了…)。</p>\n<p>以上為今日不負責任教學講座，請看好看滿。</p>\n"},{"title":"Android. 猴子也學不會的SQLite(1)","date":"2016-01-04T03:13:42.000Z","_content":"\n各位道友，貧道今天來分享一下魯魯der文章，在大家踏入這個Android開發以後，會發現其實SQLite在Android其實很常使用。\n\n接下來就簡約介紹一下SQLite。\n\n1. SQLite的優點\n(1) 體積小，適用於一些簡單的應用也方便攜帶\n(2) 在多讀少寫的情況下，讀取速度甚至優於MySQL\n(3) 可以橫跨多種平台\n(4) SQLite為檔案型資料庫，要備份直接Copy一個檔案就好。\n(5) 支援多種語言\n\n2. SQLite的缺點\n(1) 容量受限\n(2) 許多功能相較於一般資料庫來的少\n\n其實SQLite的優點是大於缺點的，但對於大數據的情況下，SQLite是沒有辦法與知名資料庫比較的。更應該說，他們是不同領域下的佼佼者，在手機、嵌入式等等的小型系統，是非常受用的，反之。\n\n那麼我們接下來教學將會以Android為主軸，來設計SQLite。\n\n```java\npublic class MySQLiteManager extends SQLiteOpenHelper {\n  \n    // 資料庫版本\n    private final static int DB_VERSION = 1;\n\n    //資料庫名稱，附檔名為db\n    private final static String DB_NAME = \"MySQLite.db\";\n    \n    //資料表名稱\n    private final static String INFO_TABLE = \"info_table\";\n\n    private final static String ROW_ID = \"rowId\";  \n\n    private final static String NAME = \"name\";\n\n    private final static String PHONE = \"phone\";\n\n    public MySQLiteManager (Context context) {\n          super(context, DB_NAME, null, DB_VERSION);\n    }\n    \n    // 每次使用將會檢查是否有無資料表，若無，則會建立資料表\n    @Override\n    public void onCreate(SQLiteDatabase db) {\n        //SQLite 所支援屬性帳面上的不多，但事實上也是能夠讀取一些其它屬性\n        String createTable = \"CREATE TABLE \" + INFO_TABLE+ \" (\"\n                          + ROW_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT, \" + NAME + \" TEXT, \" + PHONE + \" TEXT);\";\n        db.execSQL(createTable);\n    }\n    \n    @Override\n    public void onUpgrade(SQLiteDatabase db, int i, int i2) {\n      \n    }\n\n}\n```\n\n這樣就可以建立出一個簡單的資料表了，大家不仿可以嘗試看看，\n第一章節比較無聊與簡單，後面將會慢慢精彩起來，這也是必經過程，加油！\n","source":"_posts/Android-猴子也學不會的SQLite-1.md","raw":"---\ntitle: Android. 猴子也學不會的SQLite(1)\ndate: 2016-01-04 11:13:42\ntags: \n  - Android\n  - SQLite\n---\n\n各位道友，貧道今天來分享一下魯魯der文章，在大家踏入這個Android開發以後，會發現其實SQLite在Android其實很常使用。\n\n接下來就簡約介紹一下SQLite。\n\n1. SQLite的優點\n(1) 體積小，適用於一些簡單的應用也方便攜帶\n(2) 在多讀少寫的情況下，讀取速度甚至優於MySQL\n(3) 可以橫跨多種平台\n(4) SQLite為檔案型資料庫，要備份直接Copy一個檔案就好。\n(5) 支援多種語言\n\n2. SQLite的缺點\n(1) 容量受限\n(2) 許多功能相較於一般資料庫來的少\n\n其實SQLite的優點是大於缺點的，但對於大數據的情況下，SQLite是沒有辦法與知名資料庫比較的。更應該說，他們是不同領域下的佼佼者，在手機、嵌入式等等的小型系統，是非常受用的，反之。\n\n那麼我們接下來教學將會以Android為主軸，來設計SQLite。\n\n```java\npublic class MySQLiteManager extends SQLiteOpenHelper {\n  \n    // 資料庫版本\n    private final static int DB_VERSION = 1;\n\n    //資料庫名稱，附檔名為db\n    private final static String DB_NAME = \"MySQLite.db\";\n    \n    //資料表名稱\n    private final static String INFO_TABLE = \"info_table\";\n\n    private final static String ROW_ID = \"rowId\";  \n\n    private final static String NAME = \"name\";\n\n    private final static String PHONE = \"phone\";\n\n    public MySQLiteManager (Context context) {\n          super(context, DB_NAME, null, DB_VERSION);\n    }\n    \n    // 每次使用將會檢查是否有無資料表，若無，則會建立資料表\n    @Override\n    public void onCreate(SQLiteDatabase db) {\n        //SQLite 所支援屬性帳面上的不多，但事實上也是能夠讀取一些其它屬性\n        String createTable = \"CREATE TABLE \" + INFO_TABLE+ \" (\"\n                          + ROW_ID + \" INTEGER PRIMARY KEY AUTOINCREMENT, \" + NAME + \" TEXT, \" + PHONE + \" TEXT);\";\n        db.execSQL(createTable);\n    }\n    \n    @Override\n    public void onUpgrade(SQLiteDatabase db, int i, int i2) {\n      \n    }\n\n}\n```\n\n這樣就可以建立出一個簡單的資料表了，大家不仿可以嘗試看看，\n第一章節比較無聊與簡單，後面將會慢慢精彩起來，這也是必經過程，加油！\n","slug":"Android-猴子也學不會的SQLite-1","published":1,"updated":"2018-08-21T12:13:45.894Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0rs000zskvcetus7c6z","content":"<p>各位道友，貧道今天來分享一下魯魯der文章，在大家踏入這個Android開發以後，會發現其實SQLite在Android其實很常使用。</p>\n<p>接下來就簡約介紹一下SQLite。</p>\n<ol>\n<li><p>SQLite的優點<br>(1) 體積小，適用於一些簡單的應用也方便攜帶<br>(2) 在多讀少寫的情況下，讀取速度甚至優於MySQL<br>(3) 可以橫跨多種平台<br>(4) SQLite為檔案型資料庫，要備份直接Copy一個檔案就好。<br>(5) 支援多種語言</p>\n</li>\n<li><p>SQLite的缺點<br>(1) 容量受限<br>(2) 許多功能相較於一般資料庫來的少</p>\n</li>\n</ol>\n<p>其實SQLite的優點是大於缺點的，但對於大數據的情況下，SQLite是沒有辦法與知名資料庫比較的。更應該說，他們是不同領域下的佼佼者，在手機、嵌入式等等的小型系統，是非常受用的，反之。</p>\n<p>那麼我們接下來教學將會以Android為主軸，來設計SQLite。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MySQLiteManager</span> <span class=\"keyword\">extends</span> <span class=\"title\">SQLiteOpenHelper</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 資料庫版本</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> DB_VERSION = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//資料庫名稱，附檔名為db</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String DB_NAME = <span class=\"string\">\"MySQLite.db\"</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//資料表名稱</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String INFO_TABLE = <span class=\"string\">\"info_table\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String ROW_ID = <span class=\"string\">\"rowId\"</span>;  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String NAME = <span class=\"string\">\"name\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String PHONE = <span class=\"string\">\"phone\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MySQLiteManager</span> <span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">          <span class=\"keyword\">super</span>(context, DB_NAME, <span class=\"keyword\">null</span>, DB_VERSION);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 每次使用將會檢查是否有無資料表，若無，則會建立資料表</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(SQLiteDatabase db)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//SQLite 所支援屬性帳面上的不多，但事實上也是能夠讀取一些其它屬性</span></span><br><span class=\"line\">        String createTable = <span class=\"string\">\"CREATE TABLE \"</span> + INFO_TABLE+ <span class=\"string\">\" (\"</span></span><br><span class=\"line\">                          + ROW_ID + <span class=\"string\">\" INTEGER PRIMARY KEY AUTOINCREMENT, \"</span> + NAME + <span class=\"string\">\" TEXT, \"</span> + PHONE + <span class=\"string\">\" TEXT);\"</span>;</span><br><span class=\"line\">        db.execSQL(createTable);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onUpgrade</span><span class=\"params\">(SQLiteDatabase db, <span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> i2)</span> </span>&#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>這樣就可以建立出一個簡單的資料表了，大家不仿可以嘗試看看，<br>第一章節比較無聊與簡單，後面將會慢慢精彩起來，這也是必經過程，加油！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>各位道友，貧道今天來分享一下魯魯der文章，在大家踏入這個Android開發以後，會發現其實SQLite在Android其實很常使用。</p>\n<p>接下來就簡約介紹一下SQLite。</p>\n<ol>\n<li><p>SQLite的優點<br>(1) 體積小，適用於一些簡單的應用也方便攜帶<br>(2) 在多讀少寫的情況下，讀取速度甚至優於MySQL<br>(3) 可以橫跨多種平台<br>(4) SQLite為檔案型資料庫，要備份直接Copy一個檔案就好。<br>(5) 支援多種語言</p>\n</li>\n<li><p>SQLite的缺點<br>(1) 容量受限<br>(2) 許多功能相較於一般資料庫來的少</p>\n</li>\n</ol>\n<p>其實SQLite的優點是大於缺點的，但對於大數據的情況下，SQLite是沒有辦法與知名資料庫比較的。更應該說，他們是不同領域下的佼佼者，在手機、嵌入式等等的小型系統，是非常受用的，反之。</p>\n<p>那麼我們接下來教學將會以Android為主軸，來設計SQLite。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MySQLiteManager</span> <span class=\"keyword\">extends</span> <span class=\"title\">SQLiteOpenHelper</span> </span>&#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\">// 資料庫版本</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"keyword\">int</span> DB_VERSION = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//資料庫名稱，附檔名為db</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String DB_NAME = <span class=\"string\">\"MySQLite.db\"</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">//資料表名稱</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String INFO_TABLE = <span class=\"string\">\"info_table\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String ROW_ID = <span class=\"string\">\"rowId\"</span>;  </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String NAME = <span class=\"string\">\"name\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> String PHONE = <span class=\"string\">\"phone\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">MySQLiteManager</span> <span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">          <span class=\"keyword\">super</span>(context, DB_NAME, <span class=\"keyword\">null</span>, DB_VERSION);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 每次使用將會檢查是否有無資料表，若無，則會建立資料表</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(SQLiteDatabase db)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//SQLite 所支援屬性帳面上的不多，但事實上也是能夠讀取一些其它屬性</span></span><br><span class=\"line\">        String createTable = <span class=\"string\">\"CREATE TABLE \"</span> + INFO_TABLE+ <span class=\"string\">\" (\"</span></span><br><span class=\"line\">                          + ROW_ID + <span class=\"string\">\" INTEGER PRIMARY KEY AUTOINCREMENT, \"</span> + NAME + <span class=\"string\">\" TEXT, \"</span> + PHONE + <span class=\"string\">\" TEXT);\"</span>;</span><br><span class=\"line\">        db.execSQL(createTable);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onUpgrade</span><span class=\"params\">(SQLiteDatabase db, <span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> i2)</span> </span>&#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>這樣就可以建立出一個簡單的資料表了，大家不仿可以嘗試看看，<br>第一章節比較無聊與簡單，後面將會慢慢精彩起來，這也是必經過程，加油！</p>\n"},{"title":"Install Redis on Centos7","date":"2018-02-01T12:35:09.000Z","_content":"\nRedis是一個OpenSource的CacheServer，人家可是NoSQL + KeyValue概念呢! 想當然Cache有分內存、磁碟等兩種方式，要使用哪一種儲存方式全看需求。然而Redis身為一個社群活耀的OpenSource，那麼內建transactions、replication以及data structures等多樣功能肯定也是很正常的一件事情。\n\n話不多說，進入主題，窩們今天要在centos7上面給他裝裝Redis囉!\n\n# Yum Install\n最簡單的安裝方式。\n\n## Step 1. Update yum and install EPEL repository\n```\nyum install epel-release\nyum update\n```\n\n## Step 2. Install Redis\n```\nyum install redis\n\n# 開機自動啟動囉!\nsystemctl enable redis\n```\n\n## Step 3. Configuration redis.conf\n使用這種方式安裝的設定檔可於/etc/redis.conf看到，我們需要編輯他。\n```\nvi /etc/redis.conf\n\n#----加入以下資訊----#\n\n#加入對外IP，若沒有加可以於local測試，反之則無法於外面機器測試\nbind 127.0.0.1 192.168.56.101\n```\n\n# Download Install\n如果你不想使用yum進行安裝的人，可以使用這個方式。\n## Step 1. Install necessary packages\nRedis有使用到其他的Source，因此一並給他裝上去。\n```\nyum install wget make gcc\n```\n\n## Step 2. Install Redis\n```\nmkdir /usr/redis\nwget http://download.redis.io/releases/redis-3.2.9.tar.gz // download\ntatar -zxvf redis-3.2.9.tar.gz -C /usr/redis --strip-components=1 // untar\nmake && make install\n```\n\nStep 3. Install Init Redis Script\n在這個步驟你會需要輸入redis的相關設定，那基本上我是都照預設下去跑，一直Enter。\n```\ncd /usr/redis/utils\n./install_server.sh\n\n# 開機自動啟動囉!\nsystemctl enable redis_6379\n```\n\n## Step 4. Configuration redis.conf\n若是像上述直接enter安裝的你，會在/etc/redis/6379.conf發現redis設定檔，我們需要編輯他。\n```\nvi /etc/redis/6379.conf\n\n#----加入以下資訊----#\n\n#加入對外IP，若沒有加可以於local測試，反之則無法於外面機器測試\nbind 127.0.0.1 192.168.56.101\n```\n\n# Testing\n我們就簡單測試看看，理論上會儲存成功，並且Get出123字串。\n```\nredis-cli set andy '123'\nredis-cli get andy\n```","source":"_posts/Install-Redis-on-Centos7.md","raw":"---\ntitle: Install Redis on Centos7\ndate: 2018-02-01 20:35:09\ntags: Redis\n---\n\nRedis是一個OpenSource的CacheServer，人家可是NoSQL + KeyValue概念呢! 想當然Cache有分內存、磁碟等兩種方式，要使用哪一種儲存方式全看需求。然而Redis身為一個社群活耀的OpenSource，那麼內建transactions、replication以及data structures等多樣功能肯定也是很正常的一件事情。\n\n話不多說，進入主題，窩們今天要在centos7上面給他裝裝Redis囉!\n\n# Yum Install\n最簡單的安裝方式。\n\n## Step 1. Update yum and install EPEL repository\n```\nyum install epel-release\nyum update\n```\n\n## Step 2. Install Redis\n```\nyum install redis\n\n# 開機自動啟動囉!\nsystemctl enable redis\n```\n\n## Step 3. Configuration redis.conf\n使用這種方式安裝的設定檔可於/etc/redis.conf看到，我們需要編輯他。\n```\nvi /etc/redis.conf\n\n#----加入以下資訊----#\n\n#加入對外IP，若沒有加可以於local測試，反之則無法於外面機器測試\nbind 127.0.0.1 192.168.56.101\n```\n\n# Download Install\n如果你不想使用yum進行安裝的人，可以使用這個方式。\n## Step 1. Install necessary packages\nRedis有使用到其他的Source，因此一並給他裝上去。\n```\nyum install wget make gcc\n```\n\n## Step 2. Install Redis\n```\nmkdir /usr/redis\nwget http://download.redis.io/releases/redis-3.2.9.tar.gz // download\ntatar -zxvf redis-3.2.9.tar.gz -C /usr/redis --strip-components=1 // untar\nmake && make install\n```\n\nStep 3. Install Init Redis Script\n在這個步驟你會需要輸入redis的相關設定，那基本上我是都照預設下去跑，一直Enter。\n```\ncd /usr/redis/utils\n./install_server.sh\n\n# 開機自動啟動囉!\nsystemctl enable redis_6379\n```\n\n## Step 4. Configuration redis.conf\n若是像上述直接enter安裝的你，會在/etc/redis/6379.conf發現redis設定檔，我們需要編輯他。\n```\nvi /etc/redis/6379.conf\n\n#----加入以下資訊----#\n\n#加入對外IP，若沒有加可以於local測試，反之則無法於外面機器測試\nbind 127.0.0.1 192.168.56.101\n```\n\n# Testing\n我們就簡單測試看看，理論上會儲存成功，並且Get出123字串。\n```\nredis-cli set andy '123'\nredis-cli get andy\n```","slug":"Install-Redis-on-Centos7","published":1,"updated":"2018-08-21T13:37:43.154Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0rt0011skvc3j7x6wbe","content":"<p>Redis是一個OpenSource的CacheServer，人家可是NoSQL + KeyValue概念呢! 想當然Cache有分內存、磁碟等兩種方式，要使用哪一種儲存方式全看需求。然而Redis身為一個社群活耀的OpenSource，那麼內建transactions、replication以及data structures等多樣功能肯定也是很正常的一件事情。</p>\n<p>話不多說，進入主題，窩們今天要在centos7上面給他裝裝Redis囉!</p>\n<h1 id=\"Yum-Install\"><a href=\"#Yum-Install\" class=\"headerlink\" title=\"Yum Install\"></a>Yum Install</h1><p>最簡單的安裝方式。</p>\n<h2 id=\"Step-1-Update-yum-and-install-EPEL-repository\"><a href=\"#Step-1-Update-yum-and-install-EPEL-repository\" class=\"headerlink\" title=\"Step 1. Update yum and install EPEL repository\"></a>Step 1. Update yum and install EPEL repository</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install epel-release</span><br><span class=\"line\">yum update</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-2-Install-Redis\"><a href=\"#Step-2-Install-Redis\" class=\"headerlink\" title=\"Step 2. Install Redis\"></a>Step 2. Install Redis</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install redis</span><br><span class=\"line\"></span><br><span class=\"line\"># 開機自動啟動囉!</span><br><span class=\"line\">systemctl enable redis</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-3-Configuration-redis-conf\"><a href=\"#Step-3-Configuration-redis-conf\" class=\"headerlink\" title=\"Step 3. Configuration redis.conf\"></a>Step 3. Configuration redis.conf</h2><p>使用這種方式安裝的設定檔可於/etc/redis.conf看到，我們需要編輯他。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/redis.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#----加入以下資訊----#</span><br><span class=\"line\"></span><br><span class=\"line\">#加入對外IP，若沒有加可以於local測試，反之則無法於外面機器測試</span><br><span class=\"line\">bind 127.0.0.1 192.168.56.101</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Download-Install\"><a href=\"#Download-Install\" class=\"headerlink\" title=\"Download Install\"></a>Download Install</h1><p>如果你不想使用yum進行安裝的人，可以使用這個方式。</p>\n<h2 id=\"Step-1-Install-necessary-packages\"><a href=\"#Step-1-Install-necessary-packages\" class=\"headerlink\" title=\"Step 1. Install necessary packages\"></a>Step 1. Install necessary packages</h2><p>Redis有使用到其他的Source，因此一並給他裝上去。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install wget make gcc</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Step-2-Install-Redis-1\"><a href=\"#Step-2-Install-Redis-1\" class=\"headerlink\" title=\"Step 2. Install Redis\"></a>Step 2. Install Redis</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /usr/redis</span><br><span class=\"line\">wget http://download.redis.io/releases/redis-3.2.9.tar.gz // download</span><br><span class=\"line\">tatar -zxvf redis-3.2.9.tar.gz -C /usr/redis --strip-components=1 // untar</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<p>Step 3. Install Init Redis Script<br>在這個步驟你會需要輸入redis的相關設定，那基本上我是都照預設下去跑，一直Enter。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/redis/utils</span><br><span class=\"line\">./install_server.sh</span><br><span class=\"line\"></span><br><span class=\"line\"># 開機自動啟動囉!</span><br><span class=\"line\">systemctl enable redis_6379</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Step-4-Configuration-redis-conf\"><a href=\"#Step-4-Configuration-redis-conf\" class=\"headerlink\" title=\"Step 4. Configuration redis.conf\"></a>Step 4. Configuration redis.conf</h2><p>若是像上述直接enter安裝的你，會在/etc/redis/6379.conf發現redis設定檔，我們需要編輯他。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/redis/6379.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#----加入以下資訊----#</span><br><span class=\"line\"></span><br><span class=\"line\">#加入對外IP，若沒有加可以於local測試，反之則無法於外面機器測試</span><br><span class=\"line\">bind 127.0.0.1 192.168.56.101</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Testing\"><a href=\"#Testing\" class=\"headerlink\" title=\"Testing\"></a>Testing</h1><p>我們就簡單測試看看，理論上會儲存成功，並且Get出123字串。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-cli set andy &apos;123&apos;</span><br><span class=\"line\">redis-cli get andy</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Redis是一個OpenSource的CacheServer，人家可是NoSQL + KeyValue概念呢! 想當然Cache有分內存、磁碟等兩種方式，要使用哪一種儲存方式全看需求。然而Redis身為一個社群活耀的OpenSource，那麼內建transactions、replication以及data structures等多樣功能肯定也是很正常的一件事情。</p>\n<p>話不多說，進入主題，窩們今天要在centos7上面給他裝裝Redis囉!</p>\n<h1 id=\"Yum-Install\"><a href=\"#Yum-Install\" class=\"headerlink\" title=\"Yum Install\"></a>Yum Install</h1><p>最簡單的安裝方式。</p>\n<h2 id=\"Step-1-Update-yum-and-install-EPEL-repository\"><a href=\"#Step-1-Update-yum-and-install-EPEL-repository\" class=\"headerlink\" title=\"Step 1. Update yum and install EPEL repository\"></a>Step 1. Update yum and install EPEL repository</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install epel-release</span><br><span class=\"line\">yum update</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-2-Install-Redis\"><a href=\"#Step-2-Install-Redis\" class=\"headerlink\" title=\"Step 2. Install Redis\"></a>Step 2. Install Redis</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install redis</span><br><span class=\"line\"></span><br><span class=\"line\"># 開機自動啟動囉!</span><br><span class=\"line\">systemctl enable redis</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-3-Configuration-redis-conf\"><a href=\"#Step-3-Configuration-redis-conf\" class=\"headerlink\" title=\"Step 3. Configuration redis.conf\"></a>Step 3. Configuration redis.conf</h2><p>使用這種方式安裝的設定檔可於/etc/redis.conf看到，我們需要編輯他。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/redis.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#----加入以下資訊----#</span><br><span class=\"line\"></span><br><span class=\"line\">#加入對外IP，若沒有加可以於local測試，反之則無法於外面機器測試</span><br><span class=\"line\">bind 127.0.0.1 192.168.56.101</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Download-Install\"><a href=\"#Download-Install\" class=\"headerlink\" title=\"Download Install\"></a>Download Install</h1><p>如果你不想使用yum進行安裝的人，可以使用這個方式。</p>\n<h2 id=\"Step-1-Install-necessary-packages\"><a href=\"#Step-1-Install-necessary-packages\" class=\"headerlink\" title=\"Step 1. Install necessary packages\"></a>Step 1. Install necessary packages</h2><p>Redis有使用到其他的Source，因此一並給他裝上去。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install wget make gcc</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Step-2-Install-Redis-1\"><a href=\"#Step-2-Install-Redis-1\" class=\"headerlink\" title=\"Step 2. Install Redis\"></a>Step 2. Install Redis</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /usr/redis</span><br><span class=\"line\">wget http://download.redis.io/releases/redis-3.2.9.tar.gz // download</span><br><span class=\"line\">tatar -zxvf redis-3.2.9.tar.gz -C /usr/redis --strip-components=1 // untar</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<p>Step 3. Install Init Redis Script<br>在這個步驟你會需要輸入redis的相關設定，那基本上我是都照預設下去跑，一直Enter。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/redis/utils</span><br><span class=\"line\">./install_server.sh</span><br><span class=\"line\"></span><br><span class=\"line\"># 開機自動啟動囉!</span><br><span class=\"line\">systemctl enable redis_6379</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Step-4-Configuration-redis-conf\"><a href=\"#Step-4-Configuration-redis-conf\" class=\"headerlink\" title=\"Step 4. Configuration redis.conf\"></a>Step 4. Configuration redis.conf</h2><p>若是像上述直接enter安裝的你，會在/etc/redis/6379.conf發現redis設定檔，我們需要編輯他。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/redis/6379.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#----加入以下資訊----#</span><br><span class=\"line\"></span><br><span class=\"line\">#加入對外IP，若沒有加可以於local測試，反之則無法於外面機器測試</span><br><span class=\"line\">bind 127.0.0.1 192.168.56.101</span><br></pre></td></tr></table></figure></p>\n<h1 id=\"Testing\"><a href=\"#Testing\" class=\"headerlink\" title=\"Testing\"></a>Testing</h1><p>我們就簡單測試看看，理論上會儲存成功，並且Get出123字串。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">redis-cli set andy &apos;123&apos;</span><br><span class=\"line\">redis-cli get andy</span><br></pre></td></tr></table></figure></p>\n"},{"title":"SpringMVC. 猴子也學不會的系列文(1) - First SpringMVC","date":"2018-08-21T12:27:25.000Z","_content":"\n# What is Spring ?\nSpring是一個lightweight(輕量級)的framework(框架)，它可以想像是各種框架的集成，因為它可以支援許多種框架，例如Struts, Hibernate, Tapestry, EJB, JSF等等，它包含幾種模組，例如IOC, AOP, DAO, Context, ORM, WEB MVC等等，不過我們第一步需要先了解IOC(控制反轉)以及Dependency Injection(依賴注入)。\n\n# What is IOC、Dependency Injection ?\nSpring容器實現了IOC，也是這整個框架的核心所在，容器將會創建、管理物件直到銷毀，並使用Dependency Injection(依賴注入)來管理這些物件(Bean)，然而Spring提供這兩種IOC容器，分別為BeanFactory、ApplicationContext，這兩部分的差別，後將依序簡單的探討。\n\n## BeanFactory\n這是Spring提供最簡單的IOC容器，是無法使用大部分模組的，例如AOP、Integration、Web等等，因此僅適合在有限資源的環境下使用，通常用於測試與非生產環境。\n\n## ApplicationContext\n大神也推薦使用這個IOC容器，該容器繼承BeanFactory並提供了更多的功能，因此我們可以方便的使用各種模組，來幫助開發。\n\n# First SpringMVC\n進入正題囉!! 首先帶大家看看SpringMVC應有的檔案架構。\n\n## 目錄\n```\n├─build.gradle\n└─src\n    ├─main\n    │  ├─java\n    │  │  └─com\n    │  │      └─spring\n    │  │          └─example\n    │  │              ├─config\n    │  │              │  ├─WebConfiguration.java\n    │  │              │  └─WebServletInitializer.java\n    │  │              └─controller\n    │  │                 └─HomeController.java\n    │  ├─resources\n    │  │  └─log4j2.xml\n    |  └─webapp\n    |     └─WEB-INF\n    |          └─views\n    |             └─home.jsp\n```\n\n## Gradle\n```groovy\napply plugin: 'java'\napply plugin: 'war'\napply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    // Spring\n    def springVersion = '5.0.1.RELEASE'\n    compile group: 'org.springframework', name: 'spring-webmvc', version: \"${springVersion}\"\n \n    compile group: 'javax.servlet', name: 'jstl', version: '1.2'\n    providedCompile 'javax.servlet:servlet-api:2.5'\n    \n    // Log4j2\n    def log4jVersion = '2.8.2'\n    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: \"${log4jVersion}\"\n    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: \"${log4jVersion}\"\n    compile group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: \"${log4jVersion}\"\n    \n    testImplementation 'junit:junit:4.12'\n}\n\ngretty {\n    httpPort = 8080\n    contextPath = 'spring.example'\n}\n```\n\n## XML\n### log4j2.xml\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration status=\"OFF\">\n    <appenders>\n        <Console name=\"Console\" target=\"SYSTEM_OUT\">\n            <PatternLayout pattern=\"%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n\" />\n        </Console>\n    </appenders>\n    <loggers>\n        <root level=\"trace\">\n            <appender-ref ref=\"Console\" />\n        </root>\n    </loggers>\n</configuration>\n```\n\n## Java\n### WebConfiguration.java\n在該部份我們需要配置靜態資源位置以及新增一個ViewResolver實例，為何需要配置ViewResolver，主因當Controller返回ModelAndView後，DispatcherServlet會交由ViewResolver物件來作View層的相關解析，所以需要設置ViewResolver實例。\n```java\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\nimport org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\nimport org.springframework.web.servlet.view.InternalResourceViewResolver;\nimport org.springframework.web.servlet.view.JstlView;\n\n@Configuration\n@EnableWebMvc\n@ComponentScan(\"com.spring.example.**\")\npublic class WebConfiguration implements WebMvcConfigurer {\n\n    @Bean\n    public InternalResourceViewResolver viewResolver() {\n        InternalResourceViewResolver viewResolver = new InternalResourceViewResolver();\n        viewResolver.setViewClass(JstlView.class);\n        viewResolver.setPrefix(\"/WEB-INF/views/\");\n        viewResolver.setSuffix(\".jsp\");\n        return viewResolver;\n    }\n\n    public void addResourceHandlers(ResourceHandlerRegistry registry) {\n        registry.addResourceHandler(\"/resources/**\").addResourceLocations(\"/resources/\"); \n    }\n\t\n}\n```\n\n### WebServletInitializer.java\nAbstractAnnotationConfigDispatcherServletInitializer負責以下工作\n1. 配置DispatcherServlet\n2. 初始化Spring MVC容器\n3. Spring容器\n\n```java\nimport org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;\n\npublic class WebServletInitializer extends AbstractAnnotationConfigDispatcherServletInitializer {\n\n    @Override\n    protected Class<?>[] getRootConfigClasses() {\n        return null;\n    }\n\n    @Override\n    protected Class<?>[] getServletConfigClasses() {\n        return new Class[] { WebConfiguration.class };\n    }\n\n    @Override\n    protected String[] getServletMappings() {\n        return new String[] { \"/\" };\n    }\n\n}\n```\n\n### HomeController.java\n當為主頁的時候輸入home.jsp\n```java\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.ModelMap;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\n@Controller\npublic class HomeController {\n\t\n    @RequestMapping(\"/\")\n    public String home(ModelMap model) {\n        // 傳送messages至JSP\n        model.addAttribute(\"messages\", \"Spring MVC Example\");\n        return \"home\";\n    }\n\t\n}\n```\n\n## JSP\n\n### home.jsp\n由上方HomeController可以看出，我們經由Model傳送messages訊息給JSP，因此我們可以於JSP檔案中將該字串取得出來。\n```jsp\n<%@ page language=\"java\" contentType=\"text/html; charset=ISO-8859-1\" pageEncoding=\"ISO-8859-1\"%>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n        <title>Welcome</title>\n    </head>\n    <body>\n        <h1>${messages}</h1> <!-- 取得messages -->\n    </body>\n</html>\n```\n\n## Browser View\n接下來我們於瀏覽器中輸入 http://localhost:8080/spring.example 即可看到下面的畫面\n<img src=\"/2018/08/21/SpringMVC-猴子也學不會的系列文-1/bowser.veiw.png\" width=\"600\">\n\n# Reference\n## [Spring Tutorial](https://www.javatpoint.com/spring-tutorial)\n## [開源框架: Spring Gossip](https://openhome.cc/Gossip/SpringGossip/)\n## [极客学院 - IoC 容器](http://wiki.jikexueyuan.com/project/spring/ioc-containers.html)","source":"_posts/SpringMVC-猴子也學不會的系列文-1.md","raw":"---\ntitle: SpringMVC. 猴子也學不會的系列文(1) - First SpringMVC\ndate: 2018-08-21 20:27:25\ntags: \n    - Spring\n    - SpringMVC\n---\n\n# What is Spring ?\nSpring是一個lightweight(輕量級)的framework(框架)，它可以想像是各種框架的集成，因為它可以支援許多種框架，例如Struts, Hibernate, Tapestry, EJB, JSF等等，它包含幾種模組，例如IOC, AOP, DAO, Context, ORM, WEB MVC等等，不過我們第一步需要先了解IOC(控制反轉)以及Dependency Injection(依賴注入)。\n\n# What is IOC、Dependency Injection ?\nSpring容器實現了IOC，也是這整個框架的核心所在，容器將會創建、管理物件直到銷毀，並使用Dependency Injection(依賴注入)來管理這些物件(Bean)，然而Spring提供這兩種IOC容器，分別為BeanFactory、ApplicationContext，這兩部分的差別，後將依序簡單的探討。\n\n## BeanFactory\n這是Spring提供最簡單的IOC容器，是無法使用大部分模組的，例如AOP、Integration、Web等等，因此僅適合在有限資源的環境下使用，通常用於測試與非生產環境。\n\n## ApplicationContext\n大神也推薦使用這個IOC容器，該容器繼承BeanFactory並提供了更多的功能，因此我們可以方便的使用各種模組，來幫助開發。\n\n# First SpringMVC\n進入正題囉!! 首先帶大家看看SpringMVC應有的檔案架構。\n\n## 目錄\n```\n├─build.gradle\n└─src\n    ├─main\n    │  ├─java\n    │  │  └─com\n    │  │      └─spring\n    │  │          └─example\n    │  │              ├─config\n    │  │              │  ├─WebConfiguration.java\n    │  │              │  └─WebServletInitializer.java\n    │  │              └─controller\n    │  │                 └─HomeController.java\n    │  ├─resources\n    │  │  └─log4j2.xml\n    |  └─webapp\n    |     └─WEB-INF\n    |          └─views\n    |             └─home.jsp\n```\n\n## Gradle\n```groovy\napply plugin: 'java'\napply plugin: 'war'\napply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    // Spring\n    def springVersion = '5.0.1.RELEASE'\n    compile group: 'org.springframework', name: 'spring-webmvc', version: \"${springVersion}\"\n \n    compile group: 'javax.servlet', name: 'jstl', version: '1.2'\n    providedCompile 'javax.servlet:servlet-api:2.5'\n    \n    // Log4j2\n    def log4jVersion = '2.8.2'\n    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: \"${log4jVersion}\"\n    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: \"${log4jVersion}\"\n    compile group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: \"${log4jVersion}\"\n    \n    testImplementation 'junit:junit:4.12'\n}\n\ngretty {\n    httpPort = 8080\n    contextPath = 'spring.example'\n}\n```\n\n## XML\n### log4j2.xml\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<configuration status=\"OFF\">\n    <appenders>\n        <Console name=\"Console\" target=\"SYSTEM_OUT\">\n            <PatternLayout pattern=\"%d{HH:mm:ss.SSS} [%t] %-5level %logger{36} - %msg%n\" />\n        </Console>\n    </appenders>\n    <loggers>\n        <root level=\"trace\">\n            <appender-ref ref=\"Console\" />\n        </root>\n    </loggers>\n</configuration>\n```\n\n## Java\n### WebConfiguration.java\n在該部份我們需要配置靜態資源位置以及新增一個ViewResolver實例，為何需要配置ViewResolver，主因當Controller返回ModelAndView後，DispatcherServlet會交由ViewResolver物件來作View層的相關解析，所以需要設置ViewResolver實例。\n```java\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.web.servlet.config.annotation.EnableWebMvc;\nimport org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;\nimport org.springframework.web.servlet.config.annotation.WebMvcConfigurer;\nimport org.springframework.web.servlet.view.InternalResourceViewResolver;\nimport org.springframework.web.servlet.view.JstlView;\n\n@Configuration\n@EnableWebMvc\n@ComponentScan(\"com.spring.example.**\")\npublic class WebConfiguration implements WebMvcConfigurer {\n\n    @Bean\n    public InternalResourceViewResolver viewResolver() {\n        InternalResourceViewResolver viewResolver = new InternalResourceViewResolver();\n        viewResolver.setViewClass(JstlView.class);\n        viewResolver.setPrefix(\"/WEB-INF/views/\");\n        viewResolver.setSuffix(\".jsp\");\n        return viewResolver;\n    }\n\n    public void addResourceHandlers(ResourceHandlerRegistry registry) {\n        registry.addResourceHandler(\"/resources/**\").addResourceLocations(\"/resources/\"); \n    }\n\t\n}\n```\n\n### WebServletInitializer.java\nAbstractAnnotationConfigDispatcherServletInitializer負責以下工作\n1. 配置DispatcherServlet\n2. 初始化Spring MVC容器\n3. Spring容器\n\n```java\nimport org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;\n\npublic class WebServletInitializer extends AbstractAnnotationConfigDispatcherServletInitializer {\n\n    @Override\n    protected Class<?>[] getRootConfigClasses() {\n        return null;\n    }\n\n    @Override\n    protected Class<?>[] getServletConfigClasses() {\n        return new Class[] { WebConfiguration.class };\n    }\n\n    @Override\n    protected String[] getServletMappings() {\n        return new String[] { \"/\" };\n    }\n\n}\n```\n\n### HomeController.java\n當為主頁的時候輸入home.jsp\n```java\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.ModelMap;\nimport org.springframework.web.bind.annotation.RequestMapping;\n\n@Controller\npublic class HomeController {\n\t\n    @RequestMapping(\"/\")\n    public String home(ModelMap model) {\n        // 傳送messages至JSP\n        model.addAttribute(\"messages\", \"Spring MVC Example\");\n        return \"home\";\n    }\n\t\n}\n```\n\n## JSP\n\n### home.jsp\n由上方HomeController可以看出，我們經由Model傳送messages訊息給JSP，因此我們可以於JSP檔案中將該字串取得出來。\n```jsp\n<%@ page language=\"java\" contentType=\"text/html; charset=ISO-8859-1\" pageEncoding=\"ISO-8859-1\"%>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html>\n    <head>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\n        <title>Welcome</title>\n    </head>\n    <body>\n        <h1>${messages}</h1> <!-- 取得messages -->\n    </body>\n</html>\n```\n\n## Browser View\n接下來我們於瀏覽器中輸入 http://localhost:8080/spring.example 即可看到下面的畫面\n<img src=\"/2018/08/21/SpringMVC-猴子也學不會的系列文-1/bowser.veiw.png\" width=\"600\">\n\n# Reference\n## [Spring Tutorial](https://www.javatpoint.com/spring-tutorial)\n## [開源框架: Spring Gossip](https://openhome.cc/Gossip/SpringGossip/)\n## [极客学院 - IoC 容器](http://wiki.jikexueyuan.com/project/spring/ioc-containers.html)","slug":"SpringMVC-猴子也學不會的系列文-1","published":1,"updated":"2018-08-29T12:51:27.215Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0rv0013skvcn208ndbr","content":"<h1 id=\"What-is-Spring\"><a href=\"#What-is-Spring\" class=\"headerlink\" title=\"What is Spring ?\"></a>What is Spring ?</h1><p>Spring是一個lightweight(輕量級)的framework(框架)，它可以想像是各種框架的集成，因為它可以支援許多種框架，例如Struts, Hibernate, Tapestry, EJB, JSF等等，它包含幾種模組，例如IOC, AOP, DAO, Context, ORM, WEB MVC等等，不過我們第一步需要先了解IOC(控制反轉)以及Dependency Injection(依賴注入)。</p>\n<h1 id=\"What-is-IOC、Dependency-Injection\"><a href=\"#What-is-IOC、Dependency-Injection\" class=\"headerlink\" title=\"What is IOC、Dependency Injection ?\"></a>What is IOC、Dependency Injection ?</h1><p>Spring容器實現了IOC，也是這整個框架的核心所在，容器將會創建、管理物件直到銷毀，並使用Dependency Injection(依賴注入)來管理這些物件(Bean)，然而Spring提供這兩種IOC容器，分別為BeanFactory、ApplicationContext，這兩部分的差別，後將依序簡單的探討。</p>\n<h2 id=\"BeanFactory\"><a href=\"#BeanFactory\" class=\"headerlink\" title=\"BeanFactory\"></a>BeanFactory</h2><p>這是Spring提供最簡單的IOC容器，是無法使用大部分模組的，例如AOP、Integration、Web等等，因此僅適合在有限資源的環境下使用，通常用於測試與非生產環境。</p>\n<h2 id=\"ApplicationContext\"><a href=\"#ApplicationContext\" class=\"headerlink\" title=\"ApplicationContext\"></a>ApplicationContext</h2><p>大神也推薦使用這個IOC容器，該容器繼承BeanFactory並提供了更多的功能，因此我們可以方便的使用各種模組，來幫助開發。</p>\n<h1 id=\"First-SpringMVC\"><a href=\"#First-SpringMVC\" class=\"headerlink\" title=\"First SpringMVC\"></a>First SpringMVC</h1><p>進入正題囉!! 首先帶大家看看SpringMVC應有的檔案架構。</p>\n<h2 id=\"目錄\"><a href=\"#目錄\" class=\"headerlink\" title=\"目錄\"></a>目錄</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├─build.gradle</span><br><span class=\"line\">└─src</span><br><span class=\"line\">    ├─main</span><br><span class=\"line\">    │  ├─java</span><br><span class=\"line\">    │  │  └─com</span><br><span class=\"line\">    │  │      └─spring</span><br><span class=\"line\">    │  │          └─example</span><br><span class=\"line\">    │  │              ├─config</span><br><span class=\"line\">    │  │              │  ├─WebConfiguration.java</span><br><span class=\"line\">    │  │              │  └─WebServletInitializer.java</span><br><span class=\"line\">    │  │              └─controller</span><br><span class=\"line\">    │  │                 └─HomeController.java</span><br><span class=\"line\">    │  ├─resources</span><br><span class=\"line\">    │  │  └─log4j2.xml</span><br><span class=\"line\">    |  └─webapp</span><br><span class=\"line\">    |     └─WEB-INF</span><br><span class=\"line\">    |          └─views</span><br><span class=\"line\">    |             └─home.jsp</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gradle\"><a href=\"#Gradle\" class=\"headerlink\" title=\"Gradle\"></a>Gradle</h2><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'java'</span></span><br><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'war'</span></span><br><span class=\"line\">apply <span class=\"string\">from:</span> <span class=\"string\">'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'</span></span><br><span class=\"line\"></span><br><span class=\"line\">repositories &#123;</span><br><span class=\"line\">    mavenCentral()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Spring</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> springVersion = <span class=\"string\">'5.0.1.RELEASE'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.springframework'</span>, <span class=\"string\">name:</span> <span class=\"string\">'spring-webmvc'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;springVersion&#125;\"</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'javax.servlet'</span>, <span class=\"string\">name:</span> <span class=\"string\">'jstl'</span>, <span class=\"string\">version:</span> <span class=\"string\">'1.2'</span></span><br><span class=\"line\">    providedCompile <span class=\"string\">'javax.servlet:servlet-api:2.5'</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// Log4j2</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> log4jVersion = <span class=\"string\">'2.8.2'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-core'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-api'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-jcl'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    testImplementation <span class=\"string\">'junit:junit:4.12'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">gretty &#123;</span><br><span class=\"line\">    httpPort = <span class=\"number\">8080</span></span><br><span class=\"line\">    contextPath = <span class=\"string\">'spring.example'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"XML\"><a href=\"#XML\" class=\"headerlink\" title=\"XML\"></a>XML</h2><h3 id=\"log4j2-xml\"><a href=\"#log4j2-xml\" class=\"headerlink\" title=\"log4j2.xml\"></a>log4j2.xml</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span> <span class=\"attr\">status</span>=<span class=\"string\">\"OFF\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appenders</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Console</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Console\"</span> <span class=\"attr\">target</span>=<span class=\"string\">\"SYSTEM_OUT\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">PatternLayout</span> <span class=\"attr\">pattern</span>=<span class=\"string\">\"%d&#123;HH:mm:ss.SSS&#125; [%t] %-5level %logger&#123;36&#125; - %msg%n\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Console</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">appenders</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">loggers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">root</span> <span class=\"attr\">level</span>=<span class=\"string\">\"trace\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"Console\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">root</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">loggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><h3 id=\"WebConfiguration-java\"><a href=\"#WebConfiguration-java\" class=\"headerlink\" title=\"WebConfiguration.java\"></a>WebConfiguration.java</h3><p>在該部份我們需要配置靜態資源位置以及新增一個ViewResolver實例，為何需要配置ViewResolver，主因當Controller返回ModelAndView後，DispatcherServlet會交由ViewResolver物件來作View層的相關解析，所以需要設置ViewResolver實例。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.config.annotation.EnableWebMvc;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.view.InternalResourceViewResolver;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.view.JstlView;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableWebMvc</span></span><br><span class=\"line\"><span class=\"meta\">@ComponentScan</span>(<span class=\"string\">\"com.spring.example.**\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WebConfiguration</span> <span class=\"keyword\">implements</span> <span class=\"title\">WebMvcConfigurer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> InternalResourceViewResolver <span class=\"title\">viewResolver</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        InternalResourceViewResolver viewResolver = <span class=\"keyword\">new</span> InternalResourceViewResolver();</span><br><span class=\"line\">        viewResolver.setViewClass(JstlView.class);</span><br><span class=\"line\">        viewResolver.setPrefix(<span class=\"string\">\"/WEB-INF/views/\"</span>);</span><br><span class=\"line\">        viewResolver.setSuffix(<span class=\"string\">\".jsp\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> viewResolver;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addResourceHandlers</span><span class=\"params\">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class=\"line\">        registry.addResourceHandler(<span class=\"string\">\"/resources/**\"</span>).addResourceLocations(<span class=\"string\">\"/resources/\"</span>); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"WebServletInitializer-java\"><a href=\"#WebServletInitializer-java\" class=\"headerlink\" title=\"WebServletInitializer.java\"></a>WebServletInitializer.java</h3><p>AbstractAnnotationConfigDispatcherServletInitializer負責以下工作</p>\n<ol>\n<li>配置DispatcherServlet</li>\n<li>初始化Spring MVC容器</li>\n<li>Spring容器</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WebServletInitializer</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractAnnotationConfigDispatcherServletInitializer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Class&lt;?&gt;[] getRootConfigClasses() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Class&lt;?&gt;[] getServletConfigClasses() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Class[] &#123; WebConfiguration.class &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String[] getServletMappings() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String[] &#123; <span class=\"string\">\"/\"</span> &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"HomeController-java\"><a href=\"#HomeController-java\" class=\"headerlink\" title=\"HomeController.java\"></a>HomeController.java</h3><p>當為主頁的時候輸入home.jsp<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Controller;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.ui.ModelMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Controller</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HomeController</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">home</span><span class=\"params\">(ModelMap model)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 傳送messages至JSP</span></span><br><span class=\"line\">        model.addAttribute(<span class=\"string\">\"messages\"</span>, <span class=\"string\">\"Spring MVC Example\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"home\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"JSP\"><a href=\"#JSP\" class=\"headerlink\" title=\"JSP\"></a>JSP</h2><h3 id=\"home-jsp\"><a href=\"#home-jsp\" class=\"headerlink\" title=\"home.jsp\"></a>home.jsp</h3><p>由上方HomeController可以看出，我們經由Model傳送messages訊息給JSP，因此我們可以於JSP檔案中將該字串取得出來。<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">\"java\"</span> contentType=<span class=\"string\">\"text/html; charset=ISO-8859-1\"</span> pageEncoding=<span class=\"string\">\"ISO-8859-1\"</span>%&gt;</span><br><span class=\"line\">&lt;!DOCTYPE html PUBLIC <span class=\"string\">\"-//W3C//DTD HTML 4.01 Transitional//EN\"</span> <span class=\"string\">\"http://www.w3.org/TR/html4/loose.dtd\"</span>&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">    &lt;head&gt;</span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"Content-Type\"</span> content=<span class=\"string\">\"text/html; charset=ISO-8859-1\"</span>&gt;</span><br><span class=\"line\">        &lt;title&gt;Welcome&lt;/title&gt;</span><br><span class=\"line\">    &lt;/head&gt;</span><br><span class=\"line\">    &lt;body&gt;</span><br><span class=\"line\">        &lt;h1&gt;$&#123;messages&#125;&lt;/h1&gt; &lt;!-- 取得messages --&gt;</span><br><span class=\"line\">    &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Browser-View\"><a href=\"#Browser-View\" class=\"headerlink\" title=\"Browser View\"></a>Browser View</h2><p>接下來我們於瀏覽器中輸入 <a href=\"http://localhost:8080/spring.example\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/spring.example</a> 即可看到下面的畫面<br><img src=\"/2018/08/21/SpringMVC-猴子也學不會的系列文-1/bowser.veiw.png\" width=\"600\"></p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><h2 id=\"Spring-Tutorial\"><a href=\"#Spring-Tutorial\" class=\"headerlink\" title=\"Spring Tutorial\"></a><a href=\"https://www.javatpoint.com/spring-tutorial\" target=\"_blank\" rel=\"noopener\">Spring Tutorial</a></h2><h2 id=\"開源框架-Spring-Gossip\"><a href=\"#開源框架-Spring-Gossip\" class=\"headerlink\" title=\"開源框架: Spring Gossip\"></a><a href=\"https://openhome.cc/Gossip/SpringGossip/\" target=\"_blank\" rel=\"noopener\">開源框架: Spring Gossip</a></h2><h2 id=\"极客学院-IoC-容器\"><a href=\"#极客学院-IoC-容器\" class=\"headerlink\" title=\"极客学院 - IoC 容器\"></a><a href=\"http://wiki.jikexueyuan.com/project/spring/ioc-containers.html\" target=\"_blank\" rel=\"noopener\">极客学院 - IoC 容器</a></h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"What-is-Spring\"><a href=\"#What-is-Spring\" class=\"headerlink\" title=\"What is Spring ?\"></a>What is Spring ?</h1><p>Spring是一個lightweight(輕量級)的framework(框架)，它可以想像是各種框架的集成，因為它可以支援許多種框架，例如Struts, Hibernate, Tapestry, EJB, JSF等等，它包含幾種模組，例如IOC, AOP, DAO, Context, ORM, WEB MVC等等，不過我們第一步需要先了解IOC(控制反轉)以及Dependency Injection(依賴注入)。</p>\n<h1 id=\"What-is-IOC、Dependency-Injection\"><a href=\"#What-is-IOC、Dependency-Injection\" class=\"headerlink\" title=\"What is IOC、Dependency Injection ?\"></a>What is IOC、Dependency Injection ?</h1><p>Spring容器實現了IOC，也是這整個框架的核心所在，容器將會創建、管理物件直到銷毀，並使用Dependency Injection(依賴注入)來管理這些物件(Bean)，然而Spring提供這兩種IOC容器，分別為BeanFactory、ApplicationContext，這兩部分的差別，後將依序簡單的探討。</p>\n<h2 id=\"BeanFactory\"><a href=\"#BeanFactory\" class=\"headerlink\" title=\"BeanFactory\"></a>BeanFactory</h2><p>這是Spring提供最簡單的IOC容器，是無法使用大部分模組的，例如AOP、Integration、Web等等，因此僅適合在有限資源的環境下使用，通常用於測試與非生產環境。</p>\n<h2 id=\"ApplicationContext\"><a href=\"#ApplicationContext\" class=\"headerlink\" title=\"ApplicationContext\"></a>ApplicationContext</h2><p>大神也推薦使用這個IOC容器，該容器繼承BeanFactory並提供了更多的功能，因此我們可以方便的使用各種模組，來幫助開發。</p>\n<h1 id=\"First-SpringMVC\"><a href=\"#First-SpringMVC\" class=\"headerlink\" title=\"First SpringMVC\"></a>First SpringMVC</h1><p>進入正題囉!! 首先帶大家看看SpringMVC應有的檔案架構。</p>\n<h2 id=\"目錄\"><a href=\"#目錄\" class=\"headerlink\" title=\"目錄\"></a>目錄</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├─build.gradle</span><br><span class=\"line\">└─src</span><br><span class=\"line\">    ├─main</span><br><span class=\"line\">    │  ├─java</span><br><span class=\"line\">    │  │  └─com</span><br><span class=\"line\">    │  │      └─spring</span><br><span class=\"line\">    │  │          └─example</span><br><span class=\"line\">    │  │              ├─config</span><br><span class=\"line\">    │  │              │  ├─WebConfiguration.java</span><br><span class=\"line\">    │  │              │  └─WebServletInitializer.java</span><br><span class=\"line\">    │  │              └─controller</span><br><span class=\"line\">    │  │                 └─HomeController.java</span><br><span class=\"line\">    │  ├─resources</span><br><span class=\"line\">    │  │  └─log4j2.xml</span><br><span class=\"line\">    |  └─webapp</span><br><span class=\"line\">    |     └─WEB-INF</span><br><span class=\"line\">    |          └─views</span><br><span class=\"line\">    |             └─home.jsp</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gradle\"><a href=\"#Gradle\" class=\"headerlink\" title=\"Gradle\"></a>Gradle</h2><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'java'</span></span><br><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'war'</span></span><br><span class=\"line\">apply <span class=\"string\">from:</span> <span class=\"string\">'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'</span></span><br><span class=\"line\"></span><br><span class=\"line\">repositories &#123;</span><br><span class=\"line\">    mavenCentral()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Spring</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> springVersion = <span class=\"string\">'5.0.1.RELEASE'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.springframework'</span>, <span class=\"string\">name:</span> <span class=\"string\">'spring-webmvc'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;springVersion&#125;\"</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'javax.servlet'</span>, <span class=\"string\">name:</span> <span class=\"string\">'jstl'</span>, <span class=\"string\">version:</span> <span class=\"string\">'1.2'</span></span><br><span class=\"line\">    providedCompile <span class=\"string\">'javax.servlet:servlet-api:2.5'</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// Log4j2</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> log4jVersion = <span class=\"string\">'2.8.2'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-core'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-api'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-jcl'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    testImplementation <span class=\"string\">'junit:junit:4.12'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">gretty &#123;</span><br><span class=\"line\">    httpPort = <span class=\"number\">8080</span></span><br><span class=\"line\">    contextPath = <span class=\"string\">'spring.example'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"XML\"><a href=\"#XML\" class=\"headerlink\" title=\"XML\"></a>XML</h2><h3 id=\"log4j2-xml\"><a href=\"#log4j2-xml\" class=\"headerlink\" title=\"log4j2.xml\"></a>log4j2.xml</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span> <span class=\"attr\">status</span>=<span class=\"string\">\"OFF\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appenders</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Console</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Console\"</span> <span class=\"attr\">target</span>=<span class=\"string\">\"SYSTEM_OUT\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">PatternLayout</span> <span class=\"attr\">pattern</span>=<span class=\"string\">\"%d&#123;HH:mm:ss.SSS&#125; [%t] %-5level %logger&#123;36&#125; - %msg%n\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">Console</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">appenders</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">loggers</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">root</span> <span class=\"attr\">level</span>=<span class=\"string\">\"trace\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"Console\"</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">root</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">loggers</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><h3 id=\"WebConfiguration-java\"><a href=\"#WebConfiguration-java\" class=\"headerlink\" title=\"WebConfiguration.java\"></a>WebConfiguration.java</h3><p>在該部份我們需要配置靜態資源位置以及新增一個ViewResolver實例，為何需要配置ViewResolver，主因當Controller返回ModelAndView後，DispatcherServlet會交由ViewResolver物件來作View層的相關解析，所以需要設置ViewResolver實例。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Bean;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.context.annotation.Configuration;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.config.annotation.EnableWebMvc;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.view.InternalResourceViewResolver;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.view.JstlView;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableWebMvc</span></span><br><span class=\"line\"><span class=\"meta\">@ComponentScan</span>(<span class=\"string\">\"com.spring.example.**\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WebConfiguration</span> <span class=\"keyword\">implements</span> <span class=\"title\">WebMvcConfigurer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> InternalResourceViewResolver <span class=\"title\">viewResolver</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        InternalResourceViewResolver viewResolver = <span class=\"keyword\">new</span> InternalResourceViewResolver();</span><br><span class=\"line\">        viewResolver.setViewClass(JstlView.class);</span><br><span class=\"line\">        viewResolver.setPrefix(<span class=\"string\">\"/WEB-INF/views/\"</span>);</span><br><span class=\"line\">        viewResolver.setSuffix(<span class=\"string\">\".jsp\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> viewResolver;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addResourceHandlers</span><span class=\"params\">(ResourceHandlerRegistry registry)</span> </span>&#123;</span><br><span class=\"line\">        registry.addResourceHandler(<span class=\"string\">\"/resources/**\"</span>).addResourceLocations(<span class=\"string\">\"/resources/\"</span>); </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"WebServletInitializer-java\"><a href=\"#WebServletInitializer-java\" class=\"headerlink\" title=\"WebServletInitializer.java\"></a>WebServletInitializer.java</h3><p>AbstractAnnotationConfigDispatcherServletInitializer負責以下工作</p>\n<ol>\n<li>配置DispatcherServlet</li>\n<li>初始化Spring MVC容器</li>\n<li>Spring容器</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">WebServletInitializer</span> <span class=\"keyword\">extends</span> <span class=\"title\">AbstractAnnotationConfigDispatcherServletInitializer</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Class&lt;?&gt;[] getRootConfigClasses() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Class&lt;?&gt;[] getServletConfigClasses() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Class[] &#123; WebConfiguration.class &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String[] getServletMappings() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> String[] &#123; <span class=\"string\">\"/\"</span> &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"HomeController-java\"><a href=\"#HomeController-java\" class=\"headerlink\" title=\"HomeController.java\"></a>HomeController.java</h3><p>當為主頁的時候輸入home.jsp<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Controller;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.ui.ModelMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Controller</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HomeController</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/\"</span>)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">home</span><span class=\"params\">(ModelMap model)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">// 傳送messages至JSP</span></span><br><span class=\"line\">        model.addAttribute(<span class=\"string\">\"messages\"</span>, <span class=\"string\">\"Spring MVC Example\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"home\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"JSP\"><a href=\"#JSP\" class=\"headerlink\" title=\"JSP\"></a>JSP</h2><h3 id=\"home-jsp\"><a href=\"#home-jsp\" class=\"headerlink\" title=\"home.jsp\"></a>home.jsp</h3><p>由上方HomeController可以看出，我們經由Model傳送messages訊息給JSP，因此我們可以於JSP檔案中將該字串取得出來。<br><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%@ page language=<span class=\"string\">\"java\"</span> contentType=<span class=\"string\">\"text/html; charset=ISO-8859-1\"</span> pageEncoding=<span class=\"string\">\"ISO-8859-1\"</span>%&gt;</span><br><span class=\"line\">&lt;!DOCTYPE html PUBLIC <span class=\"string\">\"-//W3C//DTD HTML 4.01 Transitional//EN\"</span> <span class=\"string\">\"http://www.w3.org/TR/html4/loose.dtd\"</span>&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">    &lt;head&gt;</span><br><span class=\"line\">        &lt;meta http-equiv=<span class=\"string\">\"Content-Type\"</span> content=<span class=\"string\">\"text/html; charset=ISO-8859-1\"</span>&gt;</span><br><span class=\"line\">        &lt;title&gt;Welcome&lt;/title&gt;</span><br><span class=\"line\">    &lt;/head&gt;</span><br><span class=\"line\">    &lt;body&gt;</span><br><span class=\"line\">        &lt;h1&gt;$&#123;messages&#125;&lt;/h1&gt; &lt;!-- 取得messages --&gt;</span><br><span class=\"line\">    &lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Browser-View\"><a href=\"#Browser-View\" class=\"headerlink\" title=\"Browser View\"></a>Browser View</h2><p>接下來我們於瀏覽器中輸入 <a href=\"http://localhost:8080/spring.example\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/spring.example</a> 即可看到下面的畫面<br><img src=\"/2018/08/21/SpringMVC-猴子也學不會的系列文-1/bowser.veiw.png\" width=\"600\"></p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><h2 id=\"Spring-Tutorial\"><a href=\"#Spring-Tutorial\" class=\"headerlink\" title=\"Spring Tutorial\"></a><a href=\"https://www.javatpoint.com/spring-tutorial\" target=\"_blank\" rel=\"noopener\">Spring Tutorial</a></h2><h2 id=\"開源框架-Spring-Gossip\"><a href=\"#開源框架-Spring-Gossip\" class=\"headerlink\" title=\"開源框架: Spring Gossip\"></a><a href=\"https://openhome.cc/Gossip/SpringGossip/\" target=\"_blank\" rel=\"noopener\">開源框架: Spring Gossip</a></h2><h2 id=\"极客学院-IoC-容器\"><a href=\"#极客学院-IoC-容器\" class=\"headerlink\" title=\"极客学院 - IoC 容器\"></a><a href=\"http://wiki.jikexueyuan.com/project/spring/ioc-containers.html\" target=\"_blank\" rel=\"noopener\">极客学院 - IoC 容器</a></h2>"},{"title":"Android. 讓Spinner Item可重複(Repeat)點擊","date":"2016-03-01T02:49:28.000Z","_content":"\nSpinner是一種簡單的選單，但通常我們都只是簡單應用，並沒有做太多的改變，但我看到某些APP可以重複點擊耶！我也TMD很有事的研究了一下。\n\n先說好我只Po KeyCode，其餘的自己想辦法應用啦~我可是跟Google研究很久耶!((被踹飛\n如果你想讓Spinner Item可以重複點擊，那麼就用下面這個囉！\n\n# 修改Spinner SourceCode\n```java\ntry {\n    Field field = AdapterView.class.getDeclaredField(\"mOldSelectedPosition\");\n    field.setAccessible(true);\n    field.setInt(spinner_nav, AdapterView.INVALID_POSITION);\n} catch (Exception e) {\n    e.printStackTrace();\n}\n```\n\n如果你有稍微研究一下SourceCode你會看到mOldSelectedPosition是怎樣的角色，當ItemPosition被記錄到mOldSelectedPosition的時候，代表我們已經點擊過，這時候他們就不會給你點擊，所以我們透過修改mOldSelectedPositio，讓他保持初始，這樣我們就可以瘋狂重複點擊啦！","source":"_posts/Android-讓Spinner-Item可重複-Repeat-點擊.md","raw":"---\ntitle: Android. 讓Spinner Item可重複(Repeat)點擊\ndate: 2016-03-01 10:49:28\ntags: Android\n---\n\nSpinner是一種簡單的選單，但通常我們都只是簡單應用，並沒有做太多的改變，但我看到某些APP可以重複點擊耶！我也TMD很有事的研究了一下。\n\n先說好我只Po KeyCode，其餘的自己想辦法應用啦~我可是跟Google研究很久耶!((被踹飛\n如果你想讓Spinner Item可以重複點擊，那麼就用下面這個囉！\n\n# 修改Spinner SourceCode\n```java\ntry {\n    Field field = AdapterView.class.getDeclaredField(\"mOldSelectedPosition\");\n    field.setAccessible(true);\n    field.setInt(spinner_nav, AdapterView.INVALID_POSITION);\n} catch (Exception e) {\n    e.printStackTrace();\n}\n```\n\n如果你有稍微研究一下SourceCode你會看到mOldSelectedPosition是怎樣的角色，當ItemPosition被記錄到mOldSelectedPosition的時候，代表我們已經點擊過，這時候他們就不會給你點擊，所以我們透過修改mOldSelectedPositio，讓他保持初始，這樣我們就可以瘋狂重複點擊啦！","slug":"Android-讓Spinner-Item可重複-Repeat-點擊","published":1,"updated":"2018-08-21T12:13:45.936Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0rw0016skvccp5t51r8","content":"<p>Spinner是一種簡單的選單，但通常我們都只是簡單應用，並沒有做太多的改變，但我看到某些APP可以重複點擊耶！我也TMD很有事的研究了一下。</p>\n<p>先說好我只Po KeyCode，其餘的自己想辦法應用啦~我可是跟Google研究很久耶!((被踹飛<br>如果你想讓Spinner Item可以重複點擊，那麼就用下面這個囉！</p>\n<h1 id=\"修改Spinner-SourceCode\"><a href=\"#修改Spinner-SourceCode\" class=\"headerlink\" title=\"修改Spinner SourceCode\"></a>修改Spinner SourceCode</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    Field field = AdapterView.class.getDeclaredField(<span class=\"string\">\"mOldSelectedPosition\"</span>);</span><br><span class=\"line\">    field.setAccessible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    field.setInt(spinner_nav, AdapterView.INVALID_POSITION);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">    e.printStackTrace();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果你有稍微研究一下SourceCode你會看到mOldSelectedPosition是怎樣的角色，當ItemPosition被記錄到mOldSelectedPosition的時候，代表我們已經點擊過，這時候他們就不會給你點擊，所以我們透過修改mOldSelectedPositio，讓他保持初始，這樣我們就可以瘋狂重複點擊啦！</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Spinner是一種簡單的選單，但通常我們都只是簡單應用，並沒有做太多的改變，但我看到某些APP可以重複點擊耶！我也TMD很有事的研究了一下。</p>\n<p>先說好我只Po KeyCode，其餘的自己想辦法應用啦~我可是跟Google研究很久耶!((被踹飛<br>如果你想讓Spinner Item可以重複點擊，那麼就用下面這個囉！</p>\n<h1 id=\"修改Spinner-SourceCode\"><a href=\"#修改Spinner-SourceCode\" class=\"headerlink\" title=\"修改Spinner SourceCode\"></a>修改Spinner SourceCode</h1><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    Field field = AdapterView.class.getDeclaredField(<span class=\"string\">\"mOldSelectedPosition\"</span>);</span><br><span class=\"line\">    field.setAccessible(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    field.setInt(spinner_nav, AdapterView.INVALID_POSITION);</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">    e.printStackTrace();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果你有稍微研究一下SourceCode你會看到mOldSelectedPosition是怎樣的角色，當ItemPosition被記錄到mOldSelectedPosition的時候，代表我們已經點擊過，這時候他們就不會給你點擊，所以我們透過修改mOldSelectedPositio，讓他保持初始，這樣我們就可以瘋狂重複點擊啦！</p>\n"},{"title":"SpringMVC. 猴子也學不會的系列文(2) - Hibernate with Spring Data JPA","date":"2018-08-29T12:54:52.000Z","_content":"\n# What is Hibernate ?\nHibernate擁有高效能與物件關聯的持久化的一款ORM，使用Java的人應該對於這款ORM一點都不陌生，在業界也是很常使用的。\n\n# What is ORM ?\nORM是什麼? 其實就是Object-Relational Mapping(ORM)，主要功能為轉換程式語言中的物件與資料庫的關聯關係。\n\n使用ORM還是比傳統JDBC方便的，如下:\n1. 隱藏SQL邏輯，可以防止SQL-Injection。\n2. 無須自己實現數據庫的操作。\n3. 可以快速開發。\n4. 構造數據化結構非常方便。\n\n但使用ORM卻會犧牲效能，它會自動管理與映射這些物件以及實現複雜查詢的困難等等，因此還是要看實務上來進行使用。\n\n# What is JPA\nJPA是J2EE ORM的標準之一，JPA主要負責物件與資料表的映射，在JPA還沒出來前，聽說是很亂的，各種ORM各種自己的實現方式(小的我沒經歷過)。\n\n# What is Spring Data JPA\nSpring Data JPA主要基於Hibernate所開發的一款框架，可以讓我們更為方便的使用Hibernate與JPA。\n\n# Get Started\n在上一篇文章我們展示了簡單的SpringMVC範例，接下來我們將使用該範例進行一系列的修改。\n\n## 目錄\n```\n├─build.gradle\n└─src\n    ├─main\n    │  ├─java\n    │  │  └─com\n    │  │      └─spring\n    │  │          └─example\n    │  │              ├─config\n    │  │              │  ├─PersistenceJpaConfig.java\n    │  │              │  ├─WebConfiguration.java\n    │  │              │  └─WebServletInitializer.java\n    │  │              ├─controller\n    │  │              │  ├─HomeController.java\n    │  │              │  └─UserController.java\n    │  │              ├─entity\n    │  │              │  └─User.java    \n    │  │              └─repository\n    │  │                 └─UserRepository.java\n    │  ├─resources\n    │  │  └─log4j2.xml\n    |  └─webapp\n    |     └─WEB-INF\n    |          └─views\n    |             └─home.jsp\n```\n\n## Gradle\n```groovy\napply plugin: 'java'\napply plugin: 'war'\napply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    // Spring\n    def springVersion = '5.0.1.RELEASE'\n    compile group: 'org.springframework', name: 'spring-webmvc', version: \"${springVersion}\"\n    compile group: 'org.springframework', name: 'spring-orm', version: \"${springVersion}\"\n\n    compile group: 'javax.servlet', name: 'jstl', version: '1.2'\n    providedCompile 'javax.servlet:servlet-api:2.5'\n\n    def springData = '2.0.0.RELEASE'\n    compile group: 'org.springframework.data', name: 'spring-data-jpa', version: \"${springData}\"\n\n    //DBCP (Connection Pool)\n    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: \"2.0\"\n\n    //Hibernate\n    def hibernateVersion = '5.2.10.Final'\n    compile group: 'org.hibernate', name: 'hibernate-core', version: \"${hibernateVersion}\"\n\n    def sqlVersion = '2.2.0'\n    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: \"${sqlVersion}\"\n\n    def jacksonCoreVersion = '2.9.4'\n    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: \"${jacksonCoreVersion}\"\n    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: \"${jacksonCoreVersion}\"\n\n    // Log4j2\n    def log4jVersion = '2.8.2'\n    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: \"${log4jVersion}\"\n    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: \"${log4jVersion}\"\n    compile group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: \"${log4jVersion}\"\n\n    testImplementation 'junit:junit:4.12'\n}\n\ngretty {\n    httpPort = 8080\n    contextPath = 'spring.example'\n}\n```\n\n## Java\n這次新增了PersistenceJpaConfig、Entity、Repository等三個部份的程式碼。\n\n### PersistenceJpaConfig.java\n```java\n@Configuration\n@EnableTransactionManagement\n@EnableJpaRepositories(basePackages = {\"com.spring.example.repository\"})\npublic class PersistenceJpaConfig {\n\t\n    @Bean\n    public LocalContainerEntityManagerFactoryBean entityManagerFactory() {\n        LocalContainerEntityManagerFactoryBean entityManagerFactory = new LocalContainerEntityManagerFactoryBean();\n        entityManagerFactory.setDataSource(dataSource());\n        entityManagerFactory.setPackagesToScan(\"com.spring.example.entity\");\n        \n        JpaVendorAdapter jpaVendorAdapter = new HibernateJpaVendorAdapter();\n        entityManagerFactory.setJpaVendorAdapter(jpaVendorAdapter);\n        \n        Properties properties = new Properties();\n        properties.setProperty(\"hibernate.dialect\", \"org.hibernate.dialect.MariaDBDialect\");\n        properties.setProperty(\"hibernate.show_sql\", \"true\");\n        entityManagerFactory.setJpaProperties(properties);\n        \n        return entityManagerFactory;\n    }\n\n    @Bean\n    public BasicDataSource dataSource() {\n        BasicDataSource dataSource = new BasicDataSource();\n        dataSource.setDriverClassName(\"org.mariadb.jdbc.Driver\");\n        dataSource.setUrl(\"jdbc:mariadb://192.168.180.3:3306/test_db\");\n        dataSource.setUsername( \"andy\" );\n        dataSource.setPassword( \"123456\" );\n            \n        return dataSource;\n    }\n\n    @Bean\n    public JpaTransactionManager transactionManager(EntityManagerFactory entityManagerFactory) {\n        JpaTransactionManager transactionManager = new JpaTransactionManager();\n        transactionManager.setEntityManagerFactory(entityManagerFactory);\n        return transactionManager;\n    }\n\n    @Bean\n    public PersistenceExceptionTranslationPostProcessor exceptionTranslation() {\n        return new PersistenceExceptionTranslationPostProcessor();\n    }\n\t\n}\n```\n\n### User.java\n這些@Entity、@Table等等，都是JPA本身的標準，用來對應資料表的關係。\n```java\n@Entity\n@Table(name = \"users\")\npublic class User {\n\n    @Id\n    @Column(name = \"id\")\n    private int id;\n\n    @Column(name = \"account\")\n    private String account;\n\n    @Column(name = \"nickname\")\n    private String nickname;\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public String getAccount() {\n        return account;\n    }\n\n    public void setAccount(String account) {\n        this.account = account;\n    }\n\n    public String getNickname() {\n        return nickname;\n    }\n\n    public void setNickname(String nickname) {\n        this.nickname = nickname;\n    }\n\n    @Override\n    public String toString() {\n        return \"User [id=\" + id + \", account=\" + account + \", nickname=\" + nickname + \"]\";\n    }\n\n}\n```\n\n### UserRepository.java\nJpaRepository是Spring Data JPA幫我們實現的功能，只要這樣做，基礎的CRUD就有了。\n```java\n@Repository\npublic interface UserRepository extends JpaRepository<User, Integer> {\n\n}\n```\n\n### UserController.java\n接下來展示如何使用Repository取得資料，並且輸出成Restful API。\n```java\n@RestController\n@RequestMapping(\"/users\")\npublic class UserController {\n\n    @Autowired\n    private UserRepository userRepository;\n\n    @RequestMapping(method = RequestMethod.GET)\n    public List<User> getUsers() {\n        return userRepository.findAll();\n    }\n\n}\n```\n\n## Browser View\n接下來我們於瀏覽器中輸入 http://localhost:8080/spring.example/users 即可看到下面的畫面\n<img src=\"/2018/08/29/SpringMVC-猴子也學不會的系列文-2/bowser.view.png\" width=\"600\">\n\n# Reference\n## [Hibernate Tutorial](https://www.tutorialspoint.com/hibernate/orm_overview.htm)\n## [Spring Data JPA介紹與使用](https://www.jianshu.com/p/633922bb189f)\n","source":"_posts/SpringMVC-猴子也學不會的系列文-2.md","raw":"---\ntitle: SpringMVC. 猴子也學不會的系列文(2) - Hibernate with Spring Data JPA\ndate: 2018-08-29 20:54:52\ntags: \n    - Spring\n    - SpringMVC\n---\n\n# What is Hibernate ?\nHibernate擁有高效能與物件關聯的持久化的一款ORM，使用Java的人應該對於這款ORM一點都不陌生，在業界也是很常使用的。\n\n# What is ORM ?\nORM是什麼? 其實就是Object-Relational Mapping(ORM)，主要功能為轉換程式語言中的物件與資料庫的關聯關係。\n\n使用ORM還是比傳統JDBC方便的，如下:\n1. 隱藏SQL邏輯，可以防止SQL-Injection。\n2. 無須自己實現數據庫的操作。\n3. 可以快速開發。\n4. 構造數據化結構非常方便。\n\n但使用ORM卻會犧牲效能，它會自動管理與映射這些物件以及實現複雜查詢的困難等等，因此還是要看實務上來進行使用。\n\n# What is JPA\nJPA是J2EE ORM的標準之一，JPA主要負責物件與資料表的映射，在JPA還沒出來前，聽說是很亂的，各種ORM各種自己的實現方式(小的我沒經歷過)。\n\n# What is Spring Data JPA\nSpring Data JPA主要基於Hibernate所開發的一款框架，可以讓我們更為方便的使用Hibernate與JPA。\n\n# Get Started\n在上一篇文章我們展示了簡單的SpringMVC範例，接下來我們將使用該範例進行一系列的修改。\n\n## 目錄\n```\n├─build.gradle\n└─src\n    ├─main\n    │  ├─java\n    │  │  └─com\n    │  │      └─spring\n    │  │          └─example\n    │  │              ├─config\n    │  │              │  ├─PersistenceJpaConfig.java\n    │  │              │  ├─WebConfiguration.java\n    │  │              │  └─WebServletInitializer.java\n    │  │              ├─controller\n    │  │              │  ├─HomeController.java\n    │  │              │  └─UserController.java\n    │  │              ├─entity\n    │  │              │  └─User.java    \n    │  │              └─repository\n    │  │                 └─UserRepository.java\n    │  ├─resources\n    │  │  └─log4j2.xml\n    |  └─webapp\n    |     └─WEB-INF\n    |          └─views\n    |             └─home.jsp\n```\n\n## Gradle\n```groovy\napply plugin: 'java'\napply plugin: 'war'\napply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    // Spring\n    def springVersion = '5.0.1.RELEASE'\n    compile group: 'org.springframework', name: 'spring-webmvc', version: \"${springVersion}\"\n    compile group: 'org.springframework', name: 'spring-orm', version: \"${springVersion}\"\n\n    compile group: 'javax.servlet', name: 'jstl', version: '1.2'\n    providedCompile 'javax.servlet:servlet-api:2.5'\n\n    def springData = '2.0.0.RELEASE'\n    compile group: 'org.springframework.data', name: 'spring-data-jpa', version: \"${springData}\"\n\n    //DBCP (Connection Pool)\n    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: \"2.0\"\n\n    //Hibernate\n    def hibernateVersion = '5.2.10.Final'\n    compile group: 'org.hibernate', name: 'hibernate-core', version: \"${hibernateVersion}\"\n\n    def sqlVersion = '2.2.0'\n    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: \"${sqlVersion}\"\n\n    def jacksonCoreVersion = '2.9.4'\n    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: \"${jacksonCoreVersion}\"\n    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: \"${jacksonCoreVersion}\"\n\n    // Log4j2\n    def log4jVersion = '2.8.2'\n    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: \"${log4jVersion}\"\n    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: \"${log4jVersion}\"\n    compile group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: \"${log4jVersion}\"\n\n    testImplementation 'junit:junit:4.12'\n}\n\ngretty {\n    httpPort = 8080\n    contextPath = 'spring.example'\n}\n```\n\n## Java\n這次新增了PersistenceJpaConfig、Entity、Repository等三個部份的程式碼。\n\n### PersistenceJpaConfig.java\n```java\n@Configuration\n@EnableTransactionManagement\n@EnableJpaRepositories(basePackages = {\"com.spring.example.repository\"})\npublic class PersistenceJpaConfig {\n\t\n    @Bean\n    public LocalContainerEntityManagerFactoryBean entityManagerFactory() {\n        LocalContainerEntityManagerFactoryBean entityManagerFactory = new LocalContainerEntityManagerFactoryBean();\n        entityManagerFactory.setDataSource(dataSource());\n        entityManagerFactory.setPackagesToScan(\"com.spring.example.entity\");\n        \n        JpaVendorAdapter jpaVendorAdapter = new HibernateJpaVendorAdapter();\n        entityManagerFactory.setJpaVendorAdapter(jpaVendorAdapter);\n        \n        Properties properties = new Properties();\n        properties.setProperty(\"hibernate.dialect\", \"org.hibernate.dialect.MariaDBDialect\");\n        properties.setProperty(\"hibernate.show_sql\", \"true\");\n        entityManagerFactory.setJpaProperties(properties);\n        \n        return entityManagerFactory;\n    }\n\n    @Bean\n    public BasicDataSource dataSource() {\n        BasicDataSource dataSource = new BasicDataSource();\n        dataSource.setDriverClassName(\"org.mariadb.jdbc.Driver\");\n        dataSource.setUrl(\"jdbc:mariadb://192.168.180.3:3306/test_db\");\n        dataSource.setUsername( \"andy\" );\n        dataSource.setPassword( \"123456\" );\n            \n        return dataSource;\n    }\n\n    @Bean\n    public JpaTransactionManager transactionManager(EntityManagerFactory entityManagerFactory) {\n        JpaTransactionManager transactionManager = new JpaTransactionManager();\n        transactionManager.setEntityManagerFactory(entityManagerFactory);\n        return transactionManager;\n    }\n\n    @Bean\n    public PersistenceExceptionTranslationPostProcessor exceptionTranslation() {\n        return new PersistenceExceptionTranslationPostProcessor();\n    }\n\t\n}\n```\n\n### User.java\n這些@Entity、@Table等等，都是JPA本身的標準，用來對應資料表的關係。\n```java\n@Entity\n@Table(name = \"users\")\npublic class User {\n\n    @Id\n    @Column(name = \"id\")\n    private int id;\n\n    @Column(name = \"account\")\n    private String account;\n\n    @Column(name = \"nickname\")\n    private String nickname;\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public String getAccount() {\n        return account;\n    }\n\n    public void setAccount(String account) {\n        this.account = account;\n    }\n\n    public String getNickname() {\n        return nickname;\n    }\n\n    public void setNickname(String nickname) {\n        this.nickname = nickname;\n    }\n\n    @Override\n    public String toString() {\n        return \"User [id=\" + id + \", account=\" + account + \", nickname=\" + nickname + \"]\";\n    }\n\n}\n```\n\n### UserRepository.java\nJpaRepository是Spring Data JPA幫我們實現的功能，只要這樣做，基礎的CRUD就有了。\n```java\n@Repository\npublic interface UserRepository extends JpaRepository<User, Integer> {\n\n}\n```\n\n### UserController.java\n接下來展示如何使用Repository取得資料，並且輸出成Restful API。\n```java\n@RestController\n@RequestMapping(\"/users\")\npublic class UserController {\n\n    @Autowired\n    private UserRepository userRepository;\n\n    @RequestMapping(method = RequestMethod.GET)\n    public List<User> getUsers() {\n        return userRepository.findAll();\n    }\n\n}\n```\n\n## Browser View\n接下來我們於瀏覽器中輸入 http://localhost:8080/spring.example/users 即可看到下面的畫面\n<img src=\"/2018/08/29/SpringMVC-猴子也學不會的系列文-2/bowser.view.png\" width=\"600\">\n\n# Reference\n## [Hibernate Tutorial](https://www.tutorialspoint.com/hibernate/orm_overview.htm)\n## [Spring Data JPA介紹與使用](https://www.jianshu.com/p/633922bb189f)\n","slug":"SpringMVC-猴子也學不會的系列文-2","published":1,"updated":"2018-08-29T14:07:29.077Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0ry0018skvcawpf3iwq","content":"<h1 id=\"What-is-Hibernate\"><a href=\"#What-is-Hibernate\" class=\"headerlink\" title=\"What is Hibernate ?\"></a>What is Hibernate ?</h1><p>Hibernate擁有高效能與物件關聯的持久化的一款ORM，使用Java的人應該對於這款ORM一點都不陌生，在業界也是很常使用的。</p>\n<h1 id=\"What-is-ORM\"><a href=\"#What-is-ORM\" class=\"headerlink\" title=\"What is ORM ?\"></a>What is ORM ?</h1><p>ORM是什麼? 其實就是Object-Relational Mapping(ORM)，主要功能為轉換程式語言中的物件與資料庫的關聯關係。</p>\n<p>使用ORM還是比傳統JDBC方便的，如下:</p>\n<ol>\n<li>隱藏SQL邏輯，可以防止SQL-Injection。</li>\n<li>無須自己實現數據庫的操作。</li>\n<li>可以快速開發。</li>\n<li>構造數據化結構非常方便。</li>\n</ol>\n<p>但使用ORM卻會犧牲效能，它會自動管理與映射這些物件以及實現複雜查詢的困難等等，因此還是要看實務上來進行使用。</p>\n<h1 id=\"What-is-JPA\"><a href=\"#What-is-JPA\" class=\"headerlink\" title=\"What is JPA\"></a>What is JPA</h1><p>JPA是J2EE ORM的標準之一，JPA主要負責物件與資料表的映射，在JPA還沒出來前，聽說是很亂的，各種ORM各種自己的實現方式(小的我沒經歷過)。</p>\n<h1 id=\"What-is-Spring-Data-JPA\"><a href=\"#What-is-Spring-Data-JPA\" class=\"headerlink\" title=\"What is Spring Data JPA\"></a>What is Spring Data JPA</h1><p>Spring Data JPA主要基於Hibernate所開發的一款框架，可以讓我們更為方便的使用Hibernate與JPA。</p>\n<h1 id=\"Get-Started\"><a href=\"#Get-Started\" class=\"headerlink\" title=\"Get Started\"></a>Get Started</h1><p>在上一篇文章我們展示了簡單的SpringMVC範例，接下來我們將使用該範例進行一系列的修改。</p>\n<h2 id=\"目錄\"><a href=\"#目錄\" class=\"headerlink\" title=\"目錄\"></a>目錄</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├─build.gradle</span><br><span class=\"line\">└─src</span><br><span class=\"line\">    ├─main</span><br><span class=\"line\">    │  ├─java</span><br><span class=\"line\">    │  │  └─com</span><br><span class=\"line\">    │  │      └─spring</span><br><span class=\"line\">    │  │          └─example</span><br><span class=\"line\">    │  │              ├─config</span><br><span class=\"line\">    │  │              │  ├─PersistenceJpaConfig.java</span><br><span class=\"line\">    │  │              │  ├─WebConfiguration.java</span><br><span class=\"line\">    │  │              │  └─WebServletInitializer.java</span><br><span class=\"line\">    │  │              ├─controller</span><br><span class=\"line\">    │  │              │  ├─HomeController.java</span><br><span class=\"line\">    │  │              │  └─UserController.java</span><br><span class=\"line\">    │  │              ├─entity</span><br><span class=\"line\">    │  │              │  └─User.java    </span><br><span class=\"line\">    │  │              └─repository</span><br><span class=\"line\">    │  │                 └─UserRepository.java</span><br><span class=\"line\">    │  ├─resources</span><br><span class=\"line\">    │  │  └─log4j2.xml</span><br><span class=\"line\">    |  └─webapp</span><br><span class=\"line\">    |     └─WEB-INF</span><br><span class=\"line\">    |          └─views</span><br><span class=\"line\">    |             └─home.jsp</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gradle\"><a href=\"#Gradle\" class=\"headerlink\" title=\"Gradle\"></a>Gradle</h2><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'java'</span></span><br><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'war'</span></span><br><span class=\"line\">apply <span class=\"string\">from:</span> <span class=\"string\">'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'</span></span><br><span class=\"line\"></span><br><span class=\"line\">repositories &#123;</span><br><span class=\"line\">    mavenCentral()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Spring</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> springVersion = <span class=\"string\">'5.0.1.RELEASE'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.springframework'</span>, <span class=\"string\">name:</span> <span class=\"string\">'spring-webmvc'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;springVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.springframework'</span>, <span class=\"string\">name:</span> <span class=\"string\">'spring-orm'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;springVersion&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'javax.servlet'</span>, <span class=\"string\">name:</span> <span class=\"string\">'jstl'</span>, <span class=\"string\">version:</span> <span class=\"string\">'1.2'</span></span><br><span class=\"line\">    providedCompile <span class=\"string\">'javax.servlet:servlet-api:2.5'</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> springData = <span class=\"string\">'2.0.0.RELEASE'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.springframework.data'</span>, <span class=\"string\">name:</span> <span class=\"string\">'spring-data-jpa'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;springData&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//DBCP (Connection Pool)</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.commons'</span>, <span class=\"string\">name:</span> <span class=\"string\">'commons-dbcp2'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"2.0\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//Hibernate</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> hibernateVersion = <span class=\"string\">'5.2.10.Final'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.hibernate'</span>, <span class=\"string\">name:</span> <span class=\"string\">'hibernate-core'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;hibernateVersion&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> sqlVersion = <span class=\"string\">'2.2.0'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.mariadb.jdbc'</span>, <span class=\"string\">name:</span> <span class=\"string\">'mariadb-java-client'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;sqlVersion&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> jacksonCoreVersion = <span class=\"string\">'2.9.4'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'com.fasterxml.jackson.core'</span>, <span class=\"string\">name:</span> <span class=\"string\">'jackson-core'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;jacksonCoreVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'com.fasterxml.jackson.core'</span>, <span class=\"string\">name:</span> <span class=\"string\">'jackson-databind'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;jacksonCoreVersion&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Log4j2</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> log4jVersion = <span class=\"string\">'2.8.2'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-core'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-api'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-jcl'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    testImplementation <span class=\"string\">'junit:junit:4.12'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">gretty &#123;</span><br><span class=\"line\">    httpPort = <span class=\"number\">8080</span></span><br><span class=\"line\">    contextPath = <span class=\"string\">'spring.example'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><p>這次新增了PersistenceJpaConfig、Entity、Repository等三個部份的程式碼。</p>\n<h3 id=\"PersistenceJpaConfig-java\"><a href=\"#PersistenceJpaConfig-java\" class=\"headerlink\" title=\"PersistenceJpaConfig.java\"></a>PersistenceJpaConfig.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableTransactionManagement</span></span><br><span class=\"line\"><span class=\"meta\">@EnableJpaRepositories</span>(basePackages = &#123;<span class=\"string\">\"com.spring.example.repository\"</span>&#125;)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PersistenceJpaConfig</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> LocalContainerEntityManagerFactoryBean <span class=\"title\">entityManagerFactory</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        LocalContainerEntityManagerFactoryBean entityManagerFactory = <span class=\"keyword\">new</span> LocalContainerEntityManagerFactoryBean();</span><br><span class=\"line\">        entityManagerFactory.setDataSource(dataSource());</span><br><span class=\"line\">        entityManagerFactory.setPackagesToScan(<span class=\"string\">\"com.spring.example.entity\"</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        JpaVendorAdapter jpaVendorAdapter = <span class=\"keyword\">new</span> HibernateJpaVendorAdapter();</span><br><span class=\"line\">        entityManagerFactory.setJpaVendorAdapter(jpaVendorAdapter);</span><br><span class=\"line\">        </span><br><span class=\"line\">        Properties properties = <span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">        properties.setProperty(<span class=\"string\">\"hibernate.dialect\"</span>, <span class=\"string\">\"org.hibernate.dialect.MariaDBDialect\"</span>);</span><br><span class=\"line\">        properties.setProperty(<span class=\"string\">\"hibernate.show_sql\"</span>, <span class=\"string\">\"true\"</span>);</span><br><span class=\"line\">        entityManagerFactory.setJpaProperties(properties);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> entityManagerFactory;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> BasicDataSource <span class=\"title\">dataSource</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        BasicDataSource dataSource = <span class=\"keyword\">new</span> BasicDataSource();</span><br><span class=\"line\">        dataSource.setDriverClassName(<span class=\"string\">\"org.mariadb.jdbc.Driver\"</span>);</span><br><span class=\"line\">        dataSource.setUrl(<span class=\"string\">\"jdbc:mariadb://192.168.180.3:3306/test_db\"</span>);</span><br><span class=\"line\">        dataSource.setUsername( <span class=\"string\">\"andy\"</span> );</span><br><span class=\"line\">        dataSource.setPassword( <span class=\"string\">\"123456\"</span> );</span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"keyword\">return</span> dataSource;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JpaTransactionManager <span class=\"title\">transactionManager</span><span class=\"params\">(EntityManagerFactory entityManagerFactory)</span> </span>&#123;</span><br><span class=\"line\">        JpaTransactionManager transactionManager = <span class=\"keyword\">new</span> JpaTransactionManager();</span><br><span class=\"line\">        transactionManager.setEntityManagerFactory(entityManagerFactory);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> transactionManager;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> PersistenceExceptionTranslationPostProcessor <span class=\"title\">exceptionTranslation</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> PersistenceExceptionTranslationPostProcessor();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"User-java\"><a href=\"#User-java\" class=\"headerlink\" title=\"User.java\"></a>User.java</h3><p>這些@Entity、@Table等等，都是JPA本身的標準，用來對應資料表的關係。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Entity</span></span><br><span class=\"line\"><span class=\"meta\">@Table</span>(name = <span class=\"string\">\"users\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Id</span></span><br><span class=\"line\">    <span class=\"meta\">@Column</span>(name = <span class=\"string\">\"id\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Column</span>(name = <span class=\"string\">\"account\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String account;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Column</span>(name = <span class=\"string\">\"nickname\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String nickname;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getId</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(<span class=\"keyword\">int</span> id)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.id = id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getAccount</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> account;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAccount</span><span class=\"params\">(String account)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.account = account;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getNickname</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> nickname;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNickname</span><span class=\"params\">(String nickname)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.nickname = nickname;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"User [id=\"</span> + id + <span class=\"string\">\", account=\"</span> + account + <span class=\"string\">\", nickname=\"</span> + nickname + <span class=\"string\">\"]\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"UserRepository-java\"><a href=\"#UserRepository-java\" class=\"headerlink\" title=\"UserRepository.java\"></a>UserRepository.java</h3><p>JpaRepository是Spring Data JPA幫我們實現的功能，只要這樣做，基礎的CRUD就有了。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Repository</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">UserRepository</span> <span class=\"keyword\">extends</span> <span class=\"title\">JpaRepository</span>&lt;<span class=\"title\">User</span>, <span class=\"title\">Integer</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"UserController-java\"><a href=\"#UserController-java\" class=\"headerlink\" title=\"UserController.java\"></a>UserController.java</h3><p>接下來展示如何使用Repository取得資料，並且輸出成Restful API。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/users\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserRepository userRepository;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(method = RequestMethod.GET)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;User&gt; <span class=\"title\">getUsers</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userRepository.findAll();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Browser-View\"><a href=\"#Browser-View\" class=\"headerlink\" title=\"Browser View\"></a>Browser View</h2><p>接下來我們於瀏覽器中輸入 <a href=\"http://localhost:8080/spring.example/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/spring.example/users</a> 即可看到下面的畫面<br><img src=\"/2018/08/29/SpringMVC-猴子也學不會的系列文-2/bowser.view.png\" width=\"600\"></p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><h2 id=\"Hibernate-Tutorial\"><a href=\"#Hibernate-Tutorial\" class=\"headerlink\" title=\"Hibernate Tutorial\"></a><a href=\"https://www.tutorialspoint.com/hibernate/orm_overview.htm\" target=\"_blank\" rel=\"noopener\">Hibernate Tutorial</a></h2><h2 id=\"Spring-Data-JPA介紹與使用\"><a href=\"#Spring-Data-JPA介紹與使用\" class=\"headerlink\" title=\"Spring Data JPA介紹與使用\"></a><a href=\"https://www.jianshu.com/p/633922bb189f\" target=\"_blank\" rel=\"noopener\">Spring Data JPA介紹與使用</a></h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"What-is-Hibernate\"><a href=\"#What-is-Hibernate\" class=\"headerlink\" title=\"What is Hibernate ?\"></a>What is Hibernate ?</h1><p>Hibernate擁有高效能與物件關聯的持久化的一款ORM，使用Java的人應該對於這款ORM一點都不陌生，在業界也是很常使用的。</p>\n<h1 id=\"What-is-ORM\"><a href=\"#What-is-ORM\" class=\"headerlink\" title=\"What is ORM ?\"></a>What is ORM ?</h1><p>ORM是什麼? 其實就是Object-Relational Mapping(ORM)，主要功能為轉換程式語言中的物件與資料庫的關聯關係。</p>\n<p>使用ORM還是比傳統JDBC方便的，如下:</p>\n<ol>\n<li>隱藏SQL邏輯，可以防止SQL-Injection。</li>\n<li>無須自己實現數據庫的操作。</li>\n<li>可以快速開發。</li>\n<li>構造數據化結構非常方便。</li>\n</ol>\n<p>但使用ORM卻會犧牲效能，它會自動管理與映射這些物件以及實現複雜查詢的困難等等，因此還是要看實務上來進行使用。</p>\n<h1 id=\"What-is-JPA\"><a href=\"#What-is-JPA\" class=\"headerlink\" title=\"What is JPA\"></a>What is JPA</h1><p>JPA是J2EE ORM的標準之一，JPA主要負責物件與資料表的映射，在JPA還沒出來前，聽說是很亂的，各種ORM各種自己的實現方式(小的我沒經歷過)。</p>\n<h1 id=\"What-is-Spring-Data-JPA\"><a href=\"#What-is-Spring-Data-JPA\" class=\"headerlink\" title=\"What is Spring Data JPA\"></a>What is Spring Data JPA</h1><p>Spring Data JPA主要基於Hibernate所開發的一款框架，可以讓我們更為方便的使用Hibernate與JPA。</p>\n<h1 id=\"Get-Started\"><a href=\"#Get-Started\" class=\"headerlink\" title=\"Get Started\"></a>Get Started</h1><p>在上一篇文章我們展示了簡單的SpringMVC範例，接下來我們將使用該範例進行一系列的修改。</p>\n<h2 id=\"目錄\"><a href=\"#目錄\" class=\"headerlink\" title=\"目錄\"></a>目錄</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├─build.gradle</span><br><span class=\"line\">└─src</span><br><span class=\"line\">    ├─main</span><br><span class=\"line\">    │  ├─java</span><br><span class=\"line\">    │  │  └─com</span><br><span class=\"line\">    │  │      └─spring</span><br><span class=\"line\">    │  │          └─example</span><br><span class=\"line\">    │  │              ├─config</span><br><span class=\"line\">    │  │              │  ├─PersistenceJpaConfig.java</span><br><span class=\"line\">    │  │              │  ├─WebConfiguration.java</span><br><span class=\"line\">    │  │              │  └─WebServletInitializer.java</span><br><span class=\"line\">    │  │              ├─controller</span><br><span class=\"line\">    │  │              │  ├─HomeController.java</span><br><span class=\"line\">    │  │              │  └─UserController.java</span><br><span class=\"line\">    │  │              ├─entity</span><br><span class=\"line\">    │  │              │  └─User.java    </span><br><span class=\"line\">    │  │              └─repository</span><br><span class=\"line\">    │  │                 └─UserRepository.java</span><br><span class=\"line\">    │  ├─resources</span><br><span class=\"line\">    │  │  └─log4j2.xml</span><br><span class=\"line\">    |  └─webapp</span><br><span class=\"line\">    |     └─WEB-INF</span><br><span class=\"line\">    |          └─views</span><br><span class=\"line\">    |             └─home.jsp</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gradle\"><a href=\"#Gradle\" class=\"headerlink\" title=\"Gradle\"></a>Gradle</h2><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'java'</span></span><br><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'war'</span></span><br><span class=\"line\">apply <span class=\"string\">from:</span> <span class=\"string\">'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'</span></span><br><span class=\"line\"></span><br><span class=\"line\">repositories &#123;</span><br><span class=\"line\">    mavenCentral()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Spring</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> springVersion = <span class=\"string\">'5.0.1.RELEASE'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.springframework'</span>, <span class=\"string\">name:</span> <span class=\"string\">'spring-webmvc'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;springVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.springframework'</span>, <span class=\"string\">name:</span> <span class=\"string\">'spring-orm'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;springVersion&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'javax.servlet'</span>, <span class=\"string\">name:</span> <span class=\"string\">'jstl'</span>, <span class=\"string\">version:</span> <span class=\"string\">'1.2'</span></span><br><span class=\"line\">    providedCompile <span class=\"string\">'javax.servlet:servlet-api:2.5'</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> springData = <span class=\"string\">'2.0.0.RELEASE'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.springframework.data'</span>, <span class=\"string\">name:</span> <span class=\"string\">'spring-data-jpa'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;springData&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//DBCP (Connection Pool)</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.commons'</span>, <span class=\"string\">name:</span> <span class=\"string\">'commons-dbcp2'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"2.0\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//Hibernate</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> hibernateVersion = <span class=\"string\">'5.2.10.Final'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.hibernate'</span>, <span class=\"string\">name:</span> <span class=\"string\">'hibernate-core'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;hibernateVersion&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> sqlVersion = <span class=\"string\">'2.2.0'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.mariadb.jdbc'</span>, <span class=\"string\">name:</span> <span class=\"string\">'mariadb-java-client'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;sqlVersion&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> jacksonCoreVersion = <span class=\"string\">'2.9.4'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'com.fasterxml.jackson.core'</span>, <span class=\"string\">name:</span> <span class=\"string\">'jackson-core'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;jacksonCoreVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'com.fasterxml.jackson.core'</span>, <span class=\"string\">name:</span> <span class=\"string\">'jackson-databind'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;jacksonCoreVersion&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Log4j2</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> log4jVersion = <span class=\"string\">'2.8.2'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-core'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-api'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-jcl'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    testImplementation <span class=\"string\">'junit:junit:4.12'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">gretty &#123;</span><br><span class=\"line\">    httpPort = <span class=\"number\">8080</span></span><br><span class=\"line\">    contextPath = <span class=\"string\">'spring.example'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><p>這次新增了PersistenceJpaConfig、Entity、Repository等三個部份的程式碼。</p>\n<h3 id=\"PersistenceJpaConfig-java\"><a href=\"#PersistenceJpaConfig-java\" class=\"headerlink\" title=\"PersistenceJpaConfig.java\"></a>PersistenceJpaConfig.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableTransactionManagement</span></span><br><span class=\"line\"><span class=\"meta\">@EnableJpaRepositories</span>(basePackages = &#123;<span class=\"string\">\"com.spring.example.repository\"</span>&#125;)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PersistenceJpaConfig</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> LocalContainerEntityManagerFactoryBean <span class=\"title\">entityManagerFactory</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        LocalContainerEntityManagerFactoryBean entityManagerFactory = <span class=\"keyword\">new</span> LocalContainerEntityManagerFactoryBean();</span><br><span class=\"line\">        entityManagerFactory.setDataSource(dataSource());</span><br><span class=\"line\">        entityManagerFactory.setPackagesToScan(<span class=\"string\">\"com.spring.example.entity\"</span>);</span><br><span class=\"line\">        </span><br><span class=\"line\">        JpaVendorAdapter jpaVendorAdapter = <span class=\"keyword\">new</span> HibernateJpaVendorAdapter();</span><br><span class=\"line\">        entityManagerFactory.setJpaVendorAdapter(jpaVendorAdapter);</span><br><span class=\"line\">        </span><br><span class=\"line\">        Properties properties = <span class=\"keyword\">new</span> Properties();</span><br><span class=\"line\">        properties.setProperty(<span class=\"string\">\"hibernate.dialect\"</span>, <span class=\"string\">\"org.hibernate.dialect.MariaDBDialect\"</span>);</span><br><span class=\"line\">        properties.setProperty(<span class=\"string\">\"hibernate.show_sql\"</span>, <span class=\"string\">\"true\"</span>);</span><br><span class=\"line\">        entityManagerFactory.setJpaProperties(properties);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"keyword\">return</span> entityManagerFactory;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> BasicDataSource <span class=\"title\">dataSource</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        BasicDataSource dataSource = <span class=\"keyword\">new</span> BasicDataSource();</span><br><span class=\"line\">        dataSource.setDriverClassName(<span class=\"string\">\"org.mariadb.jdbc.Driver\"</span>);</span><br><span class=\"line\">        dataSource.setUrl(<span class=\"string\">\"jdbc:mariadb://192.168.180.3:3306/test_db\"</span>);</span><br><span class=\"line\">        dataSource.setUsername( <span class=\"string\">\"andy\"</span> );</span><br><span class=\"line\">        dataSource.setPassword( <span class=\"string\">\"123456\"</span> );</span><br><span class=\"line\">            </span><br><span class=\"line\">        <span class=\"keyword\">return</span> dataSource;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JpaTransactionManager <span class=\"title\">transactionManager</span><span class=\"params\">(EntityManagerFactory entityManagerFactory)</span> </span>&#123;</span><br><span class=\"line\">        JpaTransactionManager transactionManager = <span class=\"keyword\">new</span> JpaTransactionManager();</span><br><span class=\"line\">        transactionManager.setEntityManagerFactory(entityManagerFactory);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> transactionManager;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> PersistenceExceptionTranslationPostProcessor <span class=\"title\">exceptionTranslation</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> PersistenceExceptionTranslationPostProcessor();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"User-java\"><a href=\"#User-java\" class=\"headerlink\" title=\"User.java\"></a>User.java</h3><p>這些@Entity、@Table等等，都是JPA本身的標準，用來對應資料表的關係。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Entity</span></span><br><span class=\"line\"><span class=\"meta\">@Table</span>(name = <span class=\"string\">\"users\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Id</span></span><br><span class=\"line\">    <span class=\"meta\">@Column</span>(name = <span class=\"string\">\"id\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> id;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Column</span>(name = <span class=\"string\">\"account\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String account;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Column</span>(name = <span class=\"string\">\"nickname\"</span>)</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String nickname;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getId</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setId</span><span class=\"params\">(<span class=\"keyword\">int</span> id)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.id = id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getAccount</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> account;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAccount</span><span class=\"params\">(String account)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.account = account;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getNickname</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> nickname;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNickname</span><span class=\"params\">(String nickname)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.nickname = nickname;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">toString</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"User [id=\"</span> + id + <span class=\"string\">\", account=\"</span> + account + <span class=\"string\">\", nickname=\"</span> + nickname + <span class=\"string\">\"]\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"UserRepository-java\"><a href=\"#UserRepository-java\" class=\"headerlink\" title=\"UserRepository.java\"></a>UserRepository.java</h3><p>JpaRepository是Spring Data JPA幫我們實現的功能，只要這樣做，基礎的CRUD就有了。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Repository</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">UserRepository</span> <span class=\"keyword\">extends</span> <span class=\"title\">JpaRepository</span>&lt;<span class=\"title\">User</span>, <span class=\"title\">Integer</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"UserController-java\"><a href=\"#UserController-java\" class=\"headerlink\" title=\"UserController.java\"></a>UserController.java</h3><p>接下來展示如何使用Repository取得資料，並且輸出成Restful API。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/users\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserRepository userRepository;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(method = RequestMethod.GET)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;User&gt; <span class=\"title\">getUsers</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userRepository.findAll();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Browser-View\"><a href=\"#Browser-View\" class=\"headerlink\" title=\"Browser View\"></a>Browser View</h2><p>接下來我們於瀏覽器中輸入 <a href=\"http://localhost:8080/spring.example/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/spring.example/users</a> 即可看到下面的畫面<br><img src=\"/2018/08/29/SpringMVC-猴子也學不會的系列文-2/bowser.view.png\" width=\"600\"></p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><h2 id=\"Hibernate-Tutorial\"><a href=\"#Hibernate-Tutorial\" class=\"headerlink\" title=\"Hibernate Tutorial\"></a><a href=\"https://www.tutorialspoint.com/hibernate/orm_overview.htm\" target=\"_blank\" rel=\"noopener\">Hibernate Tutorial</a></h2><h2 id=\"Spring-Data-JPA介紹與使用\"><a href=\"#Spring-Data-JPA介紹與使用\" class=\"headerlink\" title=\"Spring Data JPA介紹與使用\"></a><a href=\"https://www.jianshu.com/p/633922bb189f\" target=\"_blank\" rel=\"noopener\">Spring Data JPA介紹與使用</a></h2>"},{"title":"SpringMVC. 猴子也學不會的系列文(3) - Aspect-Oriented Programming (AOP)","date":"2018-09-01T00:43:34.000Z","_content":"\n# What is AOP ?\nAOP只是一種概念，因此許多人會覺得聽起來非常抽象，很難理解它的意思，原先我們使用OOP時，會發現我們都是由上到下的完成一個流程，但AOP卻會Cross-cutting concern，將整個流程橫切，如安全 （Security）檢查、交易（Transaction）等系統層面的服務（Service），在一些應用程式之中常被見到安插至各個物件的處理流程之 中，這些動作在AOP的術語中被稱之為Cross-cutting concerns。\n\n## AOP concepts(概念)\n\n### Aspect\nAspect最大的作用即是收集各商務物件中的crosscutting concerns。在Spring中除了使用XML設定方式，也建議可以使用Annotation方式進行開發，會較於簡單。\n\n### Joinpoint\nAspect在應用程式執行時加入商務流程的點或時機稱之為Joinpoint，被呼叫的時機有可能在某個方法的前面(@before)或後面(@after)，然而Joinpoint還可以讓我們取到傳入該流程的參數以及結果，也能夠攔截例外處理。\n\n### Advice\n顧名思義，Advice將會處理有使用“around”、“before”和“after”等不同類型的通知，這部分後面看程式碼會較於清楚。\n\n### Pointcut\n這部分可以看成，對於哪一個class的某個method進行關聯的動作，讓Advice可以知道我們要從哪個method進行通知處理。\n\n### Introduction\n這不要翻譯成介紹，稱之為引入較為適當，在Java很不幸的我們無法動態的修改已編譯過的類別，但是Introduction卻可以讓你動態為這個以編譯過的類別進行新增功能等動作，確實是滿驚人的，不過我沒有試過，有興趣的大大歡迎試試看。\n\n### Target object\n一個Advice被應用的對象或目標物件，如果直接使用Target Object進行撰寫橫切點等程式碼，會發現使用這種方式進行的crosscutting concerns都是需要自己設定ProxyBean，這實在是非常麻煩，但若使用Aspect則可以達到自動代理的機制。\n\n### AOP proxy\nAOP框架創建的對象，用來實現Aspect。然而Spring AOP是使用動態代理的方式進行。然後代理的理解可以看看這個從[代理機制初探 AOP](https://openhome.cc/Gossip/SpringGossip/FromProxyToAOP.html)，這邊有個簡單的小程式讓大快速理解代理機制。\n\n### Weaving\nAdvice被應用到物件上的過程稱為Weaving，在AOP中縫合的方式有幾個時間點：編譯時期（Compile time）、類別載入時期（Classload time）、執行時期（Runtime）。(取自於:[AOP 觀念與術語](https://openhome.cc/Gossip/SpringGossip/AOPConcept.html))\n\n## Advice 通知的類型\n\n### @Before advice\n在某連接點之前執行的通知，但不能令Join point停止執行，除非發生異常。\n\n### @After return advice\n在某個接點執行成功，並且返回值得時候觸發。\n\n### @After throwing advice\n在方法拋出異常退出時執行的通知。\n\n### @After(final) advice\n某個接點退出的時候執行，不管接點是否異常。\n\n### @Around advice\n這個功能算是滿常用的，上述的通知類型都會執行。\n\n# Get Started\n\n## 目錄\n```\n├─build.gradle\n└─src\n    ├─main\n    │  ├─java\n    │  │  └─com\n    │  │      └─spring\n    │  │          └─example\n    │  │              ├─aspect\n    │  │              │  └─UserAspect.java\n    │  │              ├─config\n    │  │              │  ├─AspectConfig.java\n    │  │              │  ├─PersistenceJpaConfig.java\n    │  │              │  ├─WebConfiguration.java\n    │  │              │  └─WebServletInitializer.java\n    │  │              ├─controller\n    │  │              │  ├─HomeController.java\n    │  │              │  └─UserController.java\n    │  │              ├─entity\n    │  │              │  └─User.java    \n    │  │              ├─repository\n    │  │              │  └─UserRepository.java\n    │  │              └─service\n    │  │                 ├─impl\n    │  │                 │  └─UserServiceImpl.java\n    │  │                 └─UserService.java\n    │  ├─resources\n    │  │  └─log4j2.xml\n    |  └─webapp\n    |     └─WEB-INF\n    |          └─views\n    |             └─home.jsp\n```\n\n## Gradle\n```groovy\napply plugin: 'java'\napply plugin: 'war'\napply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    // Spring\n    def springVersion = '5.0.1.RELEASE'\n    compile group: 'org.springframework', name: 'spring-webmvc', version: \"${springVersion}\"\n    compile group: 'org.springframework', name: 'spring-orm', version: \"${springVersion}\"\n    compile group: 'org.springframework', name: 'spring-aspects', version: \"${springVersion}\"\n \n    compile group: 'javax.servlet', name: 'jstl', version: '1.2'\n    providedCompile 'javax.servlet:servlet-api:2.5'\n    \n    def springData = '2.0.0.RELEASE'\n    compile group: 'org.springframework.data', name: 'spring-data-jpa', version: \"${springData}\"\n\n    //DBCP (Connection Pool)\n    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: \"2.0\"\n\n    //Hibernate\n    def hibernateVersion = '5.2.10.Final'\n    compile group: 'org.hibernate', name: 'hibernate-core', version: \"${hibernateVersion}\"\n\n    def sqlVersion = '2.2.0'\n    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: \"${sqlVersion}\"\n\n    def jacksonCoreVersion = '2.9.4'\n    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: \"${jacksonCoreVersion}\"\n    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: \"${jacksonCoreVersion}\"\n    \n    // Log4j2\n    def log4jVersion = '2.8.2'\n    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: \"${log4jVersion}\"\n    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: \"${log4jVersion}\"\n    compile group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: \"${log4jVersion}\"\n    \n    testImplementation 'junit:junit:4.12'\n}\n\ngretty {\n    httpPort = 8080\n    contextPath = 'spring.example'\n}\n```\n\n## Java\n\n### UserService.java\n```java\npublic interface UserService {\n    public List<User> getUsers();\n}\n```\n\n### UserServiceImpl.java\n```java\n@Service\npublic class UserServiceImpl implements UserService {\n\n    @Autowired\n    private UserRepository userRepository;\n\n    @Override\n    public List<User> getUsers() {\n        return userRepository.findAll();\n    }\n\t\n}\n```\n\n### UserAspect.java\n今天的主角出現了，文章開頭就介紹許多關於AOP的術語與觀念，這邊有看到@Before、@After，這兩個就是Advice通知類型，在這個Advice後面大家可以看到execution以及指定類別、方法，這邊就是Pointcut。\n```java\n@Aspect\npublic class UserAspect {\n\t\n\tprivate static Logger logger = LogManager.getLogger(UserAspect.class);\n\t\n\t@Before(\"execution(* com.spring.example.service.UserService.getUsers(..))\")\n\tpublic void logBeforeV1(JoinPoint joinPoint) {\n\t\tlogger.info(\"UserAspect.logBeforeV1() : \" + joinPoint.getSignature().getName());\n\t}\n\n\t@Before(\"execution(* com.spring.example.service.UserService.*(..))\")\n\tpublic void logBeforeV2(JoinPoint joinPoint) {\n\t\tlogger.info(\"UserAspect.logBeforeV2() : \" + joinPoint.getSignature().getName());\n\t}\n\n\t@After(\"execution(* com.spring.example.service.UserService.getUsers(..))\")\n\tpublic void logAfterV1(JoinPoint joinPoint) {\n\t\tlogger.info(\"UserAspect.logAfterV1() : \" + joinPoint.getSignature().getName());\n\t}\n\n\t@After(\"execution(* com.spring.example.service.UserService.*(..))\")\n\tpublic void logAfterV2(JoinPoint joinPoint) {\n\t\tlogger.info(\"UserAspect.logAfterV2() : \" + joinPoint.getSignature().getName());\n\t}\n\n}\n```\n\n### UserController.java\n```java\n@RestController\n@RequestMapping(\"/users\")\npublic class UserController {\n\n    @Autowired\n    private UserService userService;\n\n    @RequestMapping(method = RequestMethod.GET)\n    public List<User> getUsers() {\n        return userService.getUsers();\n    }\n\n}\n```\n\n### AspectConfig.java\n1. @Configuration 代表這是一個SpringConfig，在運行時會自動載入。\n2. @EnableAspectJAutoProxy 開啟讓Aspect自動代理。\n```java\n@Configuration\n@EnableAspectJAutoProxy\npublic class AspectConfig {\n\n    @Bean\n    public UserAspect userAspect() {\n        return new UserAspect();\n    }\n\t\n}\n```\n\n## Console View\n接下來我們於瀏覽器中輸入 http://localhost:8080/spring.example/users 即可於Console看到下面的畫面\n<img src=\"/2018/09/01/SpringMVC-猴子也學不會的系列文-3/console.view.png\" width=\"600\">\n\n# Reference\n## [AOP 觀念與術語](https://openhome.cc/Gossip/SpringGossip/AOPConcept.html)   \n## [Aspect Oriented Programming with Spring](https://docs.spring.io/spring/docs/current/spring-framework-reference/html/aop.html)\n## [Spring 实践：AOP](http://www.importnew.com/19041.html)","source":"_posts/SpringMVC-猴子也學不會的系列文-3.md","raw":"---\ntitle: SpringMVC. 猴子也學不會的系列文(3) - Aspect-Oriented Programming (AOP)\ndate: 2018-09-01 08:43:34\ntags:\n    - Spring\n    - SpringMVC\n---\n\n# What is AOP ?\nAOP只是一種概念，因此許多人會覺得聽起來非常抽象，很難理解它的意思，原先我們使用OOP時，會發現我們都是由上到下的完成一個流程，但AOP卻會Cross-cutting concern，將整個流程橫切，如安全 （Security）檢查、交易（Transaction）等系統層面的服務（Service），在一些應用程式之中常被見到安插至各個物件的處理流程之 中，這些動作在AOP的術語中被稱之為Cross-cutting concerns。\n\n## AOP concepts(概念)\n\n### Aspect\nAspect最大的作用即是收集各商務物件中的crosscutting concerns。在Spring中除了使用XML設定方式，也建議可以使用Annotation方式進行開發，會較於簡單。\n\n### Joinpoint\nAspect在應用程式執行時加入商務流程的點或時機稱之為Joinpoint，被呼叫的時機有可能在某個方法的前面(@before)或後面(@after)，然而Joinpoint還可以讓我們取到傳入該流程的參數以及結果，也能夠攔截例外處理。\n\n### Advice\n顧名思義，Advice將會處理有使用“around”、“before”和“after”等不同類型的通知，這部分後面看程式碼會較於清楚。\n\n### Pointcut\n這部分可以看成，對於哪一個class的某個method進行關聯的動作，讓Advice可以知道我們要從哪個method進行通知處理。\n\n### Introduction\n這不要翻譯成介紹，稱之為引入較為適當，在Java很不幸的我們無法動態的修改已編譯過的類別，但是Introduction卻可以讓你動態為這個以編譯過的類別進行新增功能等動作，確實是滿驚人的，不過我沒有試過，有興趣的大大歡迎試試看。\n\n### Target object\n一個Advice被應用的對象或目標物件，如果直接使用Target Object進行撰寫橫切點等程式碼，會發現使用這種方式進行的crosscutting concerns都是需要自己設定ProxyBean，這實在是非常麻煩，但若使用Aspect則可以達到自動代理的機制。\n\n### AOP proxy\nAOP框架創建的對象，用來實現Aspect。然而Spring AOP是使用動態代理的方式進行。然後代理的理解可以看看這個從[代理機制初探 AOP](https://openhome.cc/Gossip/SpringGossip/FromProxyToAOP.html)，這邊有個簡單的小程式讓大快速理解代理機制。\n\n### Weaving\nAdvice被應用到物件上的過程稱為Weaving，在AOP中縫合的方式有幾個時間點：編譯時期（Compile time）、類別載入時期（Classload time）、執行時期（Runtime）。(取自於:[AOP 觀念與術語](https://openhome.cc/Gossip/SpringGossip/AOPConcept.html))\n\n## Advice 通知的類型\n\n### @Before advice\n在某連接點之前執行的通知，但不能令Join point停止執行，除非發生異常。\n\n### @After return advice\n在某個接點執行成功，並且返回值得時候觸發。\n\n### @After throwing advice\n在方法拋出異常退出時執行的通知。\n\n### @After(final) advice\n某個接點退出的時候執行，不管接點是否異常。\n\n### @Around advice\n這個功能算是滿常用的，上述的通知類型都會執行。\n\n# Get Started\n\n## 目錄\n```\n├─build.gradle\n└─src\n    ├─main\n    │  ├─java\n    │  │  └─com\n    │  │      └─spring\n    │  │          └─example\n    │  │              ├─aspect\n    │  │              │  └─UserAspect.java\n    │  │              ├─config\n    │  │              │  ├─AspectConfig.java\n    │  │              │  ├─PersistenceJpaConfig.java\n    │  │              │  ├─WebConfiguration.java\n    │  │              │  └─WebServletInitializer.java\n    │  │              ├─controller\n    │  │              │  ├─HomeController.java\n    │  │              │  └─UserController.java\n    │  │              ├─entity\n    │  │              │  └─User.java    \n    │  │              ├─repository\n    │  │              │  └─UserRepository.java\n    │  │              └─service\n    │  │                 ├─impl\n    │  │                 │  └─UserServiceImpl.java\n    │  │                 └─UserService.java\n    │  ├─resources\n    │  │  └─log4j2.xml\n    |  └─webapp\n    |     └─WEB-INF\n    |          └─views\n    |             └─home.jsp\n```\n\n## Gradle\n```groovy\napply plugin: 'java'\napply plugin: 'war'\napply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n    // Spring\n    def springVersion = '5.0.1.RELEASE'\n    compile group: 'org.springframework', name: 'spring-webmvc', version: \"${springVersion}\"\n    compile group: 'org.springframework', name: 'spring-orm', version: \"${springVersion}\"\n    compile group: 'org.springframework', name: 'spring-aspects', version: \"${springVersion}\"\n \n    compile group: 'javax.servlet', name: 'jstl', version: '1.2'\n    providedCompile 'javax.servlet:servlet-api:2.5'\n    \n    def springData = '2.0.0.RELEASE'\n    compile group: 'org.springframework.data', name: 'spring-data-jpa', version: \"${springData}\"\n\n    //DBCP (Connection Pool)\n    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: \"2.0\"\n\n    //Hibernate\n    def hibernateVersion = '5.2.10.Final'\n    compile group: 'org.hibernate', name: 'hibernate-core', version: \"${hibernateVersion}\"\n\n    def sqlVersion = '2.2.0'\n    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: \"${sqlVersion}\"\n\n    def jacksonCoreVersion = '2.9.4'\n    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: \"${jacksonCoreVersion}\"\n    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: \"${jacksonCoreVersion}\"\n    \n    // Log4j2\n    def log4jVersion = '2.8.2'\n    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: \"${log4jVersion}\"\n    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: \"${log4jVersion}\"\n    compile group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: \"${log4jVersion}\"\n    \n    testImplementation 'junit:junit:4.12'\n}\n\ngretty {\n    httpPort = 8080\n    contextPath = 'spring.example'\n}\n```\n\n## Java\n\n### UserService.java\n```java\npublic interface UserService {\n    public List<User> getUsers();\n}\n```\n\n### UserServiceImpl.java\n```java\n@Service\npublic class UserServiceImpl implements UserService {\n\n    @Autowired\n    private UserRepository userRepository;\n\n    @Override\n    public List<User> getUsers() {\n        return userRepository.findAll();\n    }\n\t\n}\n```\n\n### UserAspect.java\n今天的主角出現了，文章開頭就介紹許多關於AOP的術語與觀念，這邊有看到@Before、@After，這兩個就是Advice通知類型，在這個Advice後面大家可以看到execution以及指定類別、方法，這邊就是Pointcut。\n```java\n@Aspect\npublic class UserAspect {\n\t\n\tprivate static Logger logger = LogManager.getLogger(UserAspect.class);\n\t\n\t@Before(\"execution(* com.spring.example.service.UserService.getUsers(..))\")\n\tpublic void logBeforeV1(JoinPoint joinPoint) {\n\t\tlogger.info(\"UserAspect.logBeforeV1() : \" + joinPoint.getSignature().getName());\n\t}\n\n\t@Before(\"execution(* com.spring.example.service.UserService.*(..))\")\n\tpublic void logBeforeV2(JoinPoint joinPoint) {\n\t\tlogger.info(\"UserAspect.logBeforeV2() : \" + joinPoint.getSignature().getName());\n\t}\n\n\t@After(\"execution(* com.spring.example.service.UserService.getUsers(..))\")\n\tpublic void logAfterV1(JoinPoint joinPoint) {\n\t\tlogger.info(\"UserAspect.logAfterV1() : \" + joinPoint.getSignature().getName());\n\t}\n\n\t@After(\"execution(* com.spring.example.service.UserService.*(..))\")\n\tpublic void logAfterV2(JoinPoint joinPoint) {\n\t\tlogger.info(\"UserAspect.logAfterV2() : \" + joinPoint.getSignature().getName());\n\t}\n\n}\n```\n\n### UserController.java\n```java\n@RestController\n@RequestMapping(\"/users\")\npublic class UserController {\n\n    @Autowired\n    private UserService userService;\n\n    @RequestMapping(method = RequestMethod.GET)\n    public List<User> getUsers() {\n        return userService.getUsers();\n    }\n\n}\n```\n\n### AspectConfig.java\n1. @Configuration 代表這是一個SpringConfig，在運行時會自動載入。\n2. @EnableAspectJAutoProxy 開啟讓Aspect自動代理。\n```java\n@Configuration\n@EnableAspectJAutoProxy\npublic class AspectConfig {\n\n    @Bean\n    public UserAspect userAspect() {\n        return new UserAspect();\n    }\n\t\n}\n```\n\n## Console View\n接下來我們於瀏覽器中輸入 http://localhost:8080/spring.example/users 即可於Console看到下面的畫面\n<img src=\"/2018/09/01/SpringMVC-猴子也學不會的系列文-3/console.view.png\" width=\"600\">\n\n# Reference\n## [AOP 觀念與術語](https://openhome.cc/Gossip/SpringGossip/AOPConcept.html)   \n## [Aspect Oriented Programming with Spring](https://docs.spring.io/spring/docs/current/spring-framework-reference/html/aop.html)\n## [Spring 实践：AOP](http://www.importnew.com/19041.html)","slug":"SpringMVC-猴子也學不會的系列文-3","published":1,"updated":"2018-09-01T13:21:59.311Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0rz001askvc40yg098g","content":"<h1 id=\"What-is-AOP\"><a href=\"#What-is-AOP\" class=\"headerlink\" title=\"What is AOP ?\"></a>What is AOP ?</h1><p>AOP只是一種概念，因此許多人會覺得聽起來非常抽象，很難理解它的意思，原先我們使用OOP時，會發現我們都是由上到下的完成一個流程，但AOP卻會Cross-cutting concern，將整個流程橫切，如安全 （Security）檢查、交易（Transaction）等系統層面的服務（Service），在一些應用程式之中常被見到安插至各個物件的處理流程之 中，這些動作在AOP的術語中被稱之為Cross-cutting concerns。</p>\n<h2 id=\"AOP-concepts-概念\"><a href=\"#AOP-concepts-概念\" class=\"headerlink\" title=\"AOP concepts(概念)\"></a>AOP concepts(概念)</h2><h3 id=\"Aspect\"><a href=\"#Aspect\" class=\"headerlink\" title=\"Aspect\"></a>Aspect</h3><p>Aspect最大的作用即是收集各商務物件中的crosscutting concerns。在Spring中除了使用XML設定方式，也建議可以使用Annotation方式進行開發，會較於簡單。</p>\n<h3 id=\"Joinpoint\"><a href=\"#Joinpoint\" class=\"headerlink\" title=\"Joinpoint\"></a>Joinpoint</h3><p>Aspect在應用程式執行時加入商務流程的點或時機稱之為Joinpoint，被呼叫的時機有可能在某個方法的前面(@before)或後面(@after)，然而Joinpoint還可以讓我們取到傳入該流程的參數以及結果，也能夠攔截例外處理。</p>\n<h3 id=\"Advice\"><a href=\"#Advice\" class=\"headerlink\" title=\"Advice\"></a>Advice</h3><p>顧名思義，Advice將會處理有使用“around”、“before”和“after”等不同類型的通知，這部分後面看程式碼會較於清楚。</p>\n<h3 id=\"Pointcut\"><a href=\"#Pointcut\" class=\"headerlink\" title=\"Pointcut\"></a>Pointcut</h3><p>這部分可以看成，對於哪一個class的某個method進行關聯的動作，讓Advice可以知道我們要從哪個method進行通知處理。</p>\n<h3 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h3><p>這不要翻譯成介紹，稱之為引入較為適當，在Java很不幸的我們無法動態的修改已編譯過的類別，但是Introduction卻可以讓你動態為這個以編譯過的類別進行新增功能等動作，確實是滿驚人的，不過我沒有試過，有興趣的大大歡迎試試看。</p>\n<h3 id=\"Target-object\"><a href=\"#Target-object\" class=\"headerlink\" title=\"Target object\"></a>Target object</h3><p>一個Advice被應用的對象或目標物件，如果直接使用Target Object進行撰寫橫切點等程式碼，會發現使用這種方式進行的crosscutting concerns都是需要自己設定ProxyBean，這實在是非常麻煩，但若使用Aspect則可以達到自動代理的機制。</p>\n<h3 id=\"AOP-proxy\"><a href=\"#AOP-proxy\" class=\"headerlink\" title=\"AOP proxy\"></a>AOP proxy</h3><p>AOP框架創建的對象，用來實現Aspect。然而Spring AOP是使用動態代理的方式進行。然後代理的理解可以看看這個從<a href=\"https://openhome.cc/Gossip/SpringGossip/FromProxyToAOP.html\" target=\"_blank\" rel=\"noopener\">代理機制初探 AOP</a>，這邊有個簡單的小程式讓大快速理解代理機制。</p>\n<h3 id=\"Weaving\"><a href=\"#Weaving\" class=\"headerlink\" title=\"Weaving\"></a>Weaving</h3><p>Advice被應用到物件上的過程稱為Weaving，在AOP中縫合的方式有幾個時間點：編譯時期（Compile time）、類別載入時期（Classload time）、執行時期（Runtime）。(取自於:<a href=\"https://openhome.cc/Gossip/SpringGossip/AOPConcept.html\" target=\"_blank\" rel=\"noopener\">AOP 觀念與術語</a>)</p>\n<h2 id=\"Advice-通知的類型\"><a href=\"#Advice-通知的類型\" class=\"headerlink\" title=\"Advice 通知的類型\"></a>Advice 通知的類型</h2><h3 id=\"Before-advice\"><a href=\"#Before-advice\" class=\"headerlink\" title=\"@Before advice\"></a>@Before advice</h3><p>在某連接點之前執行的通知，但不能令Join point停止執行，除非發生異常。</p>\n<h3 id=\"After-return-advice\"><a href=\"#After-return-advice\" class=\"headerlink\" title=\"@After return advice\"></a>@After return advice</h3><p>在某個接點執行成功，並且返回值得時候觸發。</p>\n<h3 id=\"After-throwing-advice\"><a href=\"#After-throwing-advice\" class=\"headerlink\" title=\"@After throwing advice\"></a>@After throwing advice</h3><p>在方法拋出異常退出時執行的通知。</p>\n<h3 id=\"After-final-advice\"><a href=\"#After-final-advice\" class=\"headerlink\" title=\"@After(final) advice\"></a>@After(final) advice</h3><p>某個接點退出的時候執行，不管接點是否異常。</p>\n<h3 id=\"Around-advice\"><a href=\"#Around-advice\" class=\"headerlink\" title=\"@Around advice\"></a>@Around advice</h3><p>這個功能算是滿常用的，上述的通知類型都會執行。</p>\n<h1 id=\"Get-Started\"><a href=\"#Get-Started\" class=\"headerlink\" title=\"Get Started\"></a>Get Started</h1><h2 id=\"目錄\"><a href=\"#目錄\" class=\"headerlink\" title=\"目錄\"></a>目錄</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├─build.gradle</span><br><span class=\"line\">└─src</span><br><span class=\"line\">    ├─main</span><br><span class=\"line\">    │  ├─java</span><br><span class=\"line\">    │  │  └─com</span><br><span class=\"line\">    │  │      └─spring</span><br><span class=\"line\">    │  │          └─example</span><br><span class=\"line\">    │  │              ├─aspect</span><br><span class=\"line\">    │  │              │  └─UserAspect.java</span><br><span class=\"line\">    │  │              ├─config</span><br><span class=\"line\">    │  │              │  ├─AspectConfig.java</span><br><span class=\"line\">    │  │              │  ├─PersistenceJpaConfig.java</span><br><span class=\"line\">    │  │              │  ├─WebConfiguration.java</span><br><span class=\"line\">    │  │              │  └─WebServletInitializer.java</span><br><span class=\"line\">    │  │              ├─controller</span><br><span class=\"line\">    │  │              │  ├─HomeController.java</span><br><span class=\"line\">    │  │              │  └─UserController.java</span><br><span class=\"line\">    │  │              ├─entity</span><br><span class=\"line\">    │  │              │  └─User.java    </span><br><span class=\"line\">    │  │              ├─repository</span><br><span class=\"line\">    │  │              │  └─UserRepository.java</span><br><span class=\"line\">    │  │              └─service</span><br><span class=\"line\">    │  │                 ├─impl</span><br><span class=\"line\">    │  │                 │  └─UserServiceImpl.java</span><br><span class=\"line\">    │  │                 └─UserService.java</span><br><span class=\"line\">    │  ├─resources</span><br><span class=\"line\">    │  │  └─log4j2.xml</span><br><span class=\"line\">    |  └─webapp</span><br><span class=\"line\">    |     └─WEB-INF</span><br><span class=\"line\">    |          └─views</span><br><span class=\"line\">    |             └─home.jsp</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gradle\"><a href=\"#Gradle\" class=\"headerlink\" title=\"Gradle\"></a>Gradle</h2><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'java'</span></span><br><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'war'</span></span><br><span class=\"line\">apply <span class=\"string\">from:</span> <span class=\"string\">'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'</span></span><br><span class=\"line\"></span><br><span class=\"line\">repositories &#123;</span><br><span class=\"line\">    mavenCentral()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Spring</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> springVersion = <span class=\"string\">'5.0.1.RELEASE'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.springframework'</span>, <span class=\"string\">name:</span> <span class=\"string\">'spring-webmvc'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;springVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.springframework'</span>, <span class=\"string\">name:</span> <span class=\"string\">'spring-orm'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;springVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.springframework'</span>, <span class=\"string\">name:</span> <span class=\"string\">'spring-aspects'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;springVersion&#125;\"</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'javax.servlet'</span>, <span class=\"string\">name:</span> <span class=\"string\">'jstl'</span>, <span class=\"string\">version:</span> <span class=\"string\">'1.2'</span></span><br><span class=\"line\">    providedCompile <span class=\"string\">'javax.servlet:servlet-api:2.5'</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">def</span> springData = <span class=\"string\">'2.0.0.RELEASE'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.springframework.data'</span>, <span class=\"string\">name:</span> <span class=\"string\">'spring-data-jpa'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;springData&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//DBCP (Connection Pool)</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.commons'</span>, <span class=\"string\">name:</span> <span class=\"string\">'commons-dbcp2'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"2.0\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//Hibernate</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> hibernateVersion = <span class=\"string\">'5.2.10.Final'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.hibernate'</span>, <span class=\"string\">name:</span> <span class=\"string\">'hibernate-core'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;hibernateVersion&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> sqlVersion = <span class=\"string\">'2.2.0'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.mariadb.jdbc'</span>, <span class=\"string\">name:</span> <span class=\"string\">'mariadb-java-client'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;sqlVersion&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> jacksonCoreVersion = <span class=\"string\">'2.9.4'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'com.fasterxml.jackson.core'</span>, <span class=\"string\">name:</span> <span class=\"string\">'jackson-core'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;jacksonCoreVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'com.fasterxml.jackson.core'</span>, <span class=\"string\">name:</span> <span class=\"string\">'jackson-databind'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;jacksonCoreVersion&#125;\"</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// Log4j2</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> log4jVersion = <span class=\"string\">'2.8.2'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-core'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-api'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-jcl'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    testImplementation <span class=\"string\">'junit:junit:4.12'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">gretty &#123;</span><br><span class=\"line\">    httpPort = <span class=\"number\">8080</span></span><br><span class=\"line\">    contextPath = <span class=\"string\">'spring.example'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><h3 id=\"UserService-java\"><a href=\"#UserService-java\" class=\"headerlink\" title=\"UserService.java\"></a>UserService.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">UserService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;User&gt; <span class=\"title\">getUsers</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"UserServiceImpl-java\"><a href=\"#UserServiceImpl-java\" class=\"headerlink\" title=\"UserServiceImpl.java\"></a>UserServiceImpl.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserRepository userRepository;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;User&gt; <span class=\"title\">getUsers</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userRepository.findAll();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"UserAspect-java\"><a href=\"#UserAspect-java\" class=\"headerlink\" title=\"UserAspect.java\"></a>UserAspect.java</h3><p>今天的主角出現了，文章開頭就介紹許多關於AOP的術語與觀念，這邊有看到@Before、@After，這兩個就是Advice通知類型，在這個Advice後面大家可以看到execution以及指定類別、方法，這邊就是Pointcut。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserAspect</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Logger logger = LogManager.getLogger(UserAspect.class);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"meta\">@Before</span>(<span class=\"string\">\"execution(* com.spring.example.service.UserService.getUsers(..))\"</span>)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">logBeforeV1</span><span class=\"params\">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class=\"line\">\t\tlogger.info(<span class=\"string\">\"UserAspect.logBeforeV1() : \"</span> + joinPoint.getSignature().getName());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Before</span>(<span class=\"string\">\"execution(* com.spring.example.service.UserService.*(..))\"</span>)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">logBeforeV2</span><span class=\"params\">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class=\"line\">\t\tlogger.info(<span class=\"string\">\"UserAspect.logBeforeV2() : \"</span> + joinPoint.getSignature().getName());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@After</span>(<span class=\"string\">\"execution(* com.spring.example.service.UserService.getUsers(..))\"</span>)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">logAfterV1</span><span class=\"params\">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class=\"line\">\t\tlogger.info(<span class=\"string\">\"UserAspect.logAfterV1() : \"</span> + joinPoint.getSignature().getName());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@After</span>(<span class=\"string\">\"execution(* com.spring.example.service.UserService.*(..))\"</span>)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">logAfterV2</span><span class=\"params\">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class=\"line\">\t\tlogger.info(<span class=\"string\">\"UserAspect.logAfterV2() : \"</span> + joinPoint.getSignature().getName());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"UserController-java\"><a href=\"#UserController-java\" class=\"headerlink\" title=\"UserController.java\"></a>UserController.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/users\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserService userService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(method = RequestMethod.GET)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;User&gt; <span class=\"title\">getUsers</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userService.getUsers();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"AspectConfig-java\"><a href=\"#AspectConfig-java\" class=\"headerlink\" title=\"AspectConfig.java\"></a>AspectConfig.java</h3><ol>\n<li>@Configuration 代表這是一個SpringConfig，在運行時會自動載入。</li>\n<li>@EnableAspectJAutoProxy 開啟讓Aspect自動代理。<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAspectJAutoProxy</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AspectConfig</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> UserAspect <span class=\"title\">userAspect</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> UserAspect();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"Console-View\"><a href=\"#Console-View\" class=\"headerlink\" title=\"Console View\"></a>Console View</h2><p>接下來我們於瀏覽器中輸入 <a href=\"http://localhost:8080/spring.example/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/spring.example/users</a> 即可於Console看到下面的畫面<br><img src=\"/2018/09/01/SpringMVC-猴子也學不會的系列文-3/console.view.png\" width=\"600\"></p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><h2 id=\"AOP-觀念與術語\"><a href=\"#AOP-觀念與術語\" class=\"headerlink\" title=\"AOP 觀念與術語\"></a><a href=\"https://openhome.cc/Gossip/SpringGossip/AOPConcept.html\" target=\"_blank\" rel=\"noopener\">AOP 觀念與術語</a></h2><h2 id=\"Aspect-Oriented-Programming-with-Spring\"><a href=\"#Aspect-Oriented-Programming-with-Spring\" class=\"headerlink\" title=\"Aspect Oriented Programming with Spring\"></a><a href=\"https://docs.spring.io/spring/docs/current/spring-framework-reference/html/aop.html\" target=\"_blank\" rel=\"noopener\">Aspect Oriented Programming with Spring</a></h2><h2 id=\"Spring-实践：AOP\"><a href=\"#Spring-实践：AOP\" class=\"headerlink\" title=\"Spring 实践：AOP\"></a><a href=\"http://www.importnew.com/19041.html\" target=\"_blank\" rel=\"noopener\">Spring 实践：AOP</a></h2>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"What-is-AOP\"><a href=\"#What-is-AOP\" class=\"headerlink\" title=\"What is AOP ?\"></a>What is AOP ?</h1><p>AOP只是一種概念，因此許多人會覺得聽起來非常抽象，很難理解它的意思，原先我們使用OOP時，會發現我們都是由上到下的完成一個流程，但AOP卻會Cross-cutting concern，將整個流程橫切，如安全 （Security）檢查、交易（Transaction）等系統層面的服務（Service），在一些應用程式之中常被見到安插至各個物件的處理流程之 中，這些動作在AOP的術語中被稱之為Cross-cutting concerns。</p>\n<h2 id=\"AOP-concepts-概念\"><a href=\"#AOP-concepts-概念\" class=\"headerlink\" title=\"AOP concepts(概念)\"></a>AOP concepts(概念)</h2><h3 id=\"Aspect\"><a href=\"#Aspect\" class=\"headerlink\" title=\"Aspect\"></a>Aspect</h3><p>Aspect最大的作用即是收集各商務物件中的crosscutting concerns。在Spring中除了使用XML設定方式，也建議可以使用Annotation方式進行開發，會較於簡單。</p>\n<h3 id=\"Joinpoint\"><a href=\"#Joinpoint\" class=\"headerlink\" title=\"Joinpoint\"></a>Joinpoint</h3><p>Aspect在應用程式執行時加入商務流程的點或時機稱之為Joinpoint，被呼叫的時機有可能在某個方法的前面(@before)或後面(@after)，然而Joinpoint還可以讓我們取到傳入該流程的參數以及結果，也能夠攔截例外處理。</p>\n<h3 id=\"Advice\"><a href=\"#Advice\" class=\"headerlink\" title=\"Advice\"></a>Advice</h3><p>顧名思義，Advice將會處理有使用“around”、“before”和“after”等不同類型的通知，這部分後面看程式碼會較於清楚。</p>\n<h3 id=\"Pointcut\"><a href=\"#Pointcut\" class=\"headerlink\" title=\"Pointcut\"></a>Pointcut</h3><p>這部分可以看成，對於哪一個class的某個method進行關聯的動作，讓Advice可以知道我們要從哪個method進行通知處理。</p>\n<h3 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h3><p>這不要翻譯成介紹，稱之為引入較為適當，在Java很不幸的我們無法動態的修改已編譯過的類別，但是Introduction卻可以讓你動態為這個以編譯過的類別進行新增功能等動作，確實是滿驚人的，不過我沒有試過，有興趣的大大歡迎試試看。</p>\n<h3 id=\"Target-object\"><a href=\"#Target-object\" class=\"headerlink\" title=\"Target object\"></a>Target object</h3><p>一個Advice被應用的對象或目標物件，如果直接使用Target Object進行撰寫橫切點等程式碼，會發現使用這種方式進行的crosscutting concerns都是需要自己設定ProxyBean，這實在是非常麻煩，但若使用Aspect則可以達到自動代理的機制。</p>\n<h3 id=\"AOP-proxy\"><a href=\"#AOP-proxy\" class=\"headerlink\" title=\"AOP proxy\"></a>AOP proxy</h3><p>AOP框架創建的對象，用來實現Aspect。然而Spring AOP是使用動態代理的方式進行。然後代理的理解可以看看這個從<a href=\"https://openhome.cc/Gossip/SpringGossip/FromProxyToAOP.html\" target=\"_blank\" rel=\"noopener\">代理機制初探 AOP</a>，這邊有個簡單的小程式讓大快速理解代理機制。</p>\n<h3 id=\"Weaving\"><a href=\"#Weaving\" class=\"headerlink\" title=\"Weaving\"></a>Weaving</h3><p>Advice被應用到物件上的過程稱為Weaving，在AOP中縫合的方式有幾個時間點：編譯時期（Compile time）、類別載入時期（Classload time）、執行時期（Runtime）。(取自於:<a href=\"https://openhome.cc/Gossip/SpringGossip/AOPConcept.html\" target=\"_blank\" rel=\"noopener\">AOP 觀念與術語</a>)</p>\n<h2 id=\"Advice-通知的類型\"><a href=\"#Advice-通知的類型\" class=\"headerlink\" title=\"Advice 通知的類型\"></a>Advice 通知的類型</h2><h3 id=\"Before-advice\"><a href=\"#Before-advice\" class=\"headerlink\" title=\"@Before advice\"></a>@Before advice</h3><p>在某連接點之前執行的通知，但不能令Join point停止執行，除非發生異常。</p>\n<h3 id=\"After-return-advice\"><a href=\"#After-return-advice\" class=\"headerlink\" title=\"@After return advice\"></a>@After return advice</h3><p>在某個接點執行成功，並且返回值得時候觸發。</p>\n<h3 id=\"After-throwing-advice\"><a href=\"#After-throwing-advice\" class=\"headerlink\" title=\"@After throwing advice\"></a>@After throwing advice</h3><p>在方法拋出異常退出時執行的通知。</p>\n<h3 id=\"After-final-advice\"><a href=\"#After-final-advice\" class=\"headerlink\" title=\"@After(final) advice\"></a>@After(final) advice</h3><p>某個接點退出的時候執行，不管接點是否異常。</p>\n<h3 id=\"Around-advice\"><a href=\"#Around-advice\" class=\"headerlink\" title=\"@Around advice\"></a>@Around advice</h3><p>這個功能算是滿常用的，上述的通知類型都會執行。</p>\n<h1 id=\"Get-Started\"><a href=\"#Get-Started\" class=\"headerlink\" title=\"Get Started\"></a>Get Started</h1><h2 id=\"目錄\"><a href=\"#目錄\" class=\"headerlink\" title=\"目錄\"></a>目錄</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├─build.gradle</span><br><span class=\"line\">└─src</span><br><span class=\"line\">    ├─main</span><br><span class=\"line\">    │  ├─java</span><br><span class=\"line\">    │  │  └─com</span><br><span class=\"line\">    │  │      └─spring</span><br><span class=\"line\">    │  │          └─example</span><br><span class=\"line\">    │  │              ├─aspect</span><br><span class=\"line\">    │  │              │  └─UserAspect.java</span><br><span class=\"line\">    │  │              ├─config</span><br><span class=\"line\">    │  │              │  ├─AspectConfig.java</span><br><span class=\"line\">    │  │              │  ├─PersistenceJpaConfig.java</span><br><span class=\"line\">    │  │              │  ├─WebConfiguration.java</span><br><span class=\"line\">    │  │              │  └─WebServletInitializer.java</span><br><span class=\"line\">    │  │              ├─controller</span><br><span class=\"line\">    │  │              │  ├─HomeController.java</span><br><span class=\"line\">    │  │              │  └─UserController.java</span><br><span class=\"line\">    │  │              ├─entity</span><br><span class=\"line\">    │  │              │  └─User.java    </span><br><span class=\"line\">    │  │              ├─repository</span><br><span class=\"line\">    │  │              │  └─UserRepository.java</span><br><span class=\"line\">    │  │              └─service</span><br><span class=\"line\">    │  │                 ├─impl</span><br><span class=\"line\">    │  │                 │  └─UserServiceImpl.java</span><br><span class=\"line\">    │  │                 └─UserService.java</span><br><span class=\"line\">    │  ├─resources</span><br><span class=\"line\">    │  │  └─log4j2.xml</span><br><span class=\"line\">    |  └─webapp</span><br><span class=\"line\">    |     └─WEB-INF</span><br><span class=\"line\">    |          └─views</span><br><span class=\"line\">    |             └─home.jsp</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gradle\"><a href=\"#Gradle\" class=\"headerlink\" title=\"Gradle\"></a>Gradle</h2><figure class=\"highlight groovy\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'java'</span></span><br><span class=\"line\">apply <span class=\"string\">plugin:</span> <span class=\"string\">'war'</span></span><br><span class=\"line\">apply <span class=\"string\">from:</span> <span class=\"string\">'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'</span></span><br><span class=\"line\"></span><br><span class=\"line\">repositories &#123;</span><br><span class=\"line\">    mavenCentral()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Spring</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> springVersion = <span class=\"string\">'5.0.1.RELEASE'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.springframework'</span>, <span class=\"string\">name:</span> <span class=\"string\">'spring-webmvc'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;springVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.springframework'</span>, <span class=\"string\">name:</span> <span class=\"string\">'spring-orm'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;springVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.springframework'</span>, <span class=\"string\">name:</span> <span class=\"string\">'spring-aspects'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;springVersion&#125;\"</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'javax.servlet'</span>, <span class=\"string\">name:</span> <span class=\"string\">'jstl'</span>, <span class=\"string\">version:</span> <span class=\"string\">'1.2'</span></span><br><span class=\"line\">    providedCompile <span class=\"string\">'javax.servlet:servlet-api:2.5'</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">def</span> springData = <span class=\"string\">'2.0.0.RELEASE'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.springframework.data'</span>, <span class=\"string\">name:</span> <span class=\"string\">'spring-data-jpa'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;springData&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//DBCP (Connection Pool)</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.commons'</span>, <span class=\"string\">name:</span> <span class=\"string\">'commons-dbcp2'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"2.0\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//Hibernate</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> hibernateVersion = <span class=\"string\">'5.2.10.Final'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.hibernate'</span>, <span class=\"string\">name:</span> <span class=\"string\">'hibernate-core'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;hibernateVersion&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> sqlVersion = <span class=\"string\">'2.2.0'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.mariadb.jdbc'</span>, <span class=\"string\">name:</span> <span class=\"string\">'mariadb-java-client'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;sqlVersion&#125;\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> jacksonCoreVersion = <span class=\"string\">'2.9.4'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'com.fasterxml.jackson.core'</span>, <span class=\"string\">name:</span> <span class=\"string\">'jackson-core'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;jacksonCoreVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'com.fasterxml.jackson.core'</span>, <span class=\"string\">name:</span> <span class=\"string\">'jackson-databind'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;jacksonCoreVersion&#125;\"</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// Log4j2</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> log4jVersion = <span class=\"string\">'2.8.2'</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-core'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-api'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\">    compile <span class=\"string\">group:</span> <span class=\"string\">'org.apache.logging.log4j'</span>, <span class=\"string\">name:</span> <span class=\"string\">'log4j-jcl'</span>, <span class=\"string\">version:</span> <span class=\"string\">\"$&#123;log4jVersion&#125;\"</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    testImplementation <span class=\"string\">'junit:junit:4.12'</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">gretty &#123;</span><br><span class=\"line\">    httpPort = <span class=\"number\">8080</span></span><br><span class=\"line\">    contextPath = <span class=\"string\">'spring.example'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><h3 id=\"UserService-java\"><a href=\"#UserService-java\" class=\"headerlink\" title=\"UserService.java\"></a>UserService.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">UserService</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;User&gt; <span class=\"title\">getUsers</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"UserServiceImpl-java\"><a href=\"#UserServiceImpl-java\" class=\"headerlink\" title=\"UserServiceImpl.java\"></a>UserServiceImpl.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Service</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">UserService</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserRepository userRepository;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;User&gt; <span class=\"title\">getUsers</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userRepository.findAll();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"UserAspect-java\"><a href=\"#UserAspect-java\" class=\"headerlink\" title=\"UserAspect.java\"></a>UserAspect.java</h3><p>今天的主角出現了，文章開頭就介紹許多關於AOP的術語與觀念，這邊有看到@Before、@After，這兩個就是Advice通知類型，在這個Advice後面大家可以看到execution以及指定類別、方法，這邊就是Pointcut。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Aspect</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserAspect</span> </span>&#123;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Logger logger = LogManager.getLogger(UserAspect.class);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"meta\">@Before</span>(<span class=\"string\">\"execution(* com.spring.example.service.UserService.getUsers(..))\"</span>)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">logBeforeV1</span><span class=\"params\">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class=\"line\">\t\tlogger.info(<span class=\"string\">\"UserAspect.logBeforeV1() : \"</span> + joinPoint.getSignature().getName());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@Before</span>(<span class=\"string\">\"execution(* com.spring.example.service.UserService.*(..))\"</span>)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">logBeforeV2</span><span class=\"params\">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class=\"line\">\t\tlogger.info(<span class=\"string\">\"UserAspect.logBeforeV2() : \"</span> + joinPoint.getSignature().getName());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@After</span>(<span class=\"string\">\"execution(* com.spring.example.service.UserService.getUsers(..))\"</span>)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">logAfterV1</span><span class=\"params\">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class=\"line\">\t\tlogger.info(<span class=\"string\">\"UserAspect.logAfterV1() : \"</span> + joinPoint.getSignature().getName());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"meta\">@After</span>(<span class=\"string\">\"execution(* com.spring.example.service.UserService.*(..))\"</span>)</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">logAfterV2</span><span class=\"params\">(JoinPoint joinPoint)</span> </span>&#123;</span><br><span class=\"line\">\t\tlogger.info(<span class=\"string\">\"UserAspect.logAfterV2() : \"</span> + joinPoint.getSignature().getName());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"UserController-java\"><a href=\"#UserController-java\" class=\"headerlink\" title=\"UserController.java\"></a>UserController.java</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping</span>(<span class=\"string\">\"/users\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserController</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> UserService userService;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@RequestMapping</span>(method = RequestMethod.GET)</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> List&lt;User&gt; <span class=\"title\">getUsers</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> userService.getUsers();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"AspectConfig-java\"><a href=\"#AspectConfig-java\" class=\"headerlink\" title=\"AspectConfig.java\"></a>AspectConfig.java</h3><ol>\n<li>@Configuration 代表這是一個SpringConfig，在運行時會自動載入。</li>\n<li>@EnableAspectJAutoProxy 開啟讓Aspect自動代理。<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"meta\">@EnableAspectJAutoProxy</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">AspectConfig</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> UserAspect <span class=\"title\">userAspect</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> UserAspect();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"Console-View\"><a href=\"#Console-View\" class=\"headerlink\" title=\"Console View\"></a>Console View</h2><p>接下來我們於瀏覽器中輸入 <a href=\"http://localhost:8080/spring.example/users\" target=\"_blank\" rel=\"noopener\">http://localhost:8080/spring.example/users</a> 即可於Console看到下面的畫面<br><img src=\"/2018/09/01/SpringMVC-猴子也學不會的系列文-3/console.view.png\" width=\"600\"></p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><h2 id=\"AOP-觀念與術語\"><a href=\"#AOP-觀念與術語\" class=\"headerlink\" title=\"AOP 觀念與術語\"></a><a href=\"https://openhome.cc/Gossip/SpringGossip/AOPConcept.html\" target=\"_blank\" rel=\"noopener\">AOP 觀念與術語</a></h2><h2 id=\"Aspect-Oriented-Programming-with-Spring\"><a href=\"#Aspect-Oriented-Programming-with-Spring\" class=\"headerlink\" title=\"Aspect Oriented Programming with Spring\"></a><a href=\"https://docs.spring.io/spring/docs/current/spring-framework-reference/html/aop.html\" target=\"_blank\" rel=\"noopener\">Aspect Oriented Programming with Spring</a></h2><h2 id=\"Spring-实践：AOP\"><a href=\"#Spring-实践：AOP\" class=\"headerlink\" title=\"Spring 实践：AOP\"></a><a href=\"http://www.importnew.com/19041.html\" target=\"_blank\" rel=\"noopener\">Spring 实践：AOP</a></h2>"},{"title":"從Logdown搬過來","date":"2018-08-17T01:42:02.000Z","_content":"\n# Logdown還好嗎?\n最近我也很吃驚，為什麼Logdown無法登入，所以我要搬家啦!!! 一起吃香蕉。","source":"_posts/從Logdown搬過來.md","raw":"---\ntitle: 從Logdown搬過來\ndate: 2018-08-17 09:42:02\ntags: 生活\n---\n\n# Logdown還好嗎?\n最近我也很吃驚，為什麼Logdown無法登入，所以我要搬家啦!!! 一起吃香蕉。","slug":"從Logdown搬過來","published":1,"updated":"2018-08-21T12:13:45.937Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0s2001dskvcc4pv5d38","content":"<h1 id=\"Logdown還好嗎\"><a href=\"#Logdown還好嗎\" class=\"headerlink\" title=\"Logdown還好嗎?\"></a>Logdown還好嗎?</h1><p>最近我也很吃驚，為什麼Logdown無法登入，所以我要搬家啦!!! 一起吃香蕉。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Logdown還好嗎\"><a href=\"#Logdown還好嗎\" class=\"headerlink\" title=\"Logdown還好嗎?\"></a>Logdown還好嗎?</h1><p>最近我也很吃驚，為什麼Logdown無法登入，所以我要搬家啦!!! 一起吃香蕉。</p>\n"},{"title":"Nginx + Tomcat Load Balance","date":"2018-01-20T15:29:43.000Z","_content":"\n今天要來給大家介紹Nginx與Tomcat如何做Load Balance呢?\n\n在這邊大家一定會想到Apache，沒錯! Apache也能使用proxy、mod_jk達到相同效果，但Apache當Load Balance Server能力並沒有Nginx還要快。那麼說Apache功能就沒了嗎?別忘記Apache功能方面比Nginx多，若今天只需要一台Load Balance Server的話，那麼可以考慮Nginx。\n\n老實說這也是我第一次使用Nginx，單由設定proxy功能來看，Nginx相對簡單呢!話不多說，來看看我的步驟。\n\n# Nginx Setting\n\n## Step 1. Install Nginx\n```\nyum install epel-release\nyum install nginx\n```\n\n## Step 2. Open Firewall\n基本上linux 0~1023的埠號都是有定義的，如下顯示的http與https分別代表80、443等兩個埠號。\n```\nfirewall-cmd --permanent --zone=public --add-service=http \nfirewall-cmd --permanent --zone=public --add-service=https\nfirewall-cmd --reload\n```\n\n## Step 3. Start Nginx\n```\nsystemctl enable nginx\nsystemctl start nginx\n```\n\n## Step 4. Setting nginx.conf\n我們可以修改/etc/nginx/nginx.conf設定，來達到Load Balance效果，基本上大家只需要專注在upstream以及server這兩個標籤的設定即可。\n```\n# For more information on configuration, see:\n#   * Official English Documentation: http://nginx.org/en/docs/\n#   * Official Russian Documentation: http://nginx.org/ru/docs/\n\nuser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log;\npid /run/nginx.pid;\n\n# Load dynamic modules. See /usr/share/nginx/README.dynamic.\ninclude /usr/share/nginx/modules/*.conf;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 2048;\n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    # Load modular configuration files from the /etc/nginx/conf.d directory.\n    # See http://nginx.org/en/docs/ngx_core_module.html#include\n    # for more information.\n    include /etc/nginx/conf.d/*.conf;\n    \n    upstream cluster_server {\n        server 192.168.56.102:8080;\n            server 192.168.56.103:8080;\n    }\n\n    server {\n        listen       80 default_server;\n        listen       [::]:80 default_server;\n        server_name  tomcat.cluster.com;\n        root         /usr/share/nginx/html;\n\n        # Load configuration files for the default server block.\n        include /etc/nginx/default.d/*.conf;\n\n        location / {\n        proxy_pass http://cluster_server;\n        }\n\n        error_page 404 /404.html;\n            location = /40x.html {\n        }\n\n        error_page 500 502 503 504 /50x.html;\n            location = /50x.html {\n        }\n    }\n}\n```\n\n## Step 5. Proxy Permission denied\n小弟我在執行過程中遇見這個問題，那麼解決方式只要使用以下指令，打開權限即可。\n```\nsetsebool -P httpd_can_network_connect 1\n```\n\n## Step 6. Restart Nginx\n```\nsystemctl restart nginx\n```\n\n# Tomcat Setting\n我沒有設定Tomcat呢...我只是要做最簡單的Load Balance，因此Tomcat不理他...然後Tomcat安裝方式網路上有很多!! XD\n\n# Reference\n## [How To Install Nginx on CentOS 7](https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-centos-7)\n## [Using nginx as HTTP load balancer](http://nginx.org/en/docs/http/load_balancing.html)\n## [Nginx與Apache比較](https://www.hellosanta.com.tw/Drupal%E7%B6%B2%E7%AB%99%E8%A8%AD%E8%A8%88/nginx%E8%88%87apache%E6%AF%94%E8%BC%83)\n## [(13: Permission denied) while connecting to upstream:[nginx]](https://stackoverflow.com/questions/23948527/13-permission-denied-while-connecting-to-upstreamnginx)","source":"_posts/Nginx-Tomcat-Load-Balance.md","raw":"---\ntitle: Nginx + Tomcat Load Balance\ndate: 2018-01-20 23:29:43\ntags:\n    - Nginx\n    - Tomcat\n---\n\n今天要來給大家介紹Nginx與Tomcat如何做Load Balance呢?\n\n在這邊大家一定會想到Apache，沒錯! Apache也能使用proxy、mod_jk達到相同效果，但Apache當Load Balance Server能力並沒有Nginx還要快。那麼說Apache功能就沒了嗎?別忘記Apache功能方面比Nginx多，若今天只需要一台Load Balance Server的話，那麼可以考慮Nginx。\n\n老實說這也是我第一次使用Nginx，單由設定proxy功能來看，Nginx相對簡單呢!話不多說，來看看我的步驟。\n\n# Nginx Setting\n\n## Step 1. Install Nginx\n```\nyum install epel-release\nyum install nginx\n```\n\n## Step 2. Open Firewall\n基本上linux 0~1023的埠號都是有定義的，如下顯示的http與https分別代表80、443等兩個埠號。\n```\nfirewall-cmd --permanent --zone=public --add-service=http \nfirewall-cmd --permanent --zone=public --add-service=https\nfirewall-cmd --reload\n```\n\n## Step 3. Start Nginx\n```\nsystemctl enable nginx\nsystemctl start nginx\n```\n\n## Step 4. Setting nginx.conf\n我們可以修改/etc/nginx/nginx.conf設定，來達到Load Balance效果，基本上大家只需要專注在upstream以及server這兩個標籤的設定即可。\n```\n# For more information on configuration, see:\n#   * Official English Documentation: http://nginx.org/en/docs/\n#   * Official Russian Documentation: http://nginx.org/ru/docs/\n\nuser nginx;\nworker_processes auto;\nerror_log /var/log/nginx/error.log;\npid /run/nginx.pid;\n\n# Load dynamic modules. See /usr/share/nginx/README.dynamic.\ninclude /usr/share/nginx/modules/*.conf;\n\nevents {\n    worker_connections 1024;\n}\n\nhttp {\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n\n    sendfile            on;\n    tcp_nopush          on;\n    tcp_nodelay         on;\n    keepalive_timeout   65;\n    types_hash_max_size 2048;\n\n    include             /etc/nginx/mime.types;\n    default_type        application/octet-stream;\n\n    # Load modular configuration files from the /etc/nginx/conf.d directory.\n    # See http://nginx.org/en/docs/ngx_core_module.html#include\n    # for more information.\n    include /etc/nginx/conf.d/*.conf;\n    \n    upstream cluster_server {\n        server 192.168.56.102:8080;\n            server 192.168.56.103:8080;\n    }\n\n    server {\n        listen       80 default_server;\n        listen       [::]:80 default_server;\n        server_name  tomcat.cluster.com;\n        root         /usr/share/nginx/html;\n\n        # Load configuration files for the default server block.\n        include /etc/nginx/default.d/*.conf;\n\n        location / {\n        proxy_pass http://cluster_server;\n        }\n\n        error_page 404 /404.html;\n            location = /40x.html {\n        }\n\n        error_page 500 502 503 504 /50x.html;\n            location = /50x.html {\n        }\n    }\n}\n```\n\n## Step 5. Proxy Permission denied\n小弟我在執行過程中遇見這個問題，那麼解決方式只要使用以下指令，打開權限即可。\n```\nsetsebool -P httpd_can_network_connect 1\n```\n\n## Step 6. Restart Nginx\n```\nsystemctl restart nginx\n```\n\n# Tomcat Setting\n我沒有設定Tomcat呢...我只是要做最簡單的Load Balance，因此Tomcat不理他...然後Tomcat安裝方式網路上有很多!! XD\n\n# Reference\n## [How To Install Nginx on CentOS 7](https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-centos-7)\n## [Using nginx as HTTP load balancer](http://nginx.org/en/docs/http/load_balancing.html)\n## [Nginx與Apache比較](https://www.hellosanta.com.tw/Drupal%E7%B6%B2%E7%AB%99%E8%A8%AD%E8%A8%88/nginx%E8%88%87apache%E6%AF%94%E8%BC%83)\n## [(13: Permission denied) while connecting to upstream:[nginx]](https://stackoverflow.com/questions/23948527/13-permission-denied-while-connecting-to-upstreamnginx)","slug":"Nginx-Tomcat-Load-Balance","published":1,"updated":"2018-08-21T13:34:22.663Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjljgj0yl001vskvcwnffipfj","content":"<p>今天要來給大家介紹Nginx與Tomcat如何做Load Balance呢?</p>\n<p>在這邊大家一定會想到Apache，沒錯! Apache也能使用proxy、mod_jk達到相同效果，但Apache當Load Balance Server能力並沒有Nginx還要快。那麼說Apache功能就沒了嗎?別忘記Apache功能方面比Nginx多，若今天只需要一台Load Balance Server的話，那麼可以考慮Nginx。</p>\n<p>老實說這也是我第一次使用Nginx，單由設定proxy功能來看，Nginx相對簡單呢!話不多說，來看看我的步驟。</p>\n<h1 id=\"Nginx-Setting\"><a href=\"#Nginx-Setting\" class=\"headerlink\" title=\"Nginx Setting\"></a>Nginx Setting</h1><h2 id=\"Step-1-Install-Nginx\"><a href=\"#Step-1-Install-Nginx\" class=\"headerlink\" title=\"Step 1. Install Nginx\"></a>Step 1. Install Nginx</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install epel-release</span><br><span class=\"line\">yum install nginx</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-2-Open-Firewall\"><a href=\"#Step-2-Open-Firewall\" class=\"headerlink\" title=\"Step 2. Open Firewall\"></a>Step 2. Open Firewall</h2><p>基本上linux 0~1023的埠號都是有定義的，如下顯示的http與https分別代表80、443等兩個埠號。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --permanent --zone=public --add-service=http </span><br><span class=\"line\">firewall-cmd --permanent --zone=public --add-service=https</span><br><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Step-3-Start-Nginx\"><a href=\"#Step-3-Start-Nginx\" class=\"headerlink\" title=\"Step 3. Start Nginx\"></a>Step 3. Start Nginx</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl enable nginx</span><br><span class=\"line\">systemctl start nginx</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-4-Setting-nginx-conf\"><a href=\"#Step-4-Setting-nginx-conf\" class=\"headerlink\" title=\"Step 4. Setting nginx.conf\"></a>Step 4. Setting nginx.conf</h2><p>我們可以修改/etc/nginx/nginx.conf設定，來達到Load Balance效果，基本上大家只需要專注在upstream以及server這兩個標籤的設定即可。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># For more information on configuration, see:</span><br><span class=\"line\">#   * Official English Documentation: http://nginx.org/en/docs/</span><br><span class=\"line\">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span><br><span class=\"line\"></span><br><span class=\"line\">user nginx;</span><br><span class=\"line\">worker_processes auto;</span><br><span class=\"line\">error_log /var/log/nginx/error.log;</span><br><span class=\"line\">pid /run/nginx.pid;</span><br><span class=\"line\"></span><br><span class=\"line\"># Load dynamic modules. See /usr/share/nginx/README.dynamic.</span><br><span class=\"line\">include /usr/share/nginx/modules/*.conf;</span><br><span class=\"line\"></span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">    worker_connections 1024;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class=\"line\">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class=\"line\">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">    access_log  /var/log/nginx/access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">    sendfile            on;</span><br><span class=\"line\">    tcp_nopush          on;</span><br><span class=\"line\">    tcp_nodelay         on;</span><br><span class=\"line\">    keepalive_timeout   65;</span><br><span class=\"line\">    types_hash_max_size 2048;</span><br><span class=\"line\"></span><br><span class=\"line\">    include             /etc/nginx/mime.types;</span><br><span class=\"line\">    default_type        application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">    # Load modular configuration files from the /etc/nginx/conf.d directory.</span><br><span class=\"line\">    # See http://nginx.org/en/docs/ngx_core_module.html#include</span><br><span class=\"line\">    # for more information.</span><br><span class=\"line\">    include /etc/nginx/conf.d/*.conf;</span><br><span class=\"line\">    </span><br><span class=\"line\">    upstream cluster_server &#123;</span><br><span class=\"line\">        server 192.168.56.102:8080;</span><br><span class=\"line\">            server 192.168.56.103:8080;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80 default_server;</span><br><span class=\"line\">        listen       [::]:80 default_server;</span><br><span class=\"line\">        server_name  tomcat.cluster.com;</span><br><span class=\"line\">        root         /usr/share/nginx/html;</span><br><span class=\"line\"></span><br><span class=\"line\">        # Load configuration files for the default server block.</span><br><span class=\"line\">        include /etc/nginx/default.d/*.conf;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">        proxy_pass http://cluster_server;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        error_page 404 /404.html;</span><br><span class=\"line\">            location = /40x.html &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        error_page 500 502 503 504 /50x.html;</span><br><span class=\"line\">            location = /50x.html &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Step-5-Proxy-Permission-denied\"><a href=\"#Step-5-Proxy-Permission-denied\" class=\"headerlink\" title=\"Step 5. Proxy Permission denied\"></a>Step 5. Proxy Permission denied</h2><p>小弟我在執行過程中遇見這個問題，那麼解決方式只要使用以下指令，打開權限即可。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setsebool -P httpd_can_network_connect 1</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Step-6-Restart-Nginx\"><a href=\"#Step-6-Restart-Nginx\" class=\"headerlink\" title=\"Step 6. Restart Nginx\"></a>Step 6. Restart Nginx</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart nginx</span><br></pre></td></tr></table></figure>\n<h1 id=\"Tomcat-Setting\"><a href=\"#Tomcat-Setting\" class=\"headerlink\" title=\"Tomcat Setting\"></a>Tomcat Setting</h1><p>我沒有設定Tomcat呢…我只是要做最簡單的Load Balance，因此Tomcat不理他…然後Tomcat安裝方式網路上有很多!! XD</p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><h2 id=\"How-To-Install-Nginx-on-CentOS-7\"><a href=\"#How-To-Install-Nginx-on-CentOS-7\" class=\"headerlink\" title=\"How To Install Nginx on CentOS 7\"></a><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-centos-7\" target=\"_blank\" rel=\"noopener\">How To Install Nginx on CentOS 7</a></h2><h2 id=\"Using-nginx-as-HTTP-load-balancer\"><a href=\"#Using-nginx-as-HTTP-load-balancer\" class=\"headerlink\" title=\"Using nginx as HTTP load balancer\"></a><a href=\"http://nginx.org/en/docs/http/load_balancing.html\" target=\"_blank\" rel=\"noopener\">Using nginx as HTTP load balancer</a></h2><h2 id=\"Nginx與Apache比較\"><a href=\"#Nginx與Apache比較\" class=\"headerlink\" title=\"Nginx與Apache比較\"></a><a href=\"https://www.hellosanta.com.tw/Drupal%E7%B6%B2%E7%AB%99%E8%A8%AD%E8%A8%88/nginx%E8%88%87apache%E6%AF%94%E8%BC%83\" target=\"_blank\" rel=\"noopener\">Nginx與Apache比較</a></h2><h2 id=\"13-Permission-denied-while-connecting-to-upstream-nginx\"><a href=\"#13-Permission-denied-while-connecting-to-upstream-nginx\" class=\"headerlink\" title=\"(13: Permission denied) while connecting to upstream:[nginx]\"></a><a href=\"https://stackoverflow.com/questions/23948527/13-permission-denied-while-connecting-to-upstreamnginx\" target=\"_blank\" rel=\"noopener\">(13: Permission denied) while connecting to upstream:[nginx]</a></h2>","site":{"data":{}},"excerpt":"","more":"<p>今天要來給大家介紹Nginx與Tomcat如何做Load Balance呢?</p>\n<p>在這邊大家一定會想到Apache，沒錯! Apache也能使用proxy、mod_jk達到相同效果，但Apache當Load Balance Server能力並沒有Nginx還要快。那麼說Apache功能就沒了嗎?別忘記Apache功能方面比Nginx多，若今天只需要一台Load Balance Server的話，那麼可以考慮Nginx。</p>\n<p>老實說這也是我第一次使用Nginx，單由設定proxy功能來看，Nginx相對簡單呢!話不多說，來看看我的步驟。</p>\n<h1 id=\"Nginx-Setting\"><a href=\"#Nginx-Setting\" class=\"headerlink\" title=\"Nginx Setting\"></a>Nginx Setting</h1><h2 id=\"Step-1-Install-Nginx\"><a href=\"#Step-1-Install-Nginx\" class=\"headerlink\" title=\"Step 1. Install Nginx\"></a>Step 1. Install Nginx</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install epel-release</span><br><span class=\"line\">yum install nginx</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-2-Open-Firewall\"><a href=\"#Step-2-Open-Firewall\" class=\"headerlink\" title=\"Step 2. Open Firewall\"></a>Step 2. Open Firewall</h2><p>基本上linux 0~1023的埠號都是有定義的，如下顯示的http與https分別代表80、443等兩個埠號。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --permanent --zone=public --add-service=http </span><br><span class=\"line\">firewall-cmd --permanent --zone=public --add-service=https</span><br><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Step-3-Start-Nginx\"><a href=\"#Step-3-Start-Nginx\" class=\"headerlink\" title=\"Step 3. Start Nginx\"></a>Step 3. Start Nginx</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl enable nginx</span><br><span class=\"line\">systemctl start nginx</span><br></pre></td></tr></table></figure>\n<h2 id=\"Step-4-Setting-nginx-conf\"><a href=\"#Step-4-Setting-nginx-conf\" class=\"headerlink\" title=\"Step 4. Setting nginx.conf\"></a>Step 4. Setting nginx.conf</h2><p>我們可以修改/etc/nginx/nginx.conf設定，來達到Load Balance效果，基本上大家只需要專注在upstream以及server這兩個標籤的設定即可。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># For more information on configuration, see:</span><br><span class=\"line\">#   * Official English Documentation: http://nginx.org/en/docs/</span><br><span class=\"line\">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span><br><span class=\"line\"></span><br><span class=\"line\">user nginx;</span><br><span class=\"line\">worker_processes auto;</span><br><span class=\"line\">error_log /var/log/nginx/error.log;</span><br><span class=\"line\">pid /run/nginx.pid;</span><br><span class=\"line\"></span><br><span class=\"line\"># Load dynamic modules. See /usr/share/nginx/README.dynamic.</span><br><span class=\"line\">include /usr/share/nginx/modules/*.conf;</span><br><span class=\"line\"></span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">    worker_connections 1024;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class=\"line\">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class=\"line\">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">    access_log  /var/log/nginx/access.log  main;</span><br><span class=\"line\"></span><br><span class=\"line\">    sendfile            on;</span><br><span class=\"line\">    tcp_nopush          on;</span><br><span class=\"line\">    tcp_nodelay         on;</span><br><span class=\"line\">    keepalive_timeout   65;</span><br><span class=\"line\">    types_hash_max_size 2048;</span><br><span class=\"line\"></span><br><span class=\"line\">    include             /etc/nginx/mime.types;</span><br><span class=\"line\">    default_type        application/octet-stream;</span><br><span class=\"line\"></span><br><span class=\"line\">    # Load modular configuration files from the /etc/nginx/conf.d directory.</span><br><span class=\"line\">    # See http://nginx.org/en/docs/ngx_core_module.html#include</span><br><span class=\"line\">    # for more information.</span><br><span class=\"line\">    include /etc/nginx/conf.d/*.conf;</span><br><span class=\"line\">    </span><br><span class=\"line\">    upstream cluster_server &#123;</span><br><span class=\"line\">        server 192.168.56.102:8080;</span><br><span class=\"line\">            server 192.168.56.103:8080;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">        listen       80 default_server;</span><br><span class=\"line\">        listen       [::]:80 default_server;</span><br><span class=\"line\">        server_name  tomcat.cluster.com;</span><br><span class=\"line\">        root         /usr/share/nginx/html;</span><br><span class=\"line\"></span><br><span class=\"line\">        # Load configuration files for the default server block.</span><br><span class=\"line\">        include /etc/nginx/default.d/*.conf;</span><br><span class=\"line\"></span><br><span class=\"line\">        location / &#123;</span><br><span class=\"line\">        proxy_pass http://cluster_server;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        error_page 404 /404.html;</span><br><span class=\"line\">            location = /40x.html &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        error_page 500 502 503 504 /50x.html;</span><br><span class=\"line\">            location = /50x.html &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Step-5-Proxy-Permission-denied\"><a href=\"#Step-5-Proxy-Permission-denied\" class=\"headerlink\" title=\"Step 5. Proxy Permission denied\"></a>Step 5. Proxy Permission denied</h2><p>小弟我在執行過程中遇見這個問題，那麼解決方式只要使用以下指令，打開權限即可。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setsebool -P httpd_can_network_connect 1</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Step-6-Restart-Nginx\"><a href=\"#Step-6-Restart-Nginx\" class=\"headerlink\" title=\"Step 6. Restart Nginx\"></a>Step 6. Restart Nginx</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart nginx</span><br></pre></td></tr></table></figure>\n<h1 id=\"Tomcat-Setting\"><a href=\"#Tomcat-Setting\" class=\"headerlink\" title=\"Tomcat Setting\"></a>Tomcat Setting</h1><p>我沒有設定Tomcat呢…我只是要做最簡單的Load Balance，因此Tomcat不理他…然後Tomcat安裝方式網路上有很多!! XD</p>\n<h1 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h1><h2 id=\"How-To-Install-Nginx-on-CentOS-7\"><a href=\"#How-To-Install-Nginx-on-CentOS-7\" class=\"headerlink\" title=\"How To Install Nginx on CentOS 7\"></a><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-nginx-on-centos-7\" target=\"_blank\" rel=\"noopener\">How To Install Nginx on CentOS 7</a></h2><h2 id=\"Using-nginx-as-HTTP-load-balancer\"><a href=\"#Using-nginx-as-HTTP-load-balancer\" class=\"headerlink\" title=\"Using nginx as HTTP load balancer\"></a><a href=\"http://nginx.org/en/docs/http/load_balancing.html\" target=\"_blank\" rel=\"noopener\">Using nginx as HTTP load balancer</a></h2><h2 id=\"Nginx與Apache比較\"><a href=\"#Nginx與Apache比較\" class=\"headerlink\" title=\"Nginx與Apache比較\"></a><a href=\"https://www.hellosanta.com.tw/Drupal%E7%B6%B2%E7%AB%99%E8%A8%AD%E8%A8%88/nginx%E8%88%87apache%E6%AF%94%E8%BC%83\" target=\"_blank\" rel=\"noopener\">Nginx與Apache比較</a></h2><h2 id=\"13-Permission-denied-while-connecting-to-upstream-nginx\"><a href=\"#13-Permission-denied-while-connecting-to-upstream-nginx\" class=\"headerlink\" title=\"(13: Permission denied) while connecting to upstream:[nginx]\"></a><a href=\"https://stackoverflow.com/questions/23948527/13-permission-denied-while-connecting-to-upstreamnginx\" target=\"_blank\" rel=\"noopener\">(13: Permission denied) while connecting to upstream:[nginx]</a></h2>"}],"PostAsset":[{"_id":"source/_posts/Android-SpriteImage介紹/test2.png","slug":"test2.png","post":"cjljgj0rd000fskvcso4vt4y0","modified":0,"renderable":0},{"_id":"source/_posts/SpringMVC-猴子也學不會的系列文-1/bowser.veiw.png","slug":"bowser.veiw.png","post":"cjljgj0rv0013skvcn208ndbr","modified":0,"renderable":0},{"_id":"source/_posts/SpringMVC-猴子也學不會的系列文-2/bowser.view.png","slug":"bowser.view.png","post":"cjljgj0ry0018skvcawpf3iwq","modified":0,"renderable":0},{"_id":"source/_posts/SpringMVC-猴子也學不會的系列文-3/console.view.png","slug":"console.view.png","post":"cjljgj0rz001askvc40yg098g","modified":0,"renderable":0},{"_id":"source/_posts/Android-Toolbar與ActionMode的運用/actionMode_0.png","slug":"actionMode_0.png","post":"cjljgj0rb000cskvcofis9yof","modified":0,"renderable":0},{"_id":"source/_posts/Android-Toolbar與ActionMode的運用/actionMode_1.png","slug":"actionMode_1.png","post":"cjljgj0rb000cskvcofis9yof","modified":0,"renderable":0},{"_id":"source/_posts/Android-自製剪裁圖片元件-CropImageView/Screenshot_2016-01-30-14-19-52.png","slug":"Screenshot_2016-01-30-14-19-52.png","post":"cjljgj0rk000pskvc44chnkz7","modified":0,"renderable":0},{"_id":"source/_posts/Android-自製剪裁圖片元件-CropImageView/Screenshot_2016-01-30-14-20-02.png","slug":"Screenshot_2016-01-30-14-20-02.png","post":"cjljgj0rk000pskvc44chnkz7","modified":0,"renderable":0},{"_id":"source/_posts/Android-MVP的簡單介紹與使用/MVC_ICON.jpg","slug":"MVC_ICON.jpg","post":"cjljgj0qz0005skvc3586kop7","modified":0,"renderable":0},{"_id":"source/_posts/Android-MVP的簡單介紹與使用/MVP_ICON.jpg","slug":"MVP_ICON.jpg","post":"cjljgj0qz0005skvc3586kop7","modified":0,"renderable":0},{"_id":"source/_posts/Android-MVP的簡單介紹與使用/Usual_MVC.jpg","slug":"Usual_MVC.jpg","post":"cjljgj0qz0005skvc3586kop7","modified":0,"renderable":0},{"_id":"source/_posts/Android-MyChartLib-圖表系統/columnChartView.png","slug":"columnChartView.png","post":"cjljgj0r10006skvchpt925sh","modified":0,"renderable":0},{"_id":"source/_posts/Android-MyChartLib-圖表系統/lineChartView.png","slug":"lineChartView.png","post":"cjljgj0r10006skvchpt925sh","modified":0,"renderable":0},{"_id":"source/_posts/Android-MyChartLib-圖表系統/pieChartView.png","slug":"pieChartView.png","post":"cjljgj0r10006skvchpt925sh","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cjljgj0r10006skvchpt925sh","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0r90009skvc41jwfh88"},{"post_id":"cjljgj0qk0000skvcag2f5xc5","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0ra000bskvc0nio2m8b"},{"post_id":"cjljgj0r60007skvcyxq5j1qc","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0rd000eskvc38jxe3t3"},{"post_id":"cjljgj0r9000askvcspm3dahg","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0re000gskvc3b9nvnxb"},{"post_id":"cjljgj0qu0002skvclu6ft2qg","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0rf000iskvc92zhyt4w"},{"post_id":"cjljgj0rb000cskvcofis9yof","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0rh000kskvchfh6hue8"},{"post_id":"cjljgj0rd000fskvcso4vt4y0","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0ri000mskvc0n2ik448"},{"post_id":"cjljgj0qz0005skvc3586kop7","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0rj000oskvcg1tjhor2"},{"post_id":"cjljgj0re000hskvcpj1kljtt","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0rn000rskvc08oo6dey"},{"post_id":"cjljgj0rg000jskvchme79irq","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0ro000tskvcllv2vckz"},{"post_id":"cjljgj0rh000lskvctp4pse84","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0rq000vskvccovprdqh"},{"post_id":"cjljgj0rk000pskvc44chnkz7","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0rr000yskvcroocr1cl"},{"post_id":"cjljgj0rp000uskvcfdakdfi1","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0rt0010skvcdql5yccc"},{"post_id":"cjljgj0ri000nskvckqlfi4hq","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0ru0012skvcuouoqf9a"},{"post_id":"cjljgj0ri000nskvckqlfi4hq","tag_id":"cjljgj0rm000qskvcky6s2i7l","_id":"cjljgj0rw0015skvcd424lof7"},{"post_id":"cjljgj0rq000wskvcjkalg2m7","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0rx0017skvcm9k4yuya"},{"post_id":"cjljgj0rs000zskvcetus7c6z","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0rz0019skvczdw6f3ud"},{"post_id":"cjljgj0rs000zskvcetus7c6z","tag_id":"cjljgj0rm000qskvcky6s2i7l","_id":"cjljgj0s1001cskvc8s3fatry"},{"post_id":"cjljgj0rn000sskvc5z9621ls","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0s3001eskvcc6iilze2"},{"post_id":"cjljgj0rn000sskvc5z9621ls","tag_id":"cjljgj0rm000qskvcky6s2i7l","_id":"cjljgj0s4001gskvcjmwnwxyf"},{"post_id":"cjljgj0rw0016skvccp5t51r8","tag_id":"cjljgj0qx0004skvcjuqp0biw","_id":"cjljgj0s5001hskvckb6a6way"},{"post_id":"cjljgj0rt0011skvc3j7x6wbe","tag_id":"cjljgj0rw0014skvcy8070srx","_id":"cjljgj0s6001jskvcdopt4vfa"},{"post_id":"cjljgj0rv0013skvcn208ndbr","tag_id":"cjljgj0s0001bskvcm6epueks","_id":"cjljgj0s6001kskvc96ztxy6k"},{"post_id":"cjljgj0rv0013skvcn208ndbr","tag_id":"cjljgj0s4001fskvcq880diw9","_id":"cjljgj0s7001mskvc7af00r8q"},{"post_id":"cjljgj0ry0018skvcawpf3iwq","tag_id":"cjljgj0s0001bskvcm6epueks","_id":"cjljgj0s8001oskvch81gfi4s"},{"post_id":"cjljgj0ry0018skvcawpf3iwq","tag_id":"cjljgj0s4001fskvcq880diw9","_id":"cjljgj0s8001pskvc5ykwl2zs"},{"post_id":"cjljgj0rz001askvc40yg098g","tag_id":"cjljgj0s0001bskvcm6epueks","_id":"cjljgj0sa001sskvczrhfrvpc"},{"post_id":"cjljgj0rz001askvc40yg098g","tag_id":"cjljgj0s4001fskvcq880diw9","_id":"cjljgj0sa001tskvc39ncq6je"},{"post_id":"cjljgj0s2001dskvcc4pv5d38","tag_id":"cjljgj0s9001rskvctk1pji49","_id":"cjljgj0sa001uskvcuyruwx15"},{"post_id":"cjljgj0yl001vskvcwnffipfj","tag_id":"cjljgj0yo001wskvclxbleaqf","_id":"cjljgj0yq001yskvcd74hjwnk"},{"post_id":"cjljgj0yl001vskvcwnffipfj","tag_id":"cjljgj0yp001xskvcjmgucimi","_id":"cjljgj0yr001zskvclurd4obr"}],"Tag":[{"name":"Android","_id":"cjljgj0qx0004skvcjuqp0biw"},{"name":"SQLite","_id":"cjljgj0rm000qskvcky6s2i7l"},{"name":"Redis","_id":"cjljgj0rw0014skvcy8070srx"},{"name":"Spring","_id":"cjljgj0s0001bskvcm6epueks"},{"name":"SpringMVC","_id":"cjljgj0s4001fskvcq880diw9"},{"name":"生活","_id":"cjljgj0s9001rskvctk1pji49"},{"name":"Nginx","_id":"cjljgj0yo001wskvclxbleaqf"},{"name":"Tomcat","_id":"cjljgj0yp001xskvcjmgucimi"}]}}